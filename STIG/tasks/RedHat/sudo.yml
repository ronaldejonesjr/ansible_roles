################################################################################
# Sudo
################################################################################

- name: "RHEL 8 must restrict privilege elevation to authorized personnel."
  tags:
      - V237641
      - medium
      - RHEL-08-010382
      - SV-237641r646893_rule
      - C-40860r646891_chk
      - F-40823r646892_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The sudo command allows a user to execute programs with elevated (administrator) privileges. It
          prompts the user for their password and confirms your request to execute a command by checking a
          file, called sudoers. If the "sudoers" file is not configured correctly, any user defined on the
          system can initiate privileged actions on the target system.
        Check:
          Verify the "sudoers" file restricts sudo access to authorized personnel.
          $ sudo grep -iw 'ALL' /etc/sudoers /etc/sudoers.d/*

          If the either of the following entries are returned, this is a finding:
          ALL     ALL=(ALL) ALL
          ALL     ALL=(ALL:ALL) ALL
        Fix:
          Remove the following entries from the sudoers file:
          ALL     ALL=(ALL) ALL
          ALL     ALL=(ALL:ALL) ALL

- name: "RHEL 8 must use the invoking user's password for privilege escalation when using \"sudo\"."
  tags:
      - V237642
      - medium
      - RHEL-08-010383
      - SV-237642r861086_rule
      - C-40861r858759_chk
      - F-40824r858760_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The sudoers security policy requires that users authenticate themselves before they can use sudo.
          When sudoers requires authentication, it validates the invoking user's credentials. If the rootpw,
          targetpw, or runaspw flags are defined and not disabled, by default the operating system will prompt
          the invoking user for the "root" user password.
          For more information on each of the listed configurations, reference the sudoers(5) manual page.
        Check:
          Verify that the sudoers security policy is configured to use the invoking user's password for
          privilege escalation.

          $ sudo egrep -ir '(rootpw|targetpw|runaspw)' /etc/sudoers /etc/sudoers.d* | grep -v '#'

          /etc/sudoers:Defaults !targetpw
          /etc/sudoers:Defaults !rootpw
          /etc/sudoers:Defaults !runaspw

          If conflicting results are returned, this is a finding.
          If "Defaults !targetpw" is not defined, this is a finding.
          If "Defaults !rootpw" is not defined, this is a finding.
          If "Defaults !runaspw" is not defined, this is a finding.
        Fix:
          Define the following in the Defaults section of the /etc/sudoers file or a configuration file in the
          /etc/sudoers.d/ directory:
          Defaults !targetpw
          Defaults !rootpw
          Defaults !runaspw

          Remove any configurations that conflict with the above from the following locations:
          /etc/sudoers
          /etc/sudoers.d/

- name: "RHEL 8 must require users to provide a password for privilege escalation."
  tags:
      - V230271
      - medium
      - RHEL-08-010380
      - SV-230271r854026_rule
      - C-32940r854024_chk
      - F-32915r854025_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without reauthentication, users may access resources or perform tasks for which they do not have
          authorization.

          When operating systems provide the capability to escalate a functional capability, it is critical
          the user reauthenticate.

          Satisfies: SRG-OS-000373-GPOS-00156, SRG-OS-000373-GPOS-00157, SRG-OS-000373-GPOS-00158
        Check:
          Verify that "/etc/sudoers" has no occurrences of "NOPASSWD".

          Check that the "/etc/sudoers" file has no occurrences of "NOPASSWD" by running the following
          command:

          $ sudo grep -i nopasswd /etc/sudoers /etc/sudoers.d/*

          %admin ALL=(ALL) NOPASSWD: ALL

          If any occurrences of "NOPASSWD" are returned from the command and have not been documented with the
          ISSO as an organizationally defined administrative group utilizing MFA, this is a finding.
        Fix:
          Remove any occurrence of "NOPASSWD" found in "/etc/sudoers" file or files in the "/etc/sudoers.d"
          directory.

- name: "RHEL 8 must require users to reauthenticate for privilege escalation."
  tags:
      - V230272
      - medium
      - RHEL-08-010381
      - SV-230272r854027_rule
      - C-32941r567562_chk
      - F-32916r567563_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without reauthentication, users may access resources or perform tasks for which they do not have
          authorization.

          When operating systems provide the capability to escalate a functional capability, it is critical
          the user reauthenticate.

          Satisfies: SRG-OS-000373-GPOS-00156, SRG-OS-000373-GPOS-00157, SRG-OS-000373-GPOS-00158
        Check:
          Verify that "/etc/sudoers" has no occurrences of "!authenticate".

          Check that the "/etc/sudoers" file has no occurrences of "!authenticate" by running the following
          command:

          $ sudo grep -i !authenticate /etc/sudoers /etc/sudoers.d/*

          If any occurrences of "!authenticate" return from the command, this is a finding.
        Fix:
          Remove any occurrence of "!authenticate" found in "/etc/sudoers" file or files in the
          "/etc/sudoers.d" directory.

- name: "RHEL 8 must require re-authentication when using the \"sudo\" command."
  tags:
      - V237643
      - medium
      - RHEL-08-010384
      - SV-237643r861088_rule
      - C-40862r861087_chk
      - F-40825r858763_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without re-authentication, users may access resources or perform tasks for which they do not have
          authorization.

          When operating systems provide the capability to escalate a functional capability, it is critical
          the organization requires the user to re-authenticate when using the "sudo" command.

          If the value is set to an integer less than 0, the user's time stamp will not expire and the user
          will not have to re-authenticate for privileged actions until the user's session is terminated.
        Check:
          Verify the operating system requires re-authentication when using the "sudo" command to elevate
          privileges.

          $ sudo grep -ir 'timestamp_timeout' /etc/sudoers /etc/sudoers.d
          /etc/sudoers:Defaults timestamp_timeout=0

          If conflicting results are returned, this is a finding.

          If "timestamp_timeout" is set to a negative number, is commented out, or no results are returned,
          this is a finding.
        Fix:
          Configure the "sudo" command to require re-authentication.
          Edit the /etc/sudoers file:
          $ sudo visudo

          Add or modify the following line:
          Defaults timestamp_timeout=[value]
          Note: The "[value]" must be a number that is greater than or equal to "0".

          Remove any duplicate or conflicting lines from /etc/sudoers and /etc/sudoers.d/ files.

- name: "RHEL 8 must specify the default \"include\" directory for the /etc/sudoers file."
  tags:
      - V251711
      - medium
      - RHEL-08-010379
      - SV-251711r833385_rule
      - C-55148r833384_chk
      - F-55102r809356_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "sudo" command allows authorized users to run programs (including shells) as other users, system
          users, and root. The "/etc/sudoers" file is used to configure authorized "sudo" users as well as the
          programs they are allowed to run. Some configuration options in the "/etc/sudoers" file allow
          configured users to run programs without re-authenticating. Use of these configuration options makes
          it easier for one compromised account to be used to compromise other accounts.

          It is possible to include other sudoers files from within the sudoers file currently being parsed
          using the #include and #includedir directives. When sudo reaches this line it will suspend
          processing of the current file (/etc/sudoers) and switch to the specified file/directory. Once the
          end of the included file(s) is reached, the rest of /etc/sudoers will be processed. Files that are
          included may themselves include other files. A hard limit of 128 nested include files is enforced to
          prevent include file loops.
        Check:
          Note: If the "include" and "includedir" directives are not present in the /etc/sudoers file, this
          requirement is not applicable.

          Verify the operating system specifies only the default "include" directory for the /etc/sudoers file
          with the following command:

          $ sudo grep include /etc/sudoers

          #includedir /etc/sudoers.d

          If the results are not "/etc/sudoers.d" or additional files or directories are specified, this is a
          finding.

          Verify the operating system does not have nested "include" files or directories within the
          /etc/sudoers.d directory with the following command:

          $ sudo grep -r include /etc/sudoers.d

          If results are returned, this is a finding.
        Fix:
          Configure the /etc/sudoers file to only include the /etc/sudoers.d directory.

          Edit the /etc/sudoers file with the following command:

          $ sudo visudo

          Add or modify the following line:
          #includedir /etc/sudoers.d
