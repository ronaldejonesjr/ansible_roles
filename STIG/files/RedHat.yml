---

################################################################################
# /etc/login.defs
################################################################################

- name: "The RHEL 8 shadow password suite must be configured to use a sufficient number of hashing rounds."
  tags:
      - V230233
      - medium
      - RHEL-08-010130
      - SV-230233r809273_rule
      - C-32902r809271_chk
      - F-32877r809272_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The system must use a strong hashing algorithm to store the password. The system must use a
          sufficient number of hashing rounds to ensure the required level of entropy.

          Passwords need to be protected at all times, and encryption is the standard method for protecting
          passwords. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily
          compromised.
        Check:
          Check that a minimum number of hash rounds is configured by running the following command:

          $ sudo egrep "^SHA_CRYPT_" /etc/login.defs

          If only one of "SHA_CRYPT_MIN_ROUNDS" or "SHA_CRYPT_MAX_ROUNDS" is set, and this value is below
          "5000", this is a finding.

          If both "SHA_CRYPT_MIN_ROUNDS" and "SHA_CRYPT_MAX_ROUNDS" are set, and the highest value for either
          is below "5000", this is a finding.
        Fix:
          Configure RHEL 8 to encrypt all stored passwords with a strong cryptographic hash.

          Edit/modify the following line in the "/etc/login.defs" file and set "SHA_CRYPT_MIN_ROUNDS" to a
          value no lower than "5000":

          SHA_CRYPT_MIN_ROUNDS 5000

- name: "All RHEL 8 local interactive user accounts must be assigned a home directory upon creation."
  tags:
      - V230324
      - medium
      - RHEL-08-010760
      - SV-230324r627750_rule
      - C-32993r567718_chk
      - F-32968r567719_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If local interactive users are not assigned a valid home directory, there is no place for the
          storage and control of files they should own.
        Check:
          Verify all local interactive users on RHEL 8 are assigned a home directory upon creation with the
          following command:

          $ sudo grep -i create_home /etc/login.defs

          CREATE_HOME yes

          If the value for "CREATE_HOME" parameter is not set to "yes", the line is missing, or the line is
          commented out, this is a finding.
        Fix:
          Configure RHEL 8 to assign home directories to all new local interactive users by setting the
          "CREATE_HOME" parameter in "/etc/login.defs" to "yes" as follows.

          CREATE_HOME yes

- name: "RHEL 8 passwords for new users or password changes must have a 24 hours/1 day minimum password lifetime restriction in /etc/login.defs."
  tags:
      - V230365
      - medium
      - RHEL-08-020190
      - SV-230365r858727_rule
      - C-33034r567841_chk
      - F-33009r567842_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Enforcing a minimum password lifetime helps to prevent repeated password changes to defeat the
          password reuse or history enforcement requirement. If users are allowed to immediately and
          continually change their password, the password could be repeatedly changed in a short period of
          time to defeat the organization's policy regarding password reuse.
        Check:
          Verify the operating system enforces 24 hours/1 day as the minimum password lifetime for new user
          accounts.

          Check for the value of "PASS_MIN_DAYS" in "/etc/login.defs" with the following command:

          $ sudo grep -i pass_min_days /etc/login.defs
          PASS_MIN_DAYS 1

          If the "PASS_MIN_DAYS" parameter value is not "1" or greater, or is commented out, this is a
          finding.
        Fix:
          Configure the operating system to enforce 24 hours/1 day as the minimum password lifetime.

          Add the following line in "/etc/login.defs" (or modify the line to have the required value):

          PASS_MIN_DAYS 1

- name: "RHEL 8 user account passwords must have a 60-day maximum password lifetime restriction."
  tags:
      - V230366
      - medium
      - RHEL-08-020200
      - SV-230366r646878_rule
      - C-33035r646877_chk
      - F-33010r567845_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Any password, no matter how complex, can eventually be cracked. Therefore, passwords need to be
          changed periodically. If RHEL 8 does not limit the lifetime of passwords and force users to change
          their passwords, there is the risk that RHEL 8 passwords could be compromised.
        Check:
          Verify that RHEL 8 enforces a 60-day maximum password lifetime for new user accounts by running the
          following command:

          $ sudo grep -i pass_max_days /etc/login.defs
          PASS_MAX_DAYS 60

          If the "PASS_MAX_DAYS" parameter value is greater than "60", or commented out, this is a finding.
        Fix:
          Configure RHEL 8 to enforce a 60-day maximum password lifetime.

          Add, or modify the following line in the "/etc/login.defs" file:

          PASS_MAX_DAYS 60

- name: "RHEL 8 passwords for new users must have a minimum of 15 characters."
  tags:
      - V230370
      - medium
      - RHEL-08-020231
      - SV-230370r627750_rule
      - C-33039r567856_chk
      - F-33014r567857_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The shorter the password, the lower the number of possible combinations that need to be tested
          before the password is compromised.

          Password complexity, or strength, is a measure of the effectiveness of a password in resisting
          attempts at guessing and brute-force attacks. Password length is one factor of several that helps to
          determine strength and how long it takes to crack a password. Use of more characters in a password
          helps to increase exponentially the time and/or resources required to compromise the password.

          The DoD minimum password requirement is 15 characters.
        Check:
          Verify that RHEL 8 enforces a minimum 15-character password length for new user accounts by running
          the following command:

          $ sudo grep -i  pass_min_len /etc/login.defs

          PASS_MIN_LEN 15

          If the "PASS_MIN_LEN" parameter value is less than "15", or commented out, this is a finding.
        Fix:
          Configure operating system to enforce a minimum 15-character password length for new user accounts.

          Add, or modify the following line in the "/etc/login.defs" file:

          PASS_MIN_LEN 15

- name: "RHEL 8 must enforce a delay of at least four seconds between logon prompts following a failed logon attempt."
  tags:
      - V230378
      - medium
      - RHEL-08-020310
      - SV-230378r627750_rule
      - C-33047r567880_chk
      - F-33022r567881_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Configuring the operating system to implement organization-wide security implementation guides and
          security checklists verifies compliance with federal standards and establishes a common security
          baseline across the DoD that reflects the most restrictive security posture consistent with
          operational requirements.

          Configuration settings are the set of parameters that can be changed in hardware, software, or
          firmware components of the system that affect the security posture and/or functionality of the
          system. Security-related parameters are those parameters impacting the security state of the system,
          including the parameters required to satisfy other security control requirements. Security-related
          parameters include, for example, registry settings; account, file, and directory permission
          settings; and settings for functions, ports, protocols, services, and remote connections.
        Check:
          Verify the operating system enforces a delay of at least four seconds between console logon prompts
          following a failed logon attempt with the following command:

          $ sudo grep -i fail_delay /etc/login.defs

          FAIL_DELAY 4

          If the value of "FAIL_DELAY" is not set to "4" or greater, or the line is commented out, this is a
          finding.
        Fix:
          Configure the operating system to enforce a delay of at least four seconds between logon prompts
          following a failed console logon attempt.

          Modify the "/etc/login.defs" file to set the "FAIL_DELAY" parameter to "4" or greater:

          FAIL_DELAY 4

- name: "RHEL 8 must define default permissions for all authenticated users in such a way that the user can only read and modify their own files."
  tags:
      - V230383
      - medium
      - RHEL-08-020351
      - SV-230383r627750_rule
      - C-33052r567895_chk
      - F-33027r567896_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Setting the most restrictive default permissions ensures that when new accounts are created, they do
          not have unnecessary access.
        Check:
          Verify the operating system defines default permissions for all authenticated users in such a way
          that the user can only read and modify their own files.

          Check for the value of the "UMASK" parameter in "/etc/login.defs" file with the following command:

          Note: If the value of the "UMASK" parameter is set to "000" in "/etc/login.defs" file, the Severity
          is raised to a CAT I.

          # grep -i umask /etc/login.defs

          UMASK 077

          If the value for the "UMASK" parameter is not "077", or the "UMASK" parameter is missing or is
          commented out, this is a finding.
        Fix:
          Configure the operating system to define default permissions for all authenticated users in such a
          way that the user can only read and modify their own files.

          Add or edit the line for the "UMASK" parameter in "/etc/login.defs" file to "077":

          UMASK 077

################################################################################
# sssd.service / pam.d
################################################################################

- name: "RHEL 8 must prevent system messages from being presented when three unsuccessful logon attempts occur."
  tags:
      - V230340
      - medium
      - RHEL-08-020018
      - SV-230340r627750_rule
      - C-33009r567766_chk
      - F-32984r567767_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          RHEL 8 can utilize the "pam_faillock.so" for this purpose. Note that manual changes to the listed
          files may be overwritten by the "authselect" program.

          From "Pam_Faillock" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Check that the system prevents informative messages from being presented to the user pertaining to
          logon information with the following commands:

          Note: If the System Administrator demonstrates the use of an approved centralized account management
          method that locks an account after three unsuccessful logon attempts within a period of 15 minutes,
          this requirement is not applicable.

          Note: This check applies to RHEL versions 8.0 and 8.1, if the system is RHEL version 8.2 or newer,
          this check is not applicable.

          $ sudo grep pam_faillock.so /etc/pam.d/password-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "silent" option is missing from the "preauth" line with the "pam_faillock.so" module, this is
          a finding.

          $ sudo grep pam_faillock.so /etc/pam.d/system-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "silent" option is missing from the "preauth" line with the "pam_faillock.so" module, this is
          a finding.
        Fix:
          Configure the operating system to prevent informative messages from being presented at logon
          attempts.

          Add/Modify the appropriate sections of the "/etc/pam.d/system-auth" and "/etc/pam.d/password-auth"
          files to match the following lines:

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8 must log user name information when unsuccessful logon attempts occur."
  tags:
      - V230342
      - medium
      - RHEL-08-020020
      - SV-230342r646872_rule
      - C-33011r646871_chk
      - F-32986r567773_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          RHEL 8 can utilize the "pam_faillock.so" for this purpose. Note that manual changes to the listed
          files may be overwritten by the "authselect" program.

          From "Pam_Faillock" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module. Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Check that the system logs user name information when unsuccessful logon attempts occur with the
          following commands:

          If the system is RHEL version 8.2 or newer, this check is not applicable.

          Note: If the System Administrator demonstrates the use of an approved centralized account management
          method that locks an account after three unsuccessful logon attempts within a period of 15 minutes,
          this requirement is not applicable.

          $ sudo grep pam_faillock.so /etc/pam.d/password-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "audit" option is missing from the "preauth" line with the "pam_faillock.so" module, this is
          a finding.

          $ sudo grep pam_faillock.so /etc/pam.d/system-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "audit" option is missing from the "preauth" line with the "pam_faillock.so" module, this is
          a finding.
        Fix:
          Configure the operating system to log user name information when unsuccessful logon attempts occur.

          Add/Modify the appropriate sections of the "/etc/pam.d/system-auth" and "/etc/pam.d/password-auth"
          files to match the following lines:

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8 must include root when automatically locking an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period."
  tags:
      - V230344
      - medium
      - RHEL-08-020022
      - SV-230344r646874_rule
      - C-33013r646873_chk
      - F-32988r567779_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          RHEL 8 can utilize the "pam_faillock.so" for this purpose. Note that manual changes to the listed
          files may be overwritten by the "authselect" program.

          From "Pam_Faillock" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module. Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Check that the system includes the root account when locking an account after three unsuccessful
          logon attempts within a period of 15 minutes with the following commands:

          If the system is RHEL version 8.2 or newer, this check is not applicable.

          Note: If the System Administrator demonstrates the use of an approved centralized account management
          method that locks an account after three unsuccessful logon attempts within a period of 15 minutes,
          this requirement is not applicable.

          $ sudo grep pam_faillock.so /etc/pam.d/password-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "even_deny_root" option is missing from the "preauth" line with the "pam_faillock.so" module,
          this is a finding.

          $ sudo grep pam_faillock.so /etc/pam.d/system-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "even_deny_root" option is missing from the "preauth" line with the "pam_faillock.so" module,
          this is a finding.
        Fix:
          Configure the operating system to include root when locking an account after three unsuccessful
          logon attempts occur in 15 minutes.

          Add/Modify the appropriate sections of the "/etc/pam.d/system-auth" and "/etc/pam.d/password-auth"
          files to match the following lines:

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8 must ensure the password complexity module is enabled in the password-auth file."
  tags:
      - V230356
      - medium
      - RHEL-08-020100
      - SV-230356r809379_rule
      - C-33025r809285_chk
      - F-33000r809286_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks. "pwquality" enforces complex password
          construction configuration and has the ability to limit brute-force attacks on the system.

          RHEL 8 utilizes "pwquality" as a mechanism to enforce password complexity. This is set in both:
          /etc/pam.d/password-auth
          /etc/pam.d/system-auth
        Check:
          Verify the operating system uses "pwquality" to enforce the password complexity rules.

          Check for the use of "pwquality" in the password-auth file with the following command:

          $ sudo cat /etc/pam.d/password-auth | grep pam_pwquality

          password required pam_pwquality.so

          If the command does not return a line containing the value "pam_pwquality.so", or the line is
          commented out, this is a finding.
        Fix:
          Configure the operating system to use "pwquality" to enforce password complexity rules.

          Add the following line to the "/etc/pam.d/password-auth" file (or modify the line to have the
          required value):

          password required pam_pwquality.so

- name: "RHEL 8 must not allow blank or null passwords in the password-auth file."
  tags:
      - V244541
      - high
      - RHEL-08-020332
      - SV-244541r743872_rule
      - C-47816r743870_chk
      - F-47773r743871_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If an account has an empty password, anyone could log on and run commands with the privileges of
          that account. Accounts with empty passwords should never be used in operational environments.
        Check:
          To verify that null passwords cannot be used, run the following command:

          $ sudo grep -i nullok /etc/pam.d/password-auth

          If output is produced, this is a finding.
        Fix:
          Remove any instances of the "nullok" option in the "/etc/pam.d/password-auth" file to prevent logons
          with empty passwords.

          Note: Manual changes to the listed file may be overwritten by the "authselect" program.

- name: "RHEL 8 systems below version 8.2 must configure SELinux context type to allow the use of a non-default faillock tally directory."
  tags:
      - V250316
      - medium
      - RHEL-08-020028
      - SV-250316r854080_rule
      - C-53750r793003_chk
      - F-53704r793004_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          From "Pam_Faillock" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable,
          a different tally directory must be set with the "dir" option.

          SELinux, enforcing a targeted policy, will require any non-default tally directory's security
          context type to match the default directory's security context type. Without updating the security
          context type, the pam_faillock module will not write failed login attempts to the non-default tally
          directory.
        Check:
          If the system does not have SELinux enabled and enforcing a targeted policy, or if the pam_faillock
          module is not configured for use, this requirement is not applicable.

          Note: This check applies to RHEL versions 8.0 and 8.1. If the system is RHEL version 8.2 or newer,
          this check is not applicable.

          Verify the location of the non-default tally directory for the pam_faillock module with the
          following command:

          $ sudo grep -w dir /etc/pam.d/password-auth

          auth   required   pam_faillock.so preauth dir=/var/log/faillock
          auth   required   pam_faillock.so authfail dir=/var/log/faillock

          Check the security context type of the non-default tally directory with the following command:

          $ sudo ls -Zd /var/log/faillock

          unconfined_u:object_r:faillog_t:s0 /var/log/faillock

          If the security context type of the non-default tally directory is not "faillog_t", this is a
          finding.
        Fix:
          Configure RHEL 8 to allow the use of a non-default faillock tally directory while SELinux enforces a
          targeted policy.

          Update the /etc/selinux/targeted/contexts/files/file_contexts.local with "faillog_t" context type
          for the non-default faillock tally directory with the following command:

          $ sudo semanage fcontext -a -t faillog_t "/var/log/faillock(/.*)?"

          Next, update the context type of the non-default faillock directory/subdirectories and files with
          the following command:

          $ sudo restorecon -R -v /var/log/faillock

- name: "RHEL 8 must ensure the password complexity module is enabled in the system-auth file."
  tags:
      - V251713
      - medium
      - RHEL-08-020101
      - SV-251713r810407_rule
      - C-55150r810405_chk
      - F-55104r810406_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks. "pwquality" enforces complex password
          construction configuration and has the ability to limit brute-force attacks on the system.

          RHEL 8 uses "pwquality" as a mechanism to enforce password complexity. This is set in both:
          /etc/pam.d/password-auth
          /etc/pam.d/system-auth
        Check:
          Verify the operating system uses "pwquality" to enforce the password complexity rules.

          Check for the use of "pwquality" in the system-auth file with the following command:

          $ sudo cat /etc/pam.d/system-auth | grep pam_pwquality

          password required pam_pwquality.so

          If the command does not return a line containing the value "pam_pwquality.so", or the line is
          commented out, this is a finding.
        Fix:
          Configure the operating system to use "pwquality" to enforce password complexity rules.

          Add the following line to the "/etc/pam.d/system-auth" file(or modify the line to have the required
          value):

          password required pam_pwquality.so

- name: "RHEL 8 systems below version 8.4 must ensure the password complexity module in the system-auth file is configured for three retries or less."
  tags:
      - V251714
      - medium
      - RHEL-08-020102
      - SV-251714r810410_rule
      - C-55151r810409_chk
      - F-55105r810408_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks. "pwquality" enforces complex password
          construction configuration and has the ability to limit brute-force attacks on the system.

          RHEL 8 uses "pwquality" as a mechanism to enforce password complexity. This is set in both:
          /etc/pam.d/password-auth
          /etc/pam.d/system-auth

          By limiting the number of attempts to meet the pwquality module complexity requirements before
          returning with an error, the system will audit abnormal attempts at password changes.
        Check:
          Note: This requirement applies to RHEL versions 8.0 through 8.3. If the system is RHEL version 8.4
          or newer, this requirement is not applicable.

          Verify the operating system is configured to limit the "pwquality" retry option to 3.

          Check for the use of the "pwquality" retry option in the system-auth file with the following
          command:

          $ sudo cat /etc/pam.d/system-auth | grep pam_pwquality

          password required pam_pwquality.so retry=3

          If the value of "retry" is set to "0" or greater than "3", this is a finding.
        Fix:
          Configure the operating system to limit the "pwquality" retry option to 3.

          Add the following line to the "/etc/pam.d/system-auth" file (or modify the line to have the required
          value):

          password required pam_pwquality.so retry=3

- name: "RHEL 8 systems below version 8.4 must ensure the password complexity module in the password-auth file is configured for three retries or less."
  tags:
      - V251715
      - medium
      - RHEL-08-020103
      - SV-251715r810412_rule
      - C-55152r809367_chk
      - F-55106r810411_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks. "pwquality" enforces complex password
          construction configuration and has the ability to limit brute-force attacks on the system.

          RHEL 8 uses "pwquality" as a mechanism to enforce password complexity. This is set in both:
          /etc/pam.d/password-auth
          /etc/pam.d/system-auth

          By limiting the number of attempts to meet the pwquality module complexity requirements before
          returning with an error, the system will audit abnormal attempts at password changes.
        Check:
          Note: This requirement applies to RHEL versions 8.0 through 8.3. If the system is RHEL version 8.4
          or newer, this requirement is not applicable.

          Verify the operating system is configured to limit the "pwquality" retry option to 3.

          Check for the use of the "pwquality" retry option in the password-auth file with the following
          command:

          $ sudo cat /etc/pam.d/password-auth | grep pam_pwquality

          password required pam_pwquality.so retry=3

          If the value of "retry" is set to "0" or greater than "3", this is a finding.
        Fix:
          Configure the operating system to limit the "pwquality" retry option to 3.

          Add the following line to the "/etc/pam.d/password-auth" file (or modify the line to have the
          required value):

          password required pam_pwquality.so retry=3

- name: "RHEL 8 systems, version 8.4 and above, must ensure the password complexity module is configured for three retries or less."
  tags:
      - V251716
      - medium
      - RHEL-08-020104
      - SV-251716r858737_rule
      - C-55153r858735_chk
      - F-55107r858736_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks. "pwquality" enforces complex password
          construction configuration and has the ability to limit brute-force attacks on the system.

          RHEL 8 utilizes "pwquality" as a mechanism to enforce password complexity. This is set in both:
          /etc/pam.d/password-auth
          /etc/pam.d/system-auth
          By limiting the number of attempts to meet the pwquality module complexity requirements before
          returning with an error, the system will audit abnormal attempts at password changes.
        Check:
          Note: This requirement applies to RHEL versions 8.4 or newer. If the system is RHEL below version
          8.4, this requirement is not applicable.

          Verify the operating system is configured to limit the "pwquality" retry option to 3.

          Check for the use of the "pwquality" retry option with the following command:

          $ sudo grep -r retry /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:retry = 3

          If the value of "retry" is set to "0" or greater than "3", is commented out or missing, this is a
          finding.

          If conflicting results are returned, this is a finding.

          Check for the use of the "pwquality" retry option in the system-auth and password-auth files with
          the following command:

          $ sudo grep pwquality /etc/pam.d/system-auth /etc/pam.d/password-auth | grep retry

          If the command returns any results, this is a finding.
        Fix:
          Configure the operating system to limit the "pwquality" retry option to 3.

          Add the following line to the "/etc/security/pwquality.conf" file(or modify the line to have the
          required value):

          retry = 3

          Remove any configurations that conflict with the above value.

- name: "RHEL 8 must be configured in the system-auth file to prohibit password reuse for a minimum of five generations."
  tags:
      - V251717
      - medium
      - RHEL-08-020221
      - SV-251717r858745_rule
      - C-55154r858744_chk
      - F-55108r809374_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Password complexity, or strength, is a measure of the effectiveness of a password in resisting
          attempts at guessing and brute-force attacks. If the information system or application allows the
          user to reuse their password consecutively when that password has exceeded its defined lifetime, the
          end result is a password that is not changed per policy requirements.

          RHEL 8 uses "pwhistory" consecutively as a mechanism to prohibit password reuse. This is set in
          both:
          /etc/pam.d/password-auth
          /etc/pam.d/system-auth.

          Note that manual changes to the listed files may be overwritten by the "authselect" program.
        Check:
          Verify the operating system is configured in the system-auth file to prohibit password reuse for a
          minimum of five generations.

          Check for the value of the "remember" argument in "/etc/pam.d/system-auth" with the following
          command:

          $ sudo grep -i remember /etc/pam.d/system-auth

          password required pam_pwhistory.so use_authtok remember=5 retry=3

          If the line containing "pam_pwhistory.so" does not have the "remember" module argument set, is
          commented out, or the value of the "remember" module argument is set to less than "5", this is a
          finding.
        Fix:
          Configure the operating system in the system-auth file to prohibit password reuse for a minimum of
          five generations.

          Add the following line in "/etc/pam.d/system-auth" (or modify the line to have the required value):

          password required pam_pwhistory.so use_authtok remember=5 retry=3

- name: "RHEL 8 must prohibit the use of cached authentications after one day."
  tags:
      - V230376
      - medium
      - RHEL-08-020290
      - SV-230376r854036_rule
      - C-33045r567874_chk
      - F-33020r567875_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If cached authentication information is out-of-date, the validity of the authentication information
          may be questionable.

          RHEL 8 includes multiple options for configuring authentication, but this requirement will be focus
          on the System Security Services Daemon (SSSD). By default sssd does not cache credentials.
        Check:
          Verify that the SSSD prohibits the use of cached authentications after one day.

          Note: If smart card authentication is not being used on the system this item is Not Applicable.

          Check that SSSD allows cached authentications with the following command:

          $ sudo grep cache_credentials /etc/sssd/sssd.conf

          cache_credentials = true

          If "cache_credentials" is set to "false" or missing from the configuration file, this is not a
          finding and no further checks are required.

          If "cache_credentials" is set to "true", check that SSSD prohibits the use of cached authentications
          after one day with the following command:

          $ sudo grep offline_credentials_expiration  /etc/sssd/sssd.conf

          offline_credentials_expiration = 1

          If "offline_credentials_expiration" is not set to a value of "1", this is a finding.
        Fix:
          Configure the SSSD to prohibit the use of cached authentications after one day.

          Add or change the following line in "/etc/sssd/sssd.conf" just below the line "[pam]".

          offline_credentials_expiration = 1

- name: "RHEL 8 must implement certificate status checking for multifactor authentication."
  tags:
      - V230274
      - medium
      - RHEL-08-010400
      - SV-230274r858741_rule
      - C-32943r858740_chk
      - F-32918r809280_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Using an authentication device, such as a DoD Common Access Card (CAC) or token that is separate
          from the information system, ensures that even if the information system is compromised, credentials
          stored on the authentication device will not be affected.

          Multifactor solutions that require devices separate from information systems gaining access include,
          for example, hardware tokens providing time-based or challenge-response authenticators and smart
          cards such as the U.S. Government Personal Identity Verification (PIV) card and the DoD CAC.

          RHEL 8 includes multiple options for configuring certificate status checking, but for this
          requirement focuses on the System Security Services Daemon (SSSD). By default, sssd performs Online
          Certificate Status Protocol (OCSP) checking and certificate verification using a sha256 digest
          function.

          Satisfies: SRG-OS-000375-GPOS-00160, SRG-OS-000377-GPOS-00162
        Check:
          Verify the operating system implements certificate status checking for multifactor authentication.

          Note: If the System Administrator demonstrates the use of an approved alternate multifactor
          authentication method, this requirement is not applicable.

          Check to see if Online Certificate Status Protocol (OCSP) is enabled and using the proper digest
          value on the system with the following command:

          $ sudo grep certificate_verification /etc/sssd/sssd.conf /etc/sssd/conf.d/*.conf | grep -v "^#"

          certificate_verification = ocsp_dgst=sha1

          If the certificate_verification line is missing from the [sssd] section, or is missing
          "ocsp_dgst=sha1", ask the administrator to indicate what type of multifactor authentication is being
          utilized and how the system implements certificate status checking.  If there is no evidence of
          certificate status checking being used, this is a finding.
        Fix:
          Configure the operating system to implement certificate status checking for multifactor
          authentication.

          Review the "/etc/sssd/sssd.conf" file to determine if the system is configured to prevent OCSP or
          certificate verification.

          Add the following line to the [sssd] section of the "/etc/sssd/sssd.conf" file:

          certificate_verification = ocsp_dgst=sha1

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8 must map the authenticated identity to the user or group account for PKI-based authentication."
  tags:
      - V230355
      - medium
      - RHEL-08-020090
      - SV-230355r858743_rule
      - C-33024r858742_chk
      - F-32999r818835_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without mapping the certificate used to authenticate to the user account, the ability to determine
          the identity of the individual user or group will not be available for forensic analysis.

          There are various methods of mapping certificates to user/group accounts for RHEL 8. For the
          purposes of this requirement, the check and fix will account for Active Directory mapping. Some of
          the other possible methods include joining the system to a domain and utilizing a Red Hat idM
          server, or a local system mapping, where the system is not part of a domain.
        Check:
          Verify the certificate of the user or group is mapped to the corresponding user or group in the
          "sssd.conf" file with the following command:

          Note: If the System Administrator demonstrates the use of an approved alternate multifactor
          authentication method, this requirement is not applicable.

          $ sudo cat /etc/sssd/sssd.conf

          [sssd]
          config_file_version = 2
          services = pam, sudo, ssh
          domains = testing.test

          [pam]
          pam_cert_auth = True

          [domain/testing.test]
          id_provider = ldap

          [certmap/testing.test/rule_name]
          matchrule =<SAN>.*EDIPI@mil
          maprule = (userCertificate;binary={cert!bin})
          domains = testing.test

          If the certmap section does not exist, ask the System Administrator to indicate how certificates are
          mapped to accounts. If there is no evidence of certificate mapping, this is a finding.
        Fix:
          Configure the operating system to map the authenticated identity to the user or group account by
          adding or modifying the certmap section of the "/etc/sssd/sssd.conf file based on the following
          example:

          [certmap/testing.test/rule_name]
          matchrule =<SAN>.*EDIPI@mil
          maprule = (userCertificate;binary={cert!bin})
          domains = testing.test

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8 must be able to initiate directly a session lock for all connection types using smartcard when the smartcard is removed."
  tags:
      - V230351
      - medium
      - RHEL-08-020050
      - SV-230351r792899_rule
      - C-33020r792897_chk
      - F-32995r792898_fix
      - SRG-OS-000028-GPOS-00009
      - SRG-OS-000030-GPOS-00011
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          A session lock is a temporary action taken when a user stops work and moves away from the immediate
          physical vicinity of the information system but does not want to log out because of the temporary
          nature of the absence.

          The session lock is implemented at the point where session activity can be determined. Rather than
          be forced to wait for a period of time to expire before the user session can be locked, RHEL 8 needs
          to provide users with the ability to manually invoke a session lock so users can secure their
          session if it is necessary to temporarily vacate the immediate physical vicinity.

        Check:
          Verify the operating system enables a user's session lock until that user re-establishes access
          using established identification and authentication procedures with the following command:

          This requirement assumes the use of the RHEL 8 default graphical user interface, Gnome Shell. If the
          system does not have any graphical user interface installed, this requirement is Not Applicable.

          $ sudo grep -R removal-action /etc/dconf/db/*

          /etc/dconf/db/distro.d/20-authselect:removal-action='lock-screen'

          If the "removal-action='lock-screen'" setting is missing or commented out from the dconf database
          files, this is a finding.
        Fix:
          Configure the operating system to enable a user's session lock until that user re-establishes access
          using established identification and authentication procedures.

          Select/Create an authselect profile and incorporate the "with-smartcard-lock-on-removal" feature
          with the following example:

          $ sudo authselect select sssd with-smartcard with-smartcard-lock-on-removal

          Alternatively, the dconf settings can be edited in the /etc/dconf/db/* location.

          Edit or add the "[org/gnome/settings-daemon/peripherals/smartcard]" section of the database file and
          add or update the following lines:

          removal-action='lock-screen'

          Update the system databases:

          $ sudo dconf update

- name: "RHEL 8 must implement smart card logon for multifactor authentication for access to interactive accounts."
  tags:
      - V230372
      - medium
      - RHEL-08-020250
      - SV-230372r627750_rule
      - C-33041r567862_chk
      - F-33016r567863_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Using an authentication device, such as a Common Access Card (CAC) or token that is separate from
          the information system, ensures that even if the information system is compromised, that compromise
          will not affect credentials stored on the authentication device.

          Multifactor solutions that require devices separate from information systems gaining access include,
          for example, hardware tokens providing time-based or challenge-response authenticators and smart
          cards such as the U.S. Government Personal Identity Verification card and the DoD CAC.

          There are various methods of implementing multifactor authentication for RHEL 8. Some methods
          include a local system multifactor account mapping or joining the system to a domain and utilizing a
          Red Hat idM server or Microsoft Windows Active Directory server. Any of these methods will require
          that the client operating system handle the multifactor authentication correctly.

          Satisfies: SRG-OS-000105-GPOS-00052, SRG-OS-000106-GPOS-00053, SRG-OS-000107-GPOS-00054, SRG-
          OS-000108-GPOS-00055
        Check:
          Verify RHEL 8 uses multifactor authentication for local access to accounts.

          Note: If the System Administrator demonstrates the use of an approved alternate multifactor
          authentication method, this requirement is not applicable.

          Check that the "pam_cert_auth" setting is set to "true" in the "/etc/sssd/sssd.conf" file.

          Check that the "try_cert_auth" or "require_cert_auth" options are configured in both
          "/etc/pam.d/system-auth" and "/etc/pam.d/smartcard-auth" files with the following command:

          $ sudo grep cert_auth /etc/sssd/sssd.conf /etc/pam.d/*

          /etc/sssd/sssd.conf:pam_cert_auth = True
          /etc/pam.d/smartcard-auth:auth   sufficient   pam_sss.so try_cert_auth
          /etc/pam.d/system-auth:auth   [success=done authinfo_unavail=ignore ignore=ignore default=die]
          pam_sss.so try_cert_auth

          If "pam_cert_auth" is not set to "true" in "/etc/sssd/sssd.conf", this is a finding.

          If "pam_sss.so" is not set to "try_cert_auth" or "require_cert_auth" in both the
          "/etc/pam.d/smartcard-auth" and "/etc/pam.d/system-auth" files, this is a finding.
        Fix:
          Configure RHEL 8 to use multifactor authentication for local access to accounts.

          Add or update the "pam_cert_auth" setting in the "/etc/sssd/sssd.conf" file to match the following
          line:

          [pam]
          pam_cert_auth = True

          Add or update "pam_sss.so" with "try_cert_auth" or "require_cert_auth" in the "/etc/pam.d/system-
          auth" and "/etc/pam.d/smartcard-auth" files based on the following examples:

          /etc/pam.d/smartcard-auth:auth   sufficient   pam_sss.so try_cert_auth

          /etc/pam.d/system-auth:auth   [success=done authinfo_unavail=ignore ignore=ignore default=die]
          pam_sss.so try_cert_auth

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8, for PKI-based authentication, must validate certificates by constructing a certification path (which includes status information) to an accepted trust anchor."
  tags:
      - V230229
      - medium
      - RHEL-08-010090
      - SV-230229r858739_rule
      - C-32898r858738_chk
      - F-32873r809269_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without path validation, an informed trust decision by the relying party cannot be made when
          presented with any certificate not already explicitly trusted.

          A trust anchor is an authoritative entity represented via a public key and associated data. It is
          used in the context of public key infrastructures, X.509 digital certificates, and DNSSEC.

          When there is a chain of trust, usually the top entity to be trusted becomes the trust anchor; it
          can be, for example, a Certification Authority (CA). A certification path starts with the subject
          certificate and proceeds through a number of intermediate certificates up to a trusted root
          certificate, typically issued by a trusted CA.

          This requirement verifies that a certification path to an accepted trust anchor is used for
          certificate validation and that the path includes status information. Path validation is necessary
          for a relying party to make an informed trust decision when presented with any certificate not
          already explicitly trusted. Status information for certification paths includes certificate
          revocation lists or online certificate status protocol responses. Validation of the certificate
          status information is out of scope for this requirement.

          Satisfies: SRG-OS-000066-GPOS-00034, SRG-OS-000384-GPOS-00167
        Check:
          Verify RHEL 8 for PKI-based authentication has valid certificates by constructing a certification
          path (which includes status information) to an accepted trust anchor.

          Note: If the System Administrator demonstrates the use of an approved alternate multifactor
          authentication method, this requirement is not applicable.

          Check that the system has a valid DoD root CA installed with the following command:

          $ sudo openssl x509 -text -in /etc/sssd/pki/sssd_auth_ca_db.pem

          Certificate:
             Data:
                Version: 3 (0x2)
                Serial Number: 1 (0x1)
                Signature Algorithm: sha256WithRSAEncryption
                Issuer: C = US, O = U.S. Government, OU = DoD, OU = PKI, CN = DoD Root CA 3
                Validity
                   Not Before: Mar 20 18:46:41 2012 GMT
                   Not After   : Dec 30 18:46:41 2029 GMT
                Subject: C = US, O = U.S. Government, OU = DoD, OU = PKI, CN = DoD Root CA 3
                Subject Public Key Info:
                   Public Key Algorithm: rsaEncryption

          If the root ca file is not a DoD-issued certificate with a valid date and installed in the
          /etc/sssd/pki/sssd_auth_ca_db.pem location, this is a finding.
        Fix:
          Configure RHEL 8, for PKI-based authentication, to validate certificates by constructing a
          certification path (which includes status information) to an accepted trust anchor.

          Obtain a valid copy of the DoD root CA file from the PKI CA certificate bundle at cyber.mil and copy
          into the following file:

          /etc/sssd/pki/sssd_auth_ca_db.pem

- name: "The RHEL 8 operating system must not be configured to bypass password requirements for privilege escalation."
  tags:
      - V251712
      - medium
      - RHEL-08-010385
      - SV-251712r854083_rule
      - C-55149r809358_chk
      - F-55103r854082_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without re-authentication, users may access resources or perform tasks for which they do not have
          authorization.

          When operating systems provide the capability to escalate a functional capability, it is critical
          the user re-authenticate.

          Satisfies: SRG-OS-000373-GPOS-00156, SRG-OS-000373-GPOS-00157, SRG-OS-000373-GPOS-00158
        Check:
          Verify the operating system is not be configured to bypass password requirements for privilege
          escalation.

          Check the configuration of the "/etc/pam.d/sudo" file with the following command:

          $ sudo grep pam_succeed_if /etc/pam.d/sudo

          If any occurrences of "pam_succeed_if" is returned from the command, this is a finding.
        Fix:
          Configure the operating system to require users to supply a password for privilege escalation.

          Check the configuration of the "/etc/ pam.d/sudo" file with the following command:
          $ sudo vi /etc/pam.d/sudo

          Remove any occurrences of "pam_succeed_if" in the file.

- name: "RHEL 8 must display the date and time of the last successful account logon upon logon."
  tags:
      - V230381
      - low
      - RHEL-08-020340
      - SV-230381r858726_rule
      - C-33050r567889_chk
      - F-33025r567890_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Providing users with feedback on when account accesses last occurred facilitates user recognition
          and reporting of unauthorized account use.
        Check:
          Verify users are provided with feedback on when account accesses last occurred with the following
          command:

          $ sudo grep pam_lastlog /etc/pam.d/postlogin

          session required pam_lastlog.so showfailed

          If "pam_lastlog" is missing from "/etc/pam.d/postlogin" file, or the silent option is present, this
          is a finding.
        Fix:
          Configure the operating system to provide users with feedback on when account accesses last occurred
          by setting the required configuration options in "/etc/pam.d/postlogin".

          Add the following line to the top of "/etc/pam.d/postlogin":

          session required pam_lastlog.so showfailed

- name: "RHEL 8 must not allow blank or null passwords in the system-auth file."
  tags:
      - V244540
      - high
      - RHEL-08-020331
      - SV-244540r743869_rule
      - C-47815r743867_chk
      - F-47772r743868_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If an account has an empty password, anyone could log on and run commands with the privileges of
          that account. Accounts with empty passwords should never be used in operational environments.
        Check:
          To verify that null passwords cannot be used, run the following command:

          $ sudo grep -i nullok /etc/pam.d/system-auth

          If output is produced, this is a finding.
        Fix:
          Remove any instances of the "nullok" option in the "/etc/pam.d/system-auth" file to prevent logons
          with empty passwords.

          Note: Manual changes to the listed file may be overwritten by the "authselect" program.

- name: "RHEL 8 must configure the use of the pam_faillock.so module in the /etc/pam.d/password-auth file."
  tags:
      - V244534
      - medium
      - RHEL-08-020026
      - SV-244534r743851_rule
      - C-47809r743849_chk
      - F-47766r743850_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module.  Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.
          The preauth argument must be used when the module is called before the modules which ask for the
          user credentials such as the password.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Note: This check applies to RHEL versions 8.2 or newer, if the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the pam_faillock.so module is present in the "/etc/pam.d/password-auth" file:

          $ sudo grep pam_faillock.so /etc/pam.d/password-auth

          auth               required                               pam_faillock.so preauth
          auth               required                               pam_faillock.so authfail
          account        required                                pam_faillock.so

          If the pam_faillock.so module is not present in the "/etc/pam.d/password-auth" file with the
          "preauth" line listed before pam_unix.so, this is a finding.
        Fix:
          Configure the operating system to include the use of the pam_faillock.so module in the
          /etc/pam.d/password-auth file.

          Add/Modify the appropriate sections of the "/etc/pam.d/password-auth" file to match the following
          lines:
          Note: The "preauth" line must be listed before pam_unix.so.

          auth required pam_faillock.so preauth
          auth required pam_faillock.so authfail
          account required pam_faillock.so

- name: "RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur."
  tags:
      - V230332
      - medium
      - RHEL-08-020010
      - SV-230332r627750_rule
      - C-33001r567742_chk
      - F-32976r567743_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          RHEL 8 can utilize the "pam_faillock.so" for this purpose. Note that manual changes to the listed
          files may be overwritten by the "authselect" program.

          From "Pam_Faillock" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Check that the system locks an account after three unsuccessful logon attempts with the following
          commands:

          Note: If the System Administrator demonstrates the use of an approved centralized account management
          method that locks an account after three unsuccessful logon attempts within a period of 15 minutes,
          this requirement is not applicable.

          Note: This check applies to RHEL versions 8.0 and 8.1, if the system is RHEL version 8.2 or newer,
          this check is not applicable.

          $ sudo grep pam_faillock.so /etc/pam.d/password-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "deny" option is not set to "3" or less (but not "0") on the "preauth" line with the
          "pam_faillock.so" module, or is missing from this line, this is a finding.

          If any line referencing the "pam_faillock.so" module is commented out, this is a finding.

          $ sudo grep pam_faillock.so /etc/pam.d/system-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "deny" option is not set to "3" or less (but not "0") on the "preauth" line with the
          "pam_faillock.so" module, or is missing from this line, this is a finding.

          If any line referencing the "pam_faillock.so" module is commented out, this is a finding.
        Fix:
          Configure the operating system to lock an account when three unsuccessful logon attempts occur.

          Add/Modify the appropriate sections of the "/etc/pam.d/system-auth" and "/etc/pam.d/password-auth"
          files to match the following lines:

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur during a 15-minute time period."
  tags:
      - V230334
      - medium
      - RHEL-08-020012
      - SV-230334r627750_rule
      - C-33003r567748_chk
      - F-32978r567749_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          RHEL 8 can utilize the "pam_faillock.so" for this purpose. Note that manual changes to the listed
          files may be overwritten by the "authselect" program.

          From "Pam_Faillock" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Check that the system locks an account after three unsuccessful logon attempts within a period of 15
          minutes with the following commands:

          Note: If the System Administrator demonstrates the use of an approved centralized account management
          method that locks an account after three unsuccessful logon attempts within a period of 15 minutes,
          this requirement is not applicable.

          Note: This check applies to RHEL versions 8.0 and 8.1, if the system is RHEL version 8.2 or newer,
          this check is not applicable.

          $ sudo grep pam_faillock.so /etc/pam.d/password-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "fail_interval" option is not set to "900" or less (but not "0") on the "preauth" lines with
          the "pam_faillock.so" module, or is missing from this line, this is a finding.

          $ sudo grep pam_faillock.so /etc/pam.d/system-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "fail_interval" option is not set to "900" or less (but not "0") on the "preauth" lines with
          the "pam_faillock.so" module, or is missing from this line, this is a finding.
        Fix:
          Configure the operating system to lock an account when three unsuccessful logon attempts occur in 15
          minutes.

          Add/Modify the appropriate sections of the "/etc/pam.d/system-auth" and "/etc/pam.d/password-auth"
          files to match the following lines:

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8 must automatically lock an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period."
  tags:
      - V230336
      - medium
      - RHEL-08-020014
      - SV-230336r627750_rule
      - C-33005r567754_chk
      - F-32980r567755_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          RHEL 8 can utilize the "pam_faillock.so" for this purpose. Note that manual changes to the listed
          files may be overwritten by the "authselect" program.

          From "Pam_Faillock" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Check that the system locks an account after three unsuccessful logon attempts within a period of 15
          minutes until released by an administrator with the following commands:

          Note: If the System Administrator demonstrates the use of an approved centralized account management
          method that locks an account after three unsuccessful logon attempts within a period of 15 minutes,
          this requirement is not applicable.

          Note: This check applies to RHEL versions 8.0 and 8.1, if the system is RHEL version 8.2 or newer,
          this check is not applicable.

          $ sudo grep pam_faillock.so /etc/pam.d/password-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "unlock_time" option is not set to "0" on the "preauth" and "authfail" lines with the
          "pam_faillock.so" module, or is missing from these lines, this is a finding.

          $ sudo grep pam_faillock.so /etc/pam.d/system-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "unlock_time" option is not set to "0" on the "preauth" and "authfail" lines with the
          "pam_faillock.so" module, or is missing from these lines, this is a finding.
        Fix:
          Configure the operating system to lock an account until released by an administrator when three
          unsuccessful logon attempts occur in 15 minutes.

          Add/Modify the appropriate sections of the "/etc/pam.d/system-auth" and "/etc/pam.d/password-auth"
          files to match the following lines:

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8 must ensure account lockouts persist."
  tags:
      - V230338
      - medium
      - RHEL-08-020016
      - SV-230338r627750_rule
      - C-33007r567760_chk
      - F-32982r567761_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          RHEL 8 can utilize the "pam_faillock.so" for this purpose. Note that manual changes to the listed
          files may be overwritten by the "authselect" program.

          From "Pam_Faillock" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Check that the faillock directory contents persists after a reboot with the following commands:

          Note: If the System Administrator demonstrates the use of an approved centralized account management
          method that locks an account after three unsuccessful logon attempts within a period of 15 minutes,
          this requirement is not applicable.

          Note: This check applies to RHEL versions 8.0 and 8.1, if the system is RHEL version 8.2 or newer,
          this check is not applicable.

          $ sudo grep pam_faillock.so /etc/pam.d/password-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "dir" option is not set to a non-default documented tally log directory on the "preauth" and
          "authfail" lines with the "pam_faillock.so" module, or is missing from these lines, this is a
          finding.

          $ sudo grep pam_faillock.so /etc/pam.d/system-auth

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          If the "dir" option is not set to a non-default documented tally log directory on the "preauth" and
          "authfail" lines with the "pam_faillock.so" module, or is missing from these lines, this is a
          finding.
        Fix:
          Configure the operating system maintain the contents of the faillock directory after a reboot.

          Add/Modify the appropriate sections of the "/etc/pam.d/system-auth" and "/etc/pam.d/password-auth"
          files to match the following lines:

          Note: Using the default faillock directory of /var/run/faillock will result in the contents being
          cleared in the event of a reboot.

          auth required pam_faillock.so preauth dir=/var/log/faillock silent audit deny=3 even_deny_root
          fail_interval=900 unlock_time=0
          auth required pam_faillock.so authfail dir=/var/log/faillock unlock_time=0
          account required pam_faillock.so

          The "sssd" service must be restarted for the changes to take effect. To restart the "sssd" service,
          run the following command:

          $ sudo systemctl restart sssd.service

- name: "RHEL 8 must configure the use of the pam_faillock.so module in the /etc/pam.d/system-auth file."
  tags:
      - V244533
      - medium
      - RHEL-08-020025
      - SV-244533r743848_rule
      - C-47808r743846_chk
      - F-47765r743847_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module. Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.
          The preauth argument must be used when the module is called before the modules which ask for the
          user credentials such as the password.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Note: This check applies to RHEL versions 8.2 or newer, if the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the pam_faillock.so module is present in the "/etc/pam.d/system-auth" file:

          $ sudo grep pam_faillock.so /etc/pam.d/system-auth

          auth               required                               pam_faillock.so preauth
          auth               required                               pam_faillock.so authfail
          account        required                                pam_faillock.so
          If the pam_faillock.so module is not present in the "/etc/pam.d/system-auth" file with the "preauth"
          line listed before pam_unix.so, this is a finding.
        Fix:
          Configure the operating system to include the use of the pam_faillock.so module in the
          /etc/pam.d/system-auth file.

          Add/Modify the appropriate sections of the "/etc/pam.d/system-auth" file to match the following
          lines:
          Note: The "preauth" line must be listed before pam_unix.so.

          auth required pam_faillock.so preauth
          auth required pam_faillock.so authfail
          account required pam_faillock.so

################################################################################
# pwquality.conf
################################################################################

- name: "RHEL 8 must enforce password complexity by requiring that at least one uppercase character be used."
  tags:
      - V230357
      - medium
      - RHEL-08-020110
      - SV-230357r858771_rule
      - C-33026r833312_chk
      - F-33001r858770_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks.

          Password complexity is one factor of several that determines how long it takes to crack a password.
          The more complex the password, the greater the number of possible combinations that need to be
          tested before the password is compromised.

          RHEL 8 utilizes pwquality as a mechanism to enforce password complexity. Note that in order to
          require uppercase characters, without degrading the "minlen" value, the credit value must be
          expressed as a negative number in "/etc/security/pwquality.conf".
        Check:
          Verify the value for "ucredit" with the following command:

          $ sudo grep -r ucredit /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:ucredit = -1

          If the value of "ucredit" is a positive number or is commented out, this is a finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to enforce password complexity by requiring that at least one
          uppercase character be used by setting the "ucredit" option.

          Add the following line to /etc/security/pwquality.conf (or modify the line to have the required
          value):

          ucredit = -1

          Remove any configurations that conflict with the above value.

- name: "RHEL 8 must require the maximum number of repeating characters be limited to three when passwords are changed."
  tags:
      - V230361
      - medium
      - RHEL-08-020150
      - SV-230361r858779_rule
      - C-33030r833320_chk
      - F-33005r858778_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks.

          Password complexity is one factor of several that determines how long it takes to crack a password.
          The more complex the password, the greater the number of possible combinations that need to be
          tested before the password is compromised.

          RHEL 8 utilizes "pwquality" as a mechanism to enforce password complexity. The "maxrepeat" option
          sets the maximum number of allowed same consecutive characters in a new password.
        Check:
          Check for the value of the "maxrepeat" option with the following command:

          $ sudo grep -r maxrepeat /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:maxrepeat = 3

          If the value of "maxrepeat" is set to more than "3" or is commented out, this is a finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to require the change of the number of repeating consecutive
          characters when passwords are changed by setting the "maxrepeat" option.

          Add the following line to "/etc/security/pwquality.conf conf" (or modify the line to have the
          required value):

          maxrepeat = 3

          Remove any configurations that conflict with the above value.

- name: "RHEL 8 must enforce password complexity by requiring that at least one numeric character be used."
  tags:
      - V230359
      - medium
      - RHEL-08-020130
      - SV-230359r858775_rule
      - C-33028r833316_chk
      - F-33003r858774_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks.

          Password complexity is one factor of several that determines how long it takes to crack a password.
          The more complex the password, the greater the number of possible combinations that need to be
          tested before the password is compromised.

          RHEL 8 utilizes "pwquality" as a mechanism to enforce password complexity. Note that in order to
          require numeric characters, without degrading the minlen value, the credit value must be expressed
          as a negative number in "/etc/security/pwquality.conf".
        Check:
          Verify the value for "dcredit" with the following command:

          $ sudo grep -r dcredit /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:dcredit = -1

          If the value of "dcredit" is a positive number or is commented out, this is a finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to enforce password complexity by requiring that at least one numeric
          character be used by setting the "dcredit" option.

          Add the following line to /etc/security/pwquality.conf (or modify the line to have the required
          value):

          dcredit = -1

          Remove any configurations that conflict with the above value.

- name: "RHEL 8 must require the change of at least 8 characters when passwords are changed."
  tags:
      - V230363
      - medium
      - RHEL-08-020170
      - SV-230363r858783_rule
      - C-33032r833324_chk
      - F-33007r858782_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks.

          Password complexity is one factor of several that determines how long it takes to crack a password.
          The more complex the password, the greater the number of possible combinations that need to be
          tested before the password is compromised.

          RHEL 8 utilizes "pwquality" as a mechanism to enforce password complexity. The "difok" option sets
          the number of characters in a password that must not be present in the old password.
        Check:
          Verify the value of the "difok" option with the following command:

          $ sudo grep -r difok /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:difok = 8

          If the value of "difok" is set to less than "8" or is commented out, this is a finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to require the change of at least eight of the total number of
          characters when passwords are changed by setting the "difok" option.

          Add the following line to "/etc/security/pwquality.conf" (or modify the line to have the required
          value):

          difok = 8

          Remove any configurations that conflict with the above value.

- name: "RHEL 8 passwords must have a minimum of 15 characters."
  tags:
      - V230369
      - medium
      - RHEL-08-020230
      - SV-230369r858785_rule
      - C-33038r833326_chk
      - F-33013r858784_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The shorter the password, the lower the number of possible combinations that need to be tested
          before the password is compromised.

          Password complexity, or strength, is a measure of the effectiveness of a password in resisting
          attempts at guessing and brute-force attacks. Password length is one factor of several that helps to
          determine strength and how long it takes to crack a password. Use of more characters in a password
          helps to increase exponentially the time and/or resources required to compromise the password.

          RHEL 8 utilizes "pwquality" as a mechanism to enforce password complexity. Configurations are set in
          the "etc/security/pwquality.conf" file.

          The "minlen", sometimes noted as minimum length, acts as a "score" of complexity based on the credit
          components of the "pwquality" module. By setting the credit components to a negative value, not only
          will those components be required, they will not count towards the total "score" of "minlen". This
          will enable "minlen" to require a 15-character minimum.

          The DoD minimum password requirement is 15 characters.
        Check:
          Verify the operating system enforces a minimum 15-character password length. The "minlen" option
          sets the minimum number of characters in a new password.

          Check for the value of the "minlen" option with the following command:

          $ sudo grep -r minlen /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:minlen = 15

          If the command does not return a "minlen" value of 15 or greater, this is a finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure operating system to enforce a minimum 15-character password length.

          Add the following line to "/etc/security/pwquality.conf" (or modify the line to have the required
          value):

          minlen = 15

          Remove any configurations that conflict with the above value.

- name: "All RHEL 8 passwords must contain at least one special character."
  tags:
      - V230375
      - medium
      - RHEL-08-020280
      - SV-230375r858787_rule
      - C-33044r833328_chk
      - F-33019r858786_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks.

          Password complexity is one factor of several that determines how long it takes to crack a password.
          The more complex the password, the greater the number of possible combinations that need to be
          tested before the password is compromised.

          RHEL 8 utilizes "pwquality" as a mechanism to enforce password complexity. Note that to require
          special characters without degrading the "minlen" value, the credit value must be expressed as a
          negative number in "/etc/security/pwquality.conf".
        Check:
          Verify the value for "ocredit" with the following command:

          $ sudo grep -r ocredit /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:ocredit = -1

          If the value of "ocredit" is a positive number or is commented out, this is a finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to enforce password complexity by requiring that at least one special
          character be used by setting the "ocredit" option.

          Add the following line to /etc/security/pwquality.conf (or modify the line to have the required
          value):

          ocredit = -1

          Remove any configurations that conflict with the above value.

- name: "RHEL 8 must enforce password complexity by requiring that at least one lower-case character be used."
  tags:
      - V230358
      - medium
      - RHEL-08-020120
      - SV-230358r858773_rule
      - C-33027r833314_chk
      - F-33002r858772_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks.

          Password complexity is one factor of several that determines how long it takes to crack a password.
          The more complex the password, the greater the number of possible combinations that need to be
          tested before the password is compromised.

          RHEL 8 utilizes pwquality as a mechanism to enforce password complexity. Note that in order to
          require lower-case characters without degrading the "minlen" value, the credit value must be
          expressed as a negative number in "/etc/security/pwquality.conf".
        Check:
          Verify the value for "lcredit" with the following command:

          $ sudo grep -r lcredit /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:lcredit = -1

          If the value of "lcredit" is a positive number or is commented out, this is a finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to enforce password complexity by requiring that at least one lower-
          case character be used by setting the "lcredit" option.

          Add the following line to /etc/security/pwquality.conf (or modify the line to have the required
          value):

          lcredit = -1

          Remove any configurations that conflict with the above value.

- name: "RHEL 8 must require the maximum number of repeating characters of the same character class be limited to four when passwords are changed."
  tags:
      - V230360
      - medium
      - RHEL-08-020140
      - SV-230360r858777_rule
      - C-33029r833318_chk
      - F-33004r858776_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks.

          Password complexity is one factor of several that determines how long it takes to crack a password.
          The more complex the password, the greater the number of possible combinations that need to be
          tested before the password is compromised.

          RHEL 8 utilizes "pwquality" as a mechanism to enforce password complexity. The "maxclassrepeat"
          option sets the maximum number of allowed same consecutive characters in the same class in the new
          password.
        Check:
          Check for the value of the "maxclassrepeat" option with the following command:

          $ sudo grep -r maxclassrepeat /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:maxclassrepeat = 4

          If the value of "maxclassrepeat" is set to "0", more than "4" or is commented out, this is a
          finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to require the change of the number of repeating characters of the
          same character class when passwords are changed by setting the "maxclassrepeat" option.

          Add the following line to "/etc/security/pwquality.conf" conf (or modify the line to have the
          required value):

          maxclassrepeat = 4

          Remove any configurations that conflict with the above value.

- name: "RHEL 8 must require the change of at least four character classes when passwords are changed."
  tags:
      - V230362
      - medium
      - RHEL-08-020160
      - SV-230362r858781_rule
      - C-33031r833322_chk
      - F-33006r858780_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Use of a complex password helps to increase the time and resources required to compromise the
          password. Password complexity, or strength, is a measure of the effectiveness of a password in
          resisting attempts at guessing and brute-force attacks.

          Password complexity is one factor of several that determines how long it takes to crack a password.
          The more complex the password, the greater the number of possible combinations that need to be
          tested before the password is compromised.

          RHEL 8 utilizes "pwquality" as a mechanism to enforce password complexity. The "minclass" option
          sets the minimum number of required classes of characters for the new password (digits, uppercase,
          lowercase, others).
        Check:
          Verify the value of the "minclass" option with the following command:

          $ sudo grep -r minclass /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:minclass = 4

          If the value of "minclass" is set to less than "4" or is commented out, this is a finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to require the change of at least four character classes when
          passwords are changed by setting the "minclass" option.

          Add the following line to "/etc/security/pwquality.conf conf" (or modify the line to have the
          required value):

          minclass = 4

          Remove any configurations that conflict with the above value.

- name: "RHEL 8 must prevent the use of dictionary words for passwords."
  tags:
      - V230377
      - medium
      - RHEL-08-020300
      - SV-230377r858789_rule
      - C-33046r833330_chk
      - F-33021r858788_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 allows the user to select passwords based on dictionary words, this increases the chances
          of password compromise by increasing the opportunity for successful guesses, and brute-force
          attacks.
        Check:
          Verify RHEL 8 prevents the use of dictionary words for passwords.

          Determine if the field "dictcheck" is set with the following command:

          $ sudo grep -r dictcheck /etc/security/pwquality.conf*

          /etc/security/pwquality.conf:dictcheck=1

          If the "dictcheck" parameter is not set to "1", or is commented out, this is a finding.
          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to prevent the use of dictionary words for passwords.

          Add or update the following line in the "/etc/security/pwquality.conf" file or a configuration file
          in the /etc/pwquality.conf.d/ directory to contain the "dictcheck" parameter:

          dictcheck=1

          Remove any configurations that conflict with the above value.

################################################################################
# dnf.conf
################################################################################

- name: "YUM must remove all software components after updated versions have been installed on RHEL 8."
  tags:
      - V230281
      - low
      - RHEL-08-010440
      - SV-230281r854034_rule
      - C-32950r567589_chk
      - F-32925r567590_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Previous versions of software components that are not removed from the information system after
          updates have been installed may be exploited by adversaries. Some information technology products
          may remove older versions of software automatically from the information system.
        Check:
          Verify the operating system removes all software components after updated versions have been
          installed.

          Check if YUM is configured to remove unneeded packages with the following command:

          $ sudo grep -i clean_requirements_on_remove /etc/dnf/dnf.conf

          clean_requirements_on_remove=True

          If "clean_requirements_on_remove" is not set to either "1", "True", or "yes", commented out, or is
          missing from "/etc/dnf/dnf.conf", this is a finding.
        Fix:
          Configure the operating system to remove all software components after updated versions have been
          installed.

          Set the "clean_requirements_on_remove" option to "True" in the "/etc/dnf/dnf.conf" file:

          clean_requirements_on_remove=True

- name: "RHEL 8 must prevent the installation of software, patches, service packs, device drivers, or operating system components of local packages without verification they have been digitally signed using a certificate that is issued by a Certificate Authority (CA) that is recognized and approved by the organization."
  tags:
      - V230265
      - high
      - RHEL-08-010371
      - SV-230265r854017_rule
      - C-32934r567541_chk
      - F-32909r567542_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Changes to any software components can have significant effects on the overall security of the
          operating system. This requirement ensures the software has not been tampered with and that it has
          been provided by a trusted vendor.

          Accordingly, patches, service packs, device drivers, or operating system components must be signed
          with a certificate recognized and approved by the organization.

          Verifying the authenticity of the software prior to installation validates the integrity of the
          patch or upgrade received from a vendor. This verifies the software has not been tampered with and
          that it has been provided by a trusted vendor. Self-signed certificates are disallowed by this
          requirement. The operating system should not have to verify the software again. This requirement
          does not mandate DoD certificates for this purpose; however, the certificate used to verify the
          software must be from an approved CA.
        Check:
          Verify the operating system prevents the installation of patches, service packs, device drivers, or
          operating system components from a repository without verification that they have been digitally
          signed using a certificate that is recognized and approved by the organization.

          Check if YUM is configured to perform a signature check on local packages with the following
          command:

          $ sudo grep -i localpkg_gpgcheck /etc/dnf/dnf.conf

          localpkg_gpgcheck =True

          If "localpkg_gpgcheck" is not set to either "1", "True", or "yes", commented out, or is missing from
          "/etc/dnf/dnf.conf", this is a finding.
        Fix:
          Configure the operating system to remove all software components after updated versions have been
          installed.

          Set the "localpkg_gpgcheck" option to "True" in the "/etc/dnf/dnf.conf" file:

          localpkg_gpgcheck=True

- name: "RHEL 8 must prevent the installation of software, patches, service packs, device drivers, or operating system components from a repository without verification they have been digitally signed using a certificate that is issued by a Certificate Authority (CA) that is recognized and approved by the organization."
  tags:
      - V230264
      - high
      - RHEL-08-010370
      - SV-230264r854016_rule
      - C-32933r567538_chk
      - F-32908r567539_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Changes to any software components can have significant effects on the overall security of the
          operating system. This requirement ensures the software has not been tampered with and that it has
          been provided by a trusted vendor.

          Accordingly, patches, service packs, device drivers, or operating system components must be signed
          with a certificate recognized and approved by the organization.

          Verifying the authenticity of the software prior to installation validates the integrity of the
          patch or upgrade received from a vendor. This verifies the software has not been tampered with and
          that it has been provided by a trusted vendor. Self-signed certificates are disallowed by this
          requirement. The operating system should not have to verify the software again. This requirement
          does not mandate DoD certificates for this purpose; however, the certificate used to verify the
          software must be from an approved CA.
        Check:
          Verify the operating system prevents the installation of patches, service packs, device drivers, or
          operating system components from a repository without verification that they have been digitally
          signed using a certificate that is recognized and approved by the organization.

          Check that YUM verifies the signature of packages from a repository prior to install with the
          following command:

          $ sudo egrep '^\[.*\]|gpgcheck' /etc/yum.repos.d/*.repo

          /etc/yum.repos.d/appstream.repo:[appstream]
          /etc/yum.repos.d/appstream.repo:gpgcheck=1
          /etc/yum.repos.d/baseos.repo:[baseos]
          /etc/yum.repos.d/baseos.repo:gpgcheck=1

          If "gpgcheck" is not set to "1", or if options are missing or commented out, ask the System
          Administrator how the certificates for patches and other operating system components are verified.

          If there is no process to validate certificates that is approved by the organization, this is a
          finding.
        Fix:
          Configure the operating system to verify the signature of packages from a repository prior to
          install by setting the following option in the "/etc/yum.repos.d/[your_repo_name].repo" file:

          gpgcheck=1

################################################################################
# faillock.conf
################################################################################

- name: "RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur."
  tags:
      - V230333
      - medium
      - RHEL-08-020011
      - SV-230333r743966_rule
      - C-33002r743964_chk
      - F-32977r743965_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module.  Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Note: This check applies to RHEL versions 8.2 or newer, if the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the "/etc/security/faillock.conf" file is configured to lock an account after three
          unsuccessful logon attempts:

          $ sudo grep 'deny =' /etc/security/faillock.conf

          deny = 3

          If the "deny" option is not set to "3" or less (but not "0"), is missing or commented out, this is a
          finding.
        Fix:
          Configure the operating system to lock an account when three unsuccessful logon attempts occur.

          Add/Modify the "/etc/security/faillock.conf" file to match the following line:

          deny = 3

- name: "RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur during a 15-minute time period."
  tags:
      - V230335
      - medium
      - RHEL-08-020013
      - SV-230335r743969_rule
      - C-33004r743967_chk
      - F-32979r743968_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module.  Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Note: This check applies to RHEL versions 8.2 or newer, if the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the "/etc/security/faillock.conf" file is configured to lock an account after three
          unsuccessful logon attempts within 15 minutes:

          $ sudo grep 'fail_interval =' /etc/security/faillock.conf

          fail_interval = 900

          If the "fail_interval" option is not set to "900" or more, is missing or commented out, this is a
          finding.
        Fix:
          Configure the operating system to lock an account when three unsuccessful logon attempts occur in 15
          minutes.

          Add/Modify the "/etc/security/faillock.conf" file to match the following line:

          fail_interval = 900

- name: "RHEL 8 must automatically lock an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period."
  tags:
      - V230337
      - medium
      - RHEL-08-020015
      - SV-230337r743972_rule
      - C-33006r743970_chk
      - F-32981r743971_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module.  Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Note: This check applies to RHEL versions 8.2 or newer, if the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the "/etc/security/faillock.conf" file is configured to lock an account until released by an
          administrator after three unsuccessful logon attempts:

          $ sudo grep 'unlock_time =' /etc/security/faillock.conf

          unlock_time = 0

          If the "unlock_time" option is not set to "0", is missing or commented out, this is a finding.
        Fix:
          Configure the operating system to lock an account until released by an administrator when three
          unsuccessful logon attempts occur in 15 minutes.

          Add/Modify the "/etc/security/faillock.conf" file to match the following line:

          unlock_time = 0

- name: "RHEL 8 must ensure account lockouts persist."
  tags:
      - V230339
      - medium
      - RHEL-08-020017
      - SV-230339r743975_rule
      - C-33008r743973_chk
      - F-32983r743974_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module.  Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Note: This check applies to RHEL versions 8.2 or newer. If the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the "/etc/security/faillock.conf" file is configured use a non-default faillock directory to
          ensure contents persist after reboot:

          $ sudo grep 'dir =' /etc/security/faillock.conf

          dir = /var/log/faillock

          If the "dir" option is not set to a non-default documented tally log directory, is missing or
          commented out, this is a finding.
        Fix:
          Configure the operating system maintain the contents of the faillock directory after a reboot.

          Add/Modify the "/etc/security/faillock.conf" file to match the following line:

          dir = /var/log/faillock

- name: "RHEL 8 must prevent system messages from being presented when three unsuccessful logon attempts occur."
  tags:
      - V230341
      - medium
      - RHEL-08-020019
      - SV-230341r743978_rule
      - C-33010r743976_chk
      - F-32985r743977_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module.  Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Note: This check applies to RHEL versions 8.2 or newer, if the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the "/etc/security/faillock.conf" file is configured to prevent informative messages from
          being presented at logon attempts:

          $ sudo grep silent /etc/security/faillock.conf

          silent

          If the "silent" option is not set, is missing or commented out, this is a finding.
        Fix:
          Configure the operating system to prevent informative messages from being presented at logon
          attempts.

          Add/Modify the "/etc/security/faillock.conf" file to match the following line:

          silent

- name: "RHEL 8 must log user name information when unsuccessful logon attempts occur."
  tags:
      - V230343
      - medium
      - RHEL-08-020021
      - SV-230343r743981_rule
      - C-33012r743979_chk
      - F-32987r743980_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module.  Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Note: This check applies to RHEL versions 8.2 or newer, if the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the "/etc/security/faillock.conf" file is configured to log user name information when
          unsuccessful logon attempts occur:

          $ sudo grep audit /etc/security/faillock.conf

          audit

          If the "audit" option is not set, is missing or commented out, this is a finding.
        Fix:
          Configure the operating system to log user name information when unsuccessful logon attempts occur.

          Add/Modify the "/etc/security/faillock.conf" file to match the following line:

          audit

- name: "RHEL 8 must include root when automatically locking an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period."
  tags:
      - V230345
      - medium
      - RHEL-08-020023
      - SV-230345r743984_rule
      - C-33014r743982_chk
      - F-32989r743983_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          In RHEL 8.2 the "/etc/security/faillock.conf" file was incorporated to centralize the configuration
          of the pam_faillock.so module.  Also introduced is a "local_users_only" option that will only track
          failed user authentication attempts for local users in /etc/passwd and ignore centralized (AD, IdM,
          LDAP, etc.) users to allow the centralized platform to solely manage user lockout.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be reenabled after system reboot. If that is undesirable a
          different tally directory must be set with the "dir" option.

          Satisfies: SRG-OS-000021-GPOS-00005, SRG-OS-000329-GPOS-00128
        Check:
          Note: This check applies to RHEL versions 8.2 or newer, if the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the "/etc/security/faillock.conf" file is configured to log user name information when
          unsuccessful logon attempts occur:

          $ sudo grep even_deny_root /etc/security/faillock.conf

          even_deny_root

          If the "even_deny_root" option is not set, is missing or commented out, this is a finding.
        Fix:
          Configure the operating system to include root when locking an account after three unsuccessful
          logon attempts occur in 15 minutes.

          Add/Modify the "/etc/security/faillock.conf" file to match the following line:

          even_deny_root

- name: "RHEL 8 systems, versions 8.2 and above, must configure SELinux context type to allow the use of a non-default faillock tally directory."
  tags:
      - V250315
      - medium
      - RHEL-08-020027
      - SV-250315r854079_rule
      - C-53749r793000_chk
      - F-53703r793001_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          By limiting the number of failed logon attempts, the risk of unauthorized system access via user
          password guessing, otherwise known as brute-force attacks, is reduced. Limits are imposed by locking
          the account.

          From "faillock.conf" man pages: Note that the default directory that "pam_faillock" uses is usually
          cleared on system boot so the access will be re-enabled after system reboot. If that is undesirable,
          a different tally directory must be set with the "dir" option.

          SELinux, enforcing a targeted policy, will require any non-default tally directory's security
          context type to match the default directory's security context type. Without updating the security
          context type, the pam_faillock module will not write failed login attempts to the non-default tally
          directory.
        Check:
          If the system does not have SELinux enabled and enforcing a targeted policy, or if the pam_faillock
          module is not configured for use, this requirement is not applicable.

          Note: This check applies to RHEL versions 8.2 or newer. If the system is RHEL version 8.0 or 8.1,
          this check is not applicable.

          Verify the location of the non-default tally directory for the pam_faillock module with the
          following command:

          $ sudo grep -w dir /etc/security/faillock.conf

          dir = /var/log/faillock

          Check the security context type of the non-default tally directory with the following command:

          $ sudo ls -Zd /var/log/faillock

          unconfined_u:object_r:faillog_t:s0 /var/log/faillock

          If the security context type of the non-default tally directory is not "faillog_t", this is a
          finding.
        Fix:
          Configure RHEL 8 to allow the use of a non-default faillock tally directory while SELinux enforces a
          targeted policy.

          Create a non-default faillock tally directory (if it does not already exist) with the following
          example:

          $ sudo mkdir /var/log/faillock

          Update the /etc/selinux/targeted/contexts/files/file_contexts.local with "faillog_t" context type
          for the non-default faillock tally directory with the following command:

          $ sudo semanage fcontext -a -t faillog_t "/var/log/faillock(/.*)?"

          Next, update the context type of the non-default faillock directory/subdirectories and files with
          the following command:

          $ sudo restorecon -R -v /var/log/faillock

################################################################################
# Version and Updates
################################################################################

- name: "RHEL 8 must be a vendor-supported release."
  tags:
      - V230221
      - high
      - RHEL-08-010000
      - SV-230221r858734_rule
      - C-32890r858733_chk
      - F-32865r567410_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          An operating system release is considered "supported" if the vendor continues to provide security
          patches for the product. With an unsupported release, it will not be possible to resolve security
          issues discovered in the system software.

          Red Hat offers the Extended Update Support (EUS) add-on to a Red Hat Enterprise Linux subscription,
          for a fee, for those customers who wish to standardize on a specific minor release for an extended
          period. The RHEL 8 minor releases eligible for EUS are 8.1, 8.2, 8.4, 8.6, and 8.8. Each RHEL 8 EUS
          stream is available for 24 months from the availability of the minor release. RHEL 8.10 will be the
          final minor release overall. For more details on the Red Hat Enterprise Linux Life Cycle  visit
          https://access.redhat.com/support/policy/updates/errata/.
          Note: The life-cycle time spans and dates are subject to adjustment.
        Check:
          Verify the version of the operating system is vendor supported.

          Note: The lifecycle time spans and dates are subject to adjustment.

          Check the version of the operating system with the following command:

          $ sudo cat /etc/redhat-release

          Red Hat Enterprise Linux Server release 8.6 (Ootpa)

          Current End of Extended Update Support for RHEL 8.1 is 30 November 2021.

          Current End of Extended Update Support for RHEL 8.2 is 30 April 2022.

          Current End of Extended Update Support for RHEL 8.4 is 31 May 2023.

          Current End of Maintenance Support for RHEL 8.5 is 31 May 2022.

          Current End of Extended Update Support for RHEL 8.6 is 31 May 2024.

          Current End of Maintenance Support for RHEL 8.7 is 31 May 2023.

          Current End of Extended Update Support for RHEL 8.8 is 31 May 2025.

          Current End of Maintenance Support for RHEL 8.9 is 31 May 2024.

          Current End of Maintenance Support for RHEL 8.10 is 31 May 2029.

          If the release is not supported by the vendor, this is a finding.
        Fix:
          Upgrade to a supported version of RHEL 8.

- name: "RHEL 8 vendor packaged system security patches and updates must be installed and up to date."
  tags:
      - V230222
      - medium
      - RHEL-08-010010
      - SV-230222r627750_rule
      - C-32891r567412_chk
      - F-32866r567413_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Timely patching is critical for maintaining the operational availability, confidentiality, and
          integrity of information technology (IT) systems. However, failure to keep operating system and
          application software patched is a common mistake made by IT professionals. New patches are released
          daily, and it is often difficult for even experienced System Administrators to keep abreast of all
          the new patches. When new weaknesses in an operating system exist, patches are usually made
          available by the vendor to resolve the problems. If the most recent security patches and updates are
          not installed, unauthorized users may take advantage of weaknesses in the unpatched software. The
          lack of prompt attention to patching could result in a system compromise.
        Check:
          Verify the operating system security patches and updates are installed and up to date. Updates are
          required to be applied with a frequency determined by the site or Program Management Office (PMO).

          Obtain the list of available package security updates from Red Hat. The URL for updates is
          https://rhn.redhat.com/errata/. It is important to note that updates provided by Red Hat may not be
          present on the system if the underlying packages are not installed.

          Check that the available package security updates have been installed on the system with the
          following command:

          $ sudo yum history list | more

          Loaded plugins: langpacks, product-id, subscription-manager
          ID | Command line | Date and time | Action(s) | Altered
          -------------------------------------------------------------------------------
          70 | install aide | 2020-03-05 10:58 | Install | 1
          69 | update -y | 2020-03-04 14:34 | Update | 18 EE
          68 | install vlc | 2020-02-21 17:12 | Install | 21
          67 | update -y | 2020-02-21 17:04 | Update | 7 EE

          If package updates have not been performed on the system within the timeframe the site/program
          documentation requires, this is a finding.

          Typical update frequency may be overridden by Information Assurance Vulnerability Alert (IAVA)
          notifications from CYBERCOM.

          If the operating system is in non-compliance with the Information Assurance Vulnerability Management
          (IAVM) process, this is a finding.
        Fix:
          Install the operating system patches or updated packages available from Red Hat within 30 days or
          sooner as local policy dictates.

################################################################################
# SELinux
################################################################################

- name: "RHEL 8 must use a Linux Security Module configured to enforce limits on system services."
  tags:
      - V230240
      - medium
      - RHEL-08-010170
      - SV-230240r627750_rule
      - C-32909r567466_chk
      - F-32884r567467_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without verification of the security functions, security functions may not operate correctly and the
          failure may go unnoticed. Security function is defined as the hardware, software, and/or firmware of
          the information system responsible for enforcing the system security policy and supporting the
          isolation of code and data on which the protection is based. Security functionality includes, but is
          not limited to, establishing system accounts, configuring access authorizations (i.e., permissions,
          privileges), setting events to be audited, and setting intrusion detection parameters.

          This requirement applies to operating systems performing security function verification/testing
          and/or systems and environments that require this functionality.
        Check:
          Verify the operating system verifies correct operation of all security functions.

          Check if "SELinux" is active and in "Enforcing" mode with the following command:

          $ sudo getenforce
          Enforcing

          If "SELinux" is not active and not in "Enforcing" mode, this is a finding.
        Fix:
          Configure the operating system to verify correct operation of all security functions.

          Set the "SELinux" status and the "Enforcing" mode by modifying the "/etc/selinux/config" file to
          have the following line:

          SELINUX=enforcing

          A reboot is required for the changes to take effect.

- name: "RHEL 8 must have policycoreutils package installed."
  tags:
      - V230241
      - low
      - RHEL-08-010171
      - SV-230241r627750_rule
      - C-32910r567469_chk
      - F-32885r567470_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without verification of the security functions, security functions may not operate correctly and the
          failure may go unnoticed. Security function is defined as the hardware, software, and/or firmware of
          the information system responsible for enforcing the system security policy and supporting the
          isolation of code and data on which the protection is based. Security functionality includes, but is
          not limited to, establishing system accounts, configuring access authorizations (i.e., permissions,
          privileges), setting events to be audited, and setting intrusion detection parameters.

          Policycoreutils contains the policy core utilities that are required for basic operation of an
          SELinux-enabled system. These utilities include load_policy to load SELinux policies, setfile to
          label filesystems, newrole to switch roles, and run_init to run /etc/init.d scripts in the proper
          context.
        Check:
          Verify the operating system has the policycoreutils package installed with the following command:

          $ sudo yum list installed policycoreutils

          policycoreutils.x86_64                                              2.9-3.el8
          @anaconda

          If the policycoreutils package is not installed, this is a finding.
        Fix:
          Configure the operating system to have the policycoreutils package installed with the following
          command:

          $ sudo yum install policycoreutils

- name: "RHEL 8 must enable the SELinux targeted policy."
  tags:
      - V230282
      - medium
      - RHEL-08-010450
      - SV-230282r854035_rule
      - C-32951r567592_chk
      - F-32926r567593_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without verification of the security functions, security functions may not operate correctly and the
          failure may go unnoticed. Security function is defined as the hardware, software, and/or firmware of
          the information system responsible for enforcing the system security policy and supporting the
          isolation of code and data on which the protection is based. Security functionality includes, but is
          not limited to, establishing system accounts, configuring access authorizations (i.e., permissions,
          privileges), setting events to be audited, and setting intrusion detection parameters.

          This requirement applies to operating systems performing security function verification/testing
          and/or systems and environments that require this functionality.
        Check:
          Ensure the operating system verifies correct operation of all security functions.

          Check if "SELinux" is active and is enforcing the targeted policy with the following command:

          $ sudo sestatus

          SELinux status: enabled
          SELinuxfs mount: /sys/fs/selinux
          SELinux root directory: /etc/selinux
          Loaded policy name: targeted
          Current mode: enforcing
          Mode from config file: enforcing
          Policy MLS status: enabled
          Policy deny_unknown status: allowed
          Memory protection checking: actual (secure)
          Max kernel policy version: 31

          If the "Loaded policy name" is not set to "targeted", this is a finding.

          Verify that the /etc/selinux/config file is configured to the "SELINUXTYPE" to "targeted":

          $ sudo grep -i "selinuxtype" /etc/selinux/config | grep -v '^#'

          SELINUXTYPE = targeted

          If no results are returned or "SELINUXTYPE" is not set to "targeted", this is a finding.
        Fix:
          Configure the operating system to verify correct operation of all security functions.

          Set the "SELinuxtype" to the "targeted" policy by modifying the "/etc/selinux/config" file to have
          the following line:

          SELINUXTYPE=targeted

          A reboot is required for the changes to take effect.

- name: "RHEL 8 must prevent non-privileged users from executing privileged functions, including disabling, circumventing, or altering implemented security safeguards/countermeasures."
  tags:
      - V254520
      - medium
      - RHEL-08-040400
      - SV-254520r858835_rule
      - C-58004r858833_chk
      - F-57953r858834_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Preventing non-privileged users from executing privileged functions mitigates the risk that
          unauthorized individuals or processes may gain unnecessary access to information or privileges.

          Privileged functions include, for example, establishing accounts, performing system integrity
          checks, or administering cryptographic key management activities. Non-privileged users are
          individuals who do not possess appropriate authorizations. Circumventing intrusion detection and
          prevention mechanisms or malicious code protection mechanisms are examples of privileged functions
          that require protection from non-privileged users.
        Check:
          Verify the operating system prevents non-privileged users from executing privileged functions,
          including disabling, circumventing, or altering implemented security safeguards/countermeasures.

          Obtain a list of authorized users (other than System Administrator and guest accounts) for the
          system.

          Check the list against the system by using the following command:

          $ sudo semanage login -l | more
          Login Name SELinux User MLS/MCS Range Service
          __default__ user_u s0-s0:c0.c1023 *
          root unconfined_u s0-s0:c0.c1023 *
          system_u system_u s0-s0:c0.c1023 *
          joe staff_u s0-s0:c0.c1023 *

          All administrators must be mapped to the "sysadm_u", "staff_u", or an appropriately tailored
          confined role as defined by the organization.

          All authorized non-administrative users must be mapped to the "user_u" role.

          If they are not mapped in this way, this is a finding.
        Fix:
          Configure RHEL 8 to prevent non-privileged users from executing privileged functions, including
          disabling, circumventing, or altering implemented security safeguards/countermeasures.

          Use the following command to map a new user to the "sysadm_u" role:

          $ sudo semanage login -a -s sysadm_u <username>

          Use the following command to map an existing user to the "sysadm_u" role:

          $ sudo semanage login -m -s sysadm_u <username>

          Use the following command to map a new user to the "staff_u" role:

          $ sudo semanage login -a -s staff_u <username>

          Use the following command to map an existing user to the "staff_u" role:

          $ sudo semanage login -m -s staff_u <username>

          Use the following command to map a new user to the "user_u" role:

          $ sudo  semanage login -a -s user_u <username>

          Use the following command to map an existing user to the "user_u" role:

          $ sudo semanage login -m -s user_u <username>

################################################################################
# opensslcnf
################################################################################

- name: "The RHEL 8 operating system must implement DoD-approved encryption in the OpenSSL package."
  tags:
      - V230254
      - medium
      - RHEL-08-010293
      - SV-230254r627750_rule
      - C-32923r567508_chk
      - F-32898r567509_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without cryptographic integrity protections, information can be altered by unauthorized users
          without detection.

          Remote access (e.g., RDP) is access to DoD nonpublic information systems by an authorized user (or
          an information system) communicating through an external, non-organization-controlled network.
          Remote access methods include, for example, dial-up, broadband, and wireless.

          Cryptographic mechanisms used for protecting the integrity of information include, for example,
          signed hash functions using asymmetric cryptography enabling distribution of the public key to
          verify the hash information while maintaining the confidentiality of the secret key used to generate
          the hash.

          RHEL 8 incorporates system-wide crypto policies by default.  The employed algorithms can be viewed
          in the /etc/crypto-policies/back-ends/openssl.config file.

          Satisfies: SRG-OS-000250-GPOS-00093, SRG-OS-000393-GPOS-00173, SRG-OS-000394-GPOS-00174, SRG-
          OS-000125-GPOS-00065
        Check:
          Verify the OpenSSL library is configured to use only ciphers employing FIPS 140-2-approved
          algorithms:

          Verify that system-wide crypto policies are in effect:

          $ sudo grep -i opensslcnf.config /etc/pki/tls/openssl.cnf

          .include /etc/crypto-policies/back-ends/opensslcnf.config

          If the "opensslcnf.config" is not defined in the "/etc/pki/tls/openssl.cnf" file, this is a finding.

          Verify which system-wide crypto policy is in use:

          $ sudo update-crypto-policies --show

          FIPS

          If the system-wide crypto policy is set to anything other than "FIPS", this is a finding.
        Fix:
          Configure the RHEL 8 OpenSSL library to use only ciphers employing FIPS 140-2-approved algorithms
          with the following command:

          $ sudo fips-mode-setup --enable

          A reboot is required for the changes to take effect.

- name: "The RHEL 8 operating system must implement DoD-approved TLS encryption in the OpenSSL package."
  tags:
      - V230255
      - medium
      - RHEL-08-010294
      - SV-230255r809382_rule
      - C-32924r809380_chk
      - F-32899r809381_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without cryptographic integrity protections, information can be altered by unauthorized users
          without detection.

          Remote access (e.g., RDP) is access to DoD nonpublic information systems by an authorized user (or
          an information system) communicating through an external, non-organization-controlled network.
          Remote access methods include, for example, dial-up, broadband, and wireless.

          Cryptographic mechanisms used for protecting the integrity of information include, for example,
          signed hash functions using asymmetric cryptography enabling distribution of the public key to
          verify the hash information while maintaining the confidentiality of the secret key used to generate
          the hash.

          RHEL 8 incorporates system-wide crypto policies by default.  The employed algorithms can be viewed
          in the /etc/crypto-policies/back-ends/openssl.config file.

          Satisfies: SRG-OS-000250-GPOS-00093, SRG-OS-000393-GPOS-00173, SRG-OS-000394-GPOS-00174, SRG-
          OS-000125-GPOS-00065
        Check:
          Verify the OpenSSL library is configured to use only DoD-approved TLS encryption:

          For versions prior to crypto-policies-20210617-1.gitc776d3e.el8.noarch:

          $ sudo grep -i  MinProtocol /etc/crypto-policies/back-ends/opensslcnf.config

          MinProtocol = TLSv1.2

          If the "MinProtocol" is set to anything older than "TLSv1.2", this is a finding.

          For version crypto-policies-20210617-1.gitc776d3e.el8.noarch and newer:

          $ sudo grep -i  MinProtocol /etc/crypto-policies/back-ends/opensslcnf.config

          TLS.MinProtocol = TLSv1.2
          DTLS.MinProtocol = DTLSv1.2

          If the "TLS.MinProtocol" is set to anything older than "TLSv1.2" or the "DTLS.MinProtocol" is set to
          anything older than DTLSv1.2, this is a finding.
        Fix:
          Configure the RHEL 8 OpenSSL library to use only DoD-approved TLS encryption by editing the
          following line in the "/etc/crypto-policies/back-ends/opensslcnf.config" file:

          For versions prior to crypto-policies-20210617-1.gitc776d3e.el8.noarch:
          MinProtocol = TLSv1.2

          For version crypto-policies-20210617-1.gitc776d3e.el8.noarch and newer:
          TLS.MinProtocol = TLSv1.2
          DTLS.MinProtocol = DTLSv1.2
          A reboot is required for the changes to take effect.

- name: "RHEL 8 must have the packages required for multifactor authentication installed."
  tags:
      - V230273
      - medium
      - RHEL-08-010390
      - SV-230273r854028_rule
      - C-32942r743941_chk
      - F-32917r743942_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Using an authentication device, such as a DoD Common Access Card (CAC) or token that is separate
          from the information system, ensures that even if the information system is compromised, credentials
          stored on the authentication device will not be affected.

          Multifactor solutions that require devices separate from information systems gaining access include,
          for example, hardware tokens providing time-based or challenge-response authenticators and smart
          cards such as the U.S. Government Personal Identity Verification (PIV) card and the DoD CAC.

          A privileged account is defined as an information system account with authorizations of a privileged
          user.

          Remote access is access to DoD nonpublic information systems by an authorized user (or an
          information system) communicating through an external, non-organization-controlled network. Remote
          access methods include, for example, dial-up, broadband, and wireless.

          This requirement only applies to components where this is specific to the function of the device or
          has the concept of an organizational user (e.g., VPN, proxy capability). This does not apply to
          authentication for the purpose of configuring the device itself (management).
        Check:
          Verify the operating system has the packages required for multifactor authentication installed with
          the following commands:

          $ sudo yum list installed openssl-pkcs11

          openssl-pkcs11.x86_64          0.4.8-2.el8          @anaconda

          If the "openssl-pkcs11" package is not installed, ask the administrator to indicate what type of
          multifactor authentication is being utilized and what packages are installed to support it.  If
          there is no evidence of multifactor authentication being used, this is a finding.
        Fix:
          Configure the operating system to implement multifactor authentication by installing the required
          package with the following command:

          $ sudo yum install openssl-pkcs11

################################################################################
# firewalld
################################################################################

- name: "A firewall must be active on RHEL 8."
  tags:
      - V244544
      - medium
      - RHEL-08-040101
      - SV-244544r854073_rule
      - C-47819r743879_chk
      - F-47776r743880_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          "Firewalld" provides an easy and effective way to block/limit remote access to the system via ports,
          services, and protocols.

          Remote access services, such as those providing remote access to network devices and information
          systems, which lack automated control capabilities, increase risk and make remote user access
          management difficult at best.

          Remote access is access to DoD nonpublic information systems by an authorized user (or an
          information system) communicating through an external, non-organization-controlled network. Remote
          access methods include, for example, dial-up, broadband, and wireless.
          RHEL 8 functionality (e.g., RDP) must be capable of taking enforcement action if the audit reveals
          unauthorized activity. Automated control of remote access sessions allows organizations to ensure
          ongoing compliance with remote access policies by enforcing connection rules of remote access
          applications on a variety of information system components (e.g., servers, workstations, notebook
          computers, smartphones, and tablets).
        Check:
          Verify that "firewalld" is active with the following commands:

          $ sudo systemctl is-active firewalld

          active

          If the "firewalld" package is not "active", ask the System Administrator if another firewall is
          installed. If no firewall is installed and active this is a finding.
        Fix:
          Configure "firewalld" to protect the operating system with the following command:

          $ sudo systemctl enable firewalld

- name: "A RHEL 8 firewall must employ a deny-all, allow-by-exception policy for allowing connections to other systems."
  tags:
      - V230504
      - medium
      - RHEL-08-040090
      - SV-230504r854047_rule
      - C-33173r568258_chk
      - F-33148r809320_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Failure to restrict network connectivity only to authorized systems permits inbound connections from
          malicious systems. It also permits outbound connections that may facilitate exfiltration of DoD
          data.

          RHEL 8 incorporates the "firewalld" daemon, which allows for many different configurations. One of
          these configurations is zones. Zones can be utilized to a deny-all, allow-by-exception approach. The
          default "drop" zone will drop all incoming network packets unless it is explicitly allowed by the
          configuration file or is related to an outgoing network connection.
        Check:
          Verify "firewalld" is configured to employ a deny-all, allow-by-exception policy for allowing
          connections to other systems with the following commands:

          $ sudo  firewall-cmd --state

          running

          $ sudo firewall-cmd --get-active-zones

          [custom]
             interfaces: ens33

          $ sudo firewall-cmd --info-zone=[custom] | grep target

             target: DROP

          If no zones are active on the RHEL 8 interfaces or if the target is set to a different option other
          than "DROP", this is a finding.
        Fix:
          Configure the "firewalld" daemon to employ a deny-all, allow-by-exception with the following
          commands:

          $ sudo firewall-cmd --permanent --new-zone=[custom]

          $ sudo cp /usr/lib/firewalld/zones/drop.xml /etc/firewalld/zones/[custom].xml

          This will provide a clean configuration file to work with that employs a deny-all approach. Note:
          Add the exceptions that are required for mission functionality and update the short title in the xml
          file to match the [custom] zone name.

          Reload the firewall rules to make the new [custom] zone available to load:
          $ sudo firewall-cmd --reload

          Set the default zone to the new [custom] zone:
          $ sudo firewall-cmd --set-default-zone=[custom]

          Note: This is a runtime and permanent change.
          Add any interfaces to the new [custom] zone:
          $ sudo firewall-cmd --permanent --zone=[custom] --change-interface=ens33

          Reload the firewall rules for changes to take effect:
          $ sudo firewall-cmd --reload

- name: "A firewall must be installed on RHEL 8."
  tags:
      - V230505
      - medium
      - RHEL-08-040100
      - SV-230505r854048_rule
      - C-33174r744018_chk
      - F-33149r744019_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          "Firewalld" provides an easy and effective way to block/limit remote access to the system via ports,
          services, and protocols.

          Remote access services, such as those providing remote access to network devices and information
          systems, which lack automated control capabilities, increase risk and make remote user access
          management difficult at best.

          Remote access is access to DoD nonpublic information systems by an authorized user (or an
          information system) communicating through an external, non-organization-controlled network. Remote
          access methods include, for example, dial-up, broadband, and wireless.

          RHEL 8 functionality (e.g., RDP) must be capable of taking enforcement action if the audit reveals
          unauthorized activity. Automated control of remote access sessions allows organizations to ensure
          ongoing compliance with remote access policies by enforcing connection rules of remote access
          applications on a variety of information system components (e.g., servers, workstations, notebook
          computers, smartphones, and tablets).
        Check:
          Verify that "firewalld" is installed with the following commands:

          $ sudo yum list installed firewalld

          firewalld.noarch     0.7.0-5.el8

          If the "firewalld" package is not installed, ask the System Administrator if another firewall is
          installed. If no firewall is installed this is a finding.
        Fix:
          Install "firewalld" with the following command:

          $ sudo yum install firewalld.noarch

- name: "A firewall must be able to protect against or limit the effects of Denial of Service (DoS) attacks by ensuring RHEL 8 can implement rate-limiting measures on impacted network interfaces."
  tags:
      - V230525
      - medium
      - RHEL-08-040150
      - SV-230525r854066_rule
      - C-33194r744027_chk
      - F-33169r744028_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          DoS is a condition when a resource is not available for legitimate users. When this occurs, the
          organization either cannot accomplish its mission or must operate at degraded capacity.

          This requirement addresses the configuration of RHEL 8 to mitigate the impact of DoS attacks that
          have occurred or are ongoing on system availability. For each system, known and potential DoS
          attacks must be identified and solutions for each type implemented. A variety of technologies exists
          to limit or, in some cases, eliminate the effects of DoS attacks (e.g., limiting processes or
          establishing memory partitions). Employing increased capacity and bandwidth, combined with service
          redundancy, may reduce the susceptibility to some DoS attacks.

          Since version 0.6.0, "firewalld" has incorporated "nftables" as its backend support. Utilizing the
          limit statement in "nftables" can help to mitigate DoS attacks.
        Check:
          Verify "nftables" is configured to allow rate limits on any connection to the system with the
          following command:

          Verify "firewalld" has "nftables" set as the default backend:

          $ sudo grep -i firewallbackend /etc/firewalld/firewalld.conf

          # FirewallBackend
          FirewallBackend=nftables

          If the "nftables" is not set as the "firewallbackend" default, this is a finding.
        Fix:
          Configure "nftables" to be the default "firewallbackend" for "firewalld" by adding or editing the
          following line in "etc/firewalld/firewalld.conf":

          FirewallBackend=nftables

          Establish rate-limiting rules based on organization-defined types of DoS attacks on impacted network
          interfaces.

- name: "RHEL 8 must be configured to prohibit or restrict the use of functions, ports, protocols, and/or services, as defined in the Ports, Protocols, and Services Management (PPSM) Category Assignments List (CAL) and vulnerability assessments."
  tags:
      - V230500
      - medium
      - RHEL-08-040030
      - SV-230500r627750_rule
      - C-33169r568246_chk
      - F-33144r568247_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          To prevent unauthorized connection of devices, unauthorized transfer of information, or unauthorized
          tunneling (i.e., embedding of data types within data types), organizations must disable or restrict
          unused or unnecessary physical and logical ports/protocols on information systems.

          Operating systems are capable of providing a wide variety of functions and services. Some of the
          functions and services provided by default may not be necessary to support essential organizational
          operations. Additionally, it is sometimes convenient to provide multiple services from a single
          component (e.g., VPN and IPS); however, doing so increases risk over limiting the services provided
          by any one component.

          To support the requirements and principles of least functionality, the operating system must support
          the organizational requirements, providing only essential capabilities and limiting the use of
          ports, protocols, and/or services to only those required, authorized, and approved to conduct
          official business or to address authorized quality-of-life issues.
        Check:
          Inspect the firewall configuration and running services to verify it is configured to prohibit or
          restrict the use of functions, ports, protocols, and/or services that are unnecessary or prohibited.

          Check which services are currently active with the following command:

          $ sudo firewall-cmd --list-all-zones

          custom (active)
          target: DROP
          icmp-block-inversion: no
          interfaces: ens33
          sources:
          services: dhcpv6-client dns http https ldaps rpc-bind ssh
          ports:
          masquerade: no
          forward-ports:
          icmp-blocks:
          rich rules:

          Ask the System Administrator for the site or program Ports, Protocols, and Services Management
          Component Local Service Assessment (PPSM CLSA). Verify the services allowed by the firewall match
          the PPSM CLSA.

          If there are additional ports, protocols, or services that are not in the PPSM CLSA, or there are
          ports, protocols, or services that are prohibited by the PPSM Category Assurance List (CAL), this is
          a finding.
        Fix:
          Update the host's firewall settings and/or running services to comply with the PPSM Component Local
          Service Assessment (CLSA) for the site or program and the PPSM CAL.

################################################################################
# sysctl.d
################################################################################

- name: "RHEL 8 must prevent the loading of a new kernel for later execution."
  tags:
      - V230266
      - medium
      - RHEL-08-010372
      - SV-230266r858748_rule
      - C-32935r858746_chk
      - F-32910r858747_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Changes to any software components can have significant effects on the overall security of the
          operating system. This requirement ensures the software has not been tampered with and that it has
          been provided by a trusted vendor.

          Disabling kexec_load prevents an unsigned kernel image (that could be a windows kernel or modified
          vulnerable kernel) from being loaded. Kexec can be used subvert the entire secureboot process and
          should be avoided at all costs especially since it can load unsigned kernel images.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify the operating system is configured to disable kernel image loading with the following
          commands:

          Check the status of the kernel.kexec_load_disabled kernel parameter.

          $ sudo sysctl kernel.kexec_load_disabled

          kernel.kexec_load_disabled = 1

          If "kernel.kexec_load_disabled" is not set to "1" or is missing, this is a finding.

          Check that the configuration files are present to enable this kernel parameter.

          $ sudo grep -r kernel.kexec_load_disabled /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf:kernel.kexec_load_disabled = 1

          If "kernel.kexec_load_disabled" is not set to "1", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to disable kernel image loading.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          kernel.kexec_load_disabled = 1

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must enable kernel parameters to enforce discretionary access control on symlinks."
  tags:
      - V230267
      - medium
      - RHEL-08-010373
      - SV-230267r858751_rule
      - C-32936r858749_chk
      - F-32911r858750_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Discretionary Access Control (DAC) is based on the notion that individual users are "owners" of
          objects and therefore have discretion over who should be authorized to access the object and in
          which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the
          object or via specified ownership assignment. DAC allows the owner to determine who will have access
          to objects they control. An example of DAC includes user-controlled file permissions.

          When discretionary access control policies are implemented, subjects are not constrained with regard
          to what actions they can take with information for which they have already been granted access.
          Thus, subjects that have been granted access to information are not prevented from passing (i.e.,
          the subjects have the discretion to pass) the information to other subjects or objects. A subject
          that is constrained in its operation by Mandatory Access Control policies is still able to operate
          under the less rigorous constraints of this requirement. Thus, while Mandatory Access Control
          imposes constraints preventing a subject from passing information to another subject operating at a
          different sensitivity level, this requirement permits the subject to pass the information to any
          subject at the same sensitivity level. The policy is bounded by the information system boundary.
          Once the information is passed outside the control of the information system, additional means may
          be required to ensure the constraints remain in effect. While the older, more traditional
          definitions of discretionary access control require identity-based access control, that limitation
          is not required for this use of discretionary access control.

          By enabling the fs.protected_symlinks kernel parameter, symbolic links are permitted to be followed
          only when outside a sticky world-writable directory, or when the UID of the link and follower match,
          or when the directory owner matches the symlink's owner. Disallowing such symlinks helps mitigate
          vulnerabilities based on insecure file system accessed by privileged programs, avoiding an
          exploitation vector exploiting unsafe use of open() or creat().

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf

          Satisfies: SRG-OS-000312-GPOS-00122, SRG-OS-000312-GPOS-00123, SRG-OS-000312-GPOS-00124, SRG-
          OS-000324-GPOS-00125
        Check:
          Verify the operating system is configured to enable DAC on symlinks with the following commands:

          Check the status of the fs.protected_symlinks kernel parameter.

          $ sudo sysctl fs.protected_symlinks

          fs.protected_symlinks = 1

          If "fs.protected_symlinks" is not set to "1" or is missing, this is a finding.

          Check that the configuration files are present to enable this kernel parameter.

          $ sudo grep -r fs.protected_symlinks /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf:fs.protected_symlinks = 1

          If "fs.protected_symlinks" is not set to "1", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to enable DAC on symlinks.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          fs.protected_symlinks = 1

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must enable kernel parameters to enforce discretionary access control on hardlinks."
  tags:
      - V230268
      - medium
      - RHEL-08-010374
      - SV-230268r858754_rule
      - C-32937r858752_chk
      - F-32912r858753_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Discretionary Access Control (DAC) is based on the notion that individual users are "owners" of
          objects and therefore have discretion over who should be authorized to access the object and in
          which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the
          object or via specified ownership assignment. DAC allows the owner to determine who will have access
          to objects they control. An example of DAC includes user-controlled file permissions.

          When discretionary access control policies are implemented, subjects are not constrained with regard
          to what actions they can take with information for which they have already been granted access.
          Thus, subjects that have been granted access to information are not prevented from passing (i.e.,
          the subjects have the discretion to pass) the information to other subjects or objects. A subject
          that is constrained in its operation by Mandatory Access Control policies is still able to operate
          under the less rigorous constraints of this requirement. Thus, while Mandatory Access Control
          imposes constraints preventing a subject from passing information to another subject operating at a
          different sensitivity level, this requirement permits the subject to pass the information to any
          subject at the same sensitivity level. The policy is bounded by the information system boundary.
          Once the information is passed outside the control of the information system, additional means may
          be required to ensure the constraints remain in effect. While the older, more traditional
          definitions of discretionary access control require identity-based access control, that limitation
          is not required for this use of discretionary access control.

          By enabling the fs.protected_hardlinks kernel parameter, users can no longer create soft or hard
          links to files they do not own. Disallowing such hardlinks mitigate vulnerabilities based on
          insecure file system accessed by privileged programs, avoiding an exploitation vector exploiting
          unsafe use of open() or creat().

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf

          Satisfies: SRG-OS-000312-GPOS-00122, SRG-OS-000312-GPOS-00123, SRG-OS-000312-GPOS-00124, SRG-
          OS-000324-GPOS-00125
        Check:
          Verify the operating system is configured to enable DAC on hardlinks with the following commands:

          Check the status of the fs.protected_hardlinks kernel parameter.

          $ sudo sysctl fs.protected_hardlinks

          fs.protected_hardlinks = 1

          If "fs.protected_hardlinks" is not set to "1" or is missing, this is a finding.

          Check that the configuration files are present to enable this kernel parameter.

          $ sudo grep -r fs.protected_hardlinks /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf:fs.protected_hardlinks = 1

          If "fs.protected_hardlinks" is not set to "1", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to enable DAC on hardlinks.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          fs.protected_hardlinks = 1

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must restrict access to the kernel message buffer."
  tags:
      - V230269
      - low
      - RHEL-08-010375
      - SV-230269r858756_rule
      - C-32938r833295_chk
      - F-32913r858755_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Preventing unauthorized information transfers mitigates the risk of information, including encrypted
          representations of information, produced by the actions of prior users/roles (or the actions of
          processes acting on behalf of prior users/roles) from being available to any current users/roles (or
          current processes) that obtain access to shared system resources (e.g., registers, main memory, hard
          disks) after those resources have been released back to information systems. The control of
          information in shared resources is also commonly referred to as object reuse and residual
          information protection.

          This requirement generally applies to the design of an information technology product, but it can
          also apply to the configuration of particular information system components that are, or use, such
          products. This can be verified by acceptance/validation processes in DoD or other government
          agencies.

          There may be shared resources with configurable protections (e.g., files in storage) that may be
          assessed on specific information system components.

          Restricting access to the kernel message buffer limits access to only root. This prevents attackers
          from gaining additional system information as a non-privileged user.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify the operating system is configured to restrict access to the kernel message buffer with the
          following commands:

          Check the status of the kernel.dmesg_restrict kernel parameter.

          $ sudo sysctl kernel.dmesg_restrict

          kernel.dmesg_restrict = 1

          If "kernel.dmesg_restrict" is not set to "1" or is missing, this is a finding.

          Check that the configuration files are present to enable this kernel parameter.

          $ sudo grep -r kernel.dmesg_restrict /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf:kernel.dmesg_restrict = 1

          If "kernel.dmesg_restrict" is not set to "1", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to restrict access to the kernel message buffer.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          kernel.dmesg_restrict = 1

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must prevent kernel profiling by unprivileged users."
  tags:
      - V230270
      - low
      - RHEL-08-010376
      - SV-230270r858758_rule
      - C-32939r833297_chk
      - F-32914r858757_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Preventing unauthorized information transfers mitigates the risk of information, including encrypted
          representations of information, produced by the actions of prior users/roles (or the actions of
          processes acting on behalf of prior users/roles) from being available to any current users/roles (or
          current processes) that obtain access to shared system resources (e.g., registers, main memory, hard
          disks) after those resources have been released back to information systems. The control of
          information in shared resources is also commonly referred to as object reuse and residual
          information protection.

          This requirement generally applies to the design of an information technology product, but it can
          also apply to the configuration of particular information system components that are, or use, such
          products. This can be verified by acceptance/validation processes in DoD or other government
          agencies.

          There may be shared resources with configurable protections (e.g., files in storage) that may be
          assessed on specific information system components.

          Setting the kernel.perf_event_paranoid kernel parameter to "2" prevents attackers from gaining
          additional system information as a non-privileged user.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify the operating system is configured to prevent kernel profiling by unprivileged users with the
          following commands:

          Check the status of the kernel.perf_event_paranoid kernel parameter.

          $ sudo sysctl kernel.perf_event_paranoid

          kernel.perf_event_paranoid = 2

          If "kernel.perf_event_paranoid" is not set to "2" or is missing, this is a finding.

          Check that the configuration files are present to enable this kernel parameter.

          $ sudo grep -r kernel.perf_event_paranoid /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf:kernel.perf_event_paranoid = 2

          If "kernel.perf_event_paranoid" is not set to "2", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to prevent kernel profiling by unprivileged users.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          kernel.perf_event_paranoid = 2

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must implement address space layout randomization (ASLR) to protect its memory from unauthorized code execution."
  tags:
      - V230280
      - medium
      - RHEL-08-010430
      - SV-230280r858767_rule
      - C-32949r858765_chk
      - F-32924r858766_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Some adversaries launch attacks with the intent of executing code in non-executable regions of
          memory or in memory locations that are prohibited. Security safeguards employed to protect memory
          include, for example, data execution prevention and address space layout randomization. Data
          execution prevention safeguards can be either hardware-enforced or software-enforced with hardware
          providing the greater strength of mechanism.

          Examples of attacks are buffer overflow attacks.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 implements ASLR with the following command:

          $ sudo sysctl kernel.randomize_va_space

          kernel.randomize_va_space = 2

          If "kernel.randomize_va_space" is not set to "2", this is a finding.

          Check that the configuration files are present to enable this kernel parameter.

          $ sudo grep -r kernel.randomize_va_space /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf:kernel.randomize_va_space = 2

          If "kernel.randomize_va_space" is not set to "2", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure the operating system to implement virtual address space randomization.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          kernel.randomize_va_space=2

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Issue the following command to make the changes take effect:

          $ sudo sysctl --system

- name: "RHEL 8 must disable the kernel.core_pattern."
  tags:
      - V230311
      - medium
      - RHEL-08-010671
      - SV-230311r858769_rule
      - C-32980r833304_chk
      - F-32955r858768_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 disables storing core dumps with the following commands:

          $ sudo sysctl kernel.core_pattern

          kernel.core_pattern = |/bin/false

          If the returned line does not have a value of "|/bin/false", or a line is not returned and the need
          for core dumps is not documented with the Information System Security Officer (ISSO) as an
          operational requirement, this is a finding.

          Check that the configuration files are present to enable this kernel parameter.

          $ sudo grep -r kernel.core_pattern /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf:kernel.core_pattern = |/bin/false

          If "kernel.core_pattern" is not set to "|/bin/false", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to disable storing core dumps.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          kernel.core_pattern = |/bin/false

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          The system configuration files need to be reloaded for the changes to take effect. To reload the
          contents of the files, run the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must prevent IPv6 Internet Control Message Protocol (ICMP) redirect messages from being accepted."
  tags:
      - V230535
      - medium
      - RHEL-08-040210
      - SV-230535r858793_rule
      - C-33204r833339_chk
      - F-33179r858792_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a
          particular destination. These messages modify the host's route table and are unauthenticated. An
          illicit ICMP redirect message could result in a man-in-the-middle attack.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 will not accept IPv6 ICMP redirect messages.

          Note: If IPv6 is disabled on the system, this requirement is Not Applicable.

          Check the value of the default "accept_redirects" variables with the following command:

          $ sudo sysctl net.ipv6.conf.default.accept_redirects

          net.ipv6.conf.default.accept_redirects = 0

          If the returned line does not have a value of "0", a line is not returned, or the line is commented
          out, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv6.conf.default.accept_redirects /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv6.conf.default.accept_redirects = 0

          If "net.ipv6.conf.default.accept_redirects" is not set to "0", is missing or commented out, this is
          a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to prevent IPv6 ICMP redirect messages from being accepted.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv6.conf.default.accept_redirects = 0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not send Internet Control Message Protocol (ICMP) redirects."
  tags:
      - V230536
      - medium
      - RHEL-08-040220
      - SV-230536r858795_rule
      - C-33205r833341_chk
      - F-33180r858794_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a
          particular destination. These messages contain information from the system's route table, possibly
          revealing portions of the network topology.

          There are notable differences between Internet Protocol version 4 (IPv4) and Internet Protocol
          version 6 (IPv6). There is only a directive to disable sending of IPv4 redirected packets. Refer to
          RFC4294 for an explanation of "IPv6 Node Requirements", which resulted in this difference between
          IPv4 and IPv6.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 does not IPv4 ICMP redirect messages.

          Check the value of the "all send_redirects" variables with the following command:

          $ sudo sysctl net.ipv4.conf.all.send_redirects

          net.ipv4.conf.all.send_redirects = 0

          If the returned line does not have a value of "0", or a line is not returned, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv4.conf.all.send_redirects /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv4.conf.all.send_redirects = 0

          If "net.ipv4.conf.all.send_redirects" is not set to "0", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not allow interfaces to perform IPv4 ICMP redirects.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv4.conf.all.send_redirects=0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not respond to Internet Control Message Protocol (ICMP) echoes sent to a broadcast address."
  tags:
      - V230537
      - medium
      - RHEL-08-040230
      - SV-230537r858797_rule
      - C-33206r833343_chk
      - F-33181r858796_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Responding to broadcast ICMP echoes facilitates network mapping and provides a vector for
          amplification attacks.

          There are notable differences between Internet Protocol version 4 (IPv4) and Internet Protocol
          version 6 (IPv6). IPv6 does not implement the same method of broadcast as IPv4. Instead, IPv6 uses
          multicast addressing to the all-hosts multicast group. Refer to RFC4294 for an explanation of "IPv6
          Node Requirements", which resulted in this difference between IPv4 and IPv6.
          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 does not respond to ICMP echoes sent to a broadcast address.

          Check the value of the "icmp_echo_ignore_broadcasts" variable with the following command:

          $ sudo sysctl net.ipv4.icmp_echo_ignore_broadcasts

          net.ipv4.icmp_echo_ignore_broadcasts = 1

          If the returned line does not have a value of "1", a line is not returned, or the retuned line is
          commented out, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv4.icmp_echo_ignore_broadcasts /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv4.icmp_echo_ignore_broadcasts = 1

          If "net.ipv4.icmp_echo_ignore_broadcasts" is not set to "1", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not respond to IPv4 ICMP echoes sent to a broadcast address.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv4.icmp_echo_ignore_broadcasts=1

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not forward IPv6 source-routed packets."
  tags:
      - V230538
      - medium
      - RHEL-08-040240
      - SV-230538r858801_rule
      - C-33207r833345_chk
      - F-33182r858800_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Source-routed packets allow the source of the packet to suggest that routers forward the packet
          along a different path than configured on the router, which can be used to bypass network security
          measures. This requirement applies only to the forwarding of source-routed traffic, such as when
          forwarding is enabled and the system is functioning as a router.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 does not accept IPv6 source-routed packets.

          Note: If IPv6 is disabled on the system, this requirement is Not Applicable.

          Check the value of the accept source route variable with the following command:

          $ sudo sysctl net.ipv6.conf.all.accept_source_route

          net.ipv6.conf.all.accept_source_route = 0

          If the returned line does not have a value of "0", a line is not returned, or the line is commented
          out, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv6.conf.all.accept_source_route /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv6.conf.all.accept_source_route = 0

          If "net.ipv6.conf.all.accept_source_route" is not set to "0", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not forward IPv6 source-routed packets.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv6.conf.all.accept_source_route=0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not forward IPv6 source-routed packets by default."
  tags:
      - V230539
      - medium
      - RHEL-08-040250
      - SV-230539r861085_rule
      - C-33208r861084_chk
      - F-33183r858805_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Source-routed packets allow the source of the packet to suggest that routers forward the packet
          along a different path than configured on the router, which can be used to bypass network security
          measures. This requirement applies only to the forwarding of source-routed traffic, such as when
          forwarding is enabled and the system is functioning as a router.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 does not accept IPv6 source-routed packets by default.

          Note: If IPv6 is disabled on the system, this requirement is Not Applicable.

          Check the value of the accept source route variable with the following command:

          $ sudo sysctl net.ipv6.conf.default.accept_source_route

          net.ipv6.conf.default.accept_source_route = 0

          If the returned line does not have a value of "0", a line is not returned, or the line is commented
          out, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv6.conf.default.accept_source_route /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv6.conf.default.accept_source_route = 0

          If "net.ipv6.conf.default.accept_source_route" is not set to "0", is missing or commented out, this
          is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not forward IPv6 source-routed packets by default.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv6.conf.default.accept_source_route=0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not enable IPv6 packet forwarding unless the system is a router."
  tags:
      - V230540
      - medium
      - RHEL-08-040260
      - SV-230540r858810_rule
      - C-33209r833348_chk
      - F-33184r858809_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Routing protocol daemons are typically used on routers to exchange network topology information with
          other routers. If this software is used when not required, system network information may be
          unnecessarily transmitted across the network.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 is not performing IPv6 packet forwarding, unless the system is a router.

          Note: If IPv6 is disabled on the system, this requirement is Not Applicable.

          Check that IPv6 forwarding is disabled using the following commands:

          $ sudo sysctl net.ipv6.conf.all.forwarding

          net.ipv6.conf.all.forwarding = 0

          If the IPv6 forwarding value is not "0" and is not documented with the Information System Security
          Officer (ISSO) as an operational requirement, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv6.conf.all.forwarding /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv6.conf.all.forwarding = 0

          If "net.ipv6.conf.all.forwarding" is not set to "0", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not allow IPv6 packet forwarding, unless the system is a router.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv6.conf.all.forwarding=0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not accept router advertisements on all IPv6 interfaces."
  tags:
      - V230541
      - medium
      - RHEL-08-040261
      - SV-230541r858812_rule
      - C-33210r833350_chk
      - F-33185r858811_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Routing protocol daemons are typically used on routers to exchange network topology information with
          other routers. If this software is used when not required, system network information may be
          unnecessarily transmitted across the network.

          An illicit router advertisement message could result in a man-in-the-middle attack.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 does not accept router advertisements on all IPv6 interfaces, unless the system is a
          router.

          Note: If IPv6 is disabled on the system, this requirement is not applicable.

          Check to see if router advertisements are not accepted by using the following command:

          $ sudo sysctl  net.ipv6.conf.all.accept_ra

          net.ipv6.conf.all.accept_ra = 0

          If the "accept_ra" value is not "0" and is not documented with the Information System Security
          Officer (ISSO) as an operational requirement, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv6.conf.all.accept_ra /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv6.conf.all.accept_ra = 0

          If "net.ipv6.conf.all.accept_ra" is not set to "0", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not accept router advertisements on all IPv6 interfaces unless the system is a
          router.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv6.conf.all.accept_ra=0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not accept router advertisements on all IPv6 interfaces by default."
  tags:
      - V230542
      - medium
      - RHEL-08-040262
      - SV-230542r858814_rule
      - C-33211r833352_chk
      - F-33186r858813_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Routing protocol daemons are typically used on routers to exchange network topology information with
          other routers. If this software is used when not required, system network information may be
          unnecessarily transmitted across the network.

          An illicit router advertisement message could result in a man-in-the-middle attack.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 does not accept router advertisements on all IPv6 interfaces by default, unless the
          system is a router.

          Note: If IPv6 is disabled on the system, this requirement is not applicable.

          Check to see if router advertisements are not accepted by default by using the following command:

          $ sudo sysctl  net.ipv6.conf.default.accept_ra

          net.ipv6.conf.default.accept_ra = 0

          If the "accept_ra" value is not "0" and is not documented with the Information System Security
          Officer (ISSO) as an operational requirement, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv6.conf.default.accept_ra /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv6.conf.default.accept_ra = 0

          If "net.ipv6.conf.default.accept_ra" is not set to "0", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not accept router advertisements on all IPv6 interfaces by default unless the
          system is a router.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv6.conf.default.accept_ra=0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not allow interfaces to perform Internet Control Message Protocol (ICMP) redirects by default."
  tags:
      - V230543
      - medium
      - RHEL-08-040270
      - SV-230543r858816_rule
      - C-33212r833354_chk
      - F-33187r858815_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a
          particular destination. These messages contain information from the system's route table, possibly
          revealing portions of the network topology.

          There are notable differences between Internet Protocol version 4 (IPv4) and Internet Protocol
          version 6 (IPv6). There is only a directive to disable sending of IPv4 redirected packets. Refer to
          RFC4294 for an explanation of "IPv6 Node Requirements", which resulted in this difference between
          IPv4 and IPv6.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 does not allow interfaces to perform Internet Protocol version 4 (IPv4) ICMP redirects
          by default.

          Check the value of the "default send_redirects" variables with the following command:

          $ sudo sysctl net.ipv4.conf.default.send_redirects

          net.ipv4.conf.default.send_redirects=0

          If the returned line does not have a value of "0", or a line is not returned, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv4.conf.default.send_redirects /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv4.conf.default.send_redirects = 0

          If "net.ipv4.conf.default.send_redirects" is not set to "0", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not allow interfaces to perform Internet Protocol version 4 (IPv4) ICMP
          redirects by default.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv4.conf.default.send_redirects = 0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must ignore IPv6 Internet Control Message Protocol (ICMP) redirect messages."
  tags:
      - V230544
      - medium
      - RHEL-08-040280
      - SV-230544r858820_rule
      - C-33213r833356_chk
      - F-33188r858819_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a
          particular destination. These messages modify the host's route table and are unauthenticated. An
          illicit ICMP redirect message could result in a man-in-the-middle attack.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 ignores IPv6 ICMP redirect messages.

          Note: If IPv6 is disabled on the system, this requirement is Not Applicable.

          Check the value of the "accept_redirects" variables with the following command:

          $ sudo sysctl net.ipv6.conf.all.accept_redirects

          net.ipv6.conf.all.accept_redirects = 0

          If the returned line does not have a value of "0", a line is not returned, or the line is commented
          out, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv6.conf.all.accept_redirects /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv6.conf.all.accept_redirects = 0

          If "net.ipv6.conf.all.accept_redirects" is not set to "0", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to ignore IPv6 ICMP redirect messages.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv6.conf.all.accept_redirects = 0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must disable access to network bpf syscall from unprivileged processes."
  tags:
      - V230545
      - medium
      - RHEL-08-040281
      - SV-230545r858822_rule
      - C-33214r833358_chk
      - F-33189r858821_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 prevents privilege escalation thru the kernel by disabling access to the bpf syscall
          with the following commands:

          $ sudo sysctl kernel.unprivileged_bpf_disabled

          kernel.unprivileged_bpf_disabled = 1

          If the returned line does not have a value of "1", or a line is not returned, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r kernel.unprivileged_bpf_disabled /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: kernel.unprivileged_bpf_disabled = 1

          If "kernel.unprivileged_bpf_disabled" is not set to "1", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to prevent privilege escalation thru the kernel by disabling access to the bpf
          syscall by adding the following line to a file, in the "/etc/sysctl.d" directory:

          kernel.unprivileged_bpf_disabled = 1

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          The system configuration files need to be reloaded for the changes to take effect. To reload the
          contents of the files, run the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must restrict usage of ptrace to descendant  processes."
  tags:
      - V230546
      - medium
      - RHEL-08-040282
      - SV-230546r858824_rule
      - C-33215r833360_chk
      - F-33190r858823_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 restricts usage of ptrace to descendant processes with the following commands:

          $ sudo sysctl kernel.yama.ptrace_scope

          kernel.yama.ptrace_scope = 1

          If the returned line does not have a value of "1", or a line is not returned, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r kernel.yama.ptrace_scope /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: kernel.yama.ptrace_scope = 1

          If "kernel.yama.ptrace_scope" is not set to "1", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to restrict usage of ptrace to descendant processes by adding the following line to
          a file, in the "/etc/sysctl.d" directory:

          kernel.yama.ptrace_scope = 1

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          The system configuration files need to be reloaded for the changes to take effect. To reload the
          contents of the files, run the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must restrict exposed kernel pointer addresses access."
  tags:
      - V230547
      - medium
      - RHEL-08-040283
      - SV-230547r858826_rule
      - C-33216r833362_chk
      - F-33191r858825_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 restricts exposed kernel pointer addresses access with the following commands:

          $ sudo sysctl kernel.kptr_restrict

          kernel.kptr_restrict = 1

          If the returned line does not have a value of "1" or "2", or a line is not returned, this is a
          finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r kernel.kptr_restrict /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: kernel.kptr_restrict = 1

          If "kernel.kptr_restrict" is not set to "1" or "2", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to restrict exposed kernel pointer addresses access by adding the following line to
          a file, in the "/etc/sysctl.d" directory:

          kernel.kptr_restrict = 1

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          The system configuration files need to be reloaded for the changes to take effect. To reload the
          contents of the files, run the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must disable the use of user namespaces."
  tags:
      - V230548
      - medium
      - RHEL-08-040284
      - SV-230548r858828_rule
      - C-33217r833364_chk
      - F-33192r858827_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 disables the use of user namespaces with the following commands:

          Note: User namespaces are used primarily for Linux containers. If containers are in use, this
          requirement is not applicable.

          $ sudo sysctl user.max_user_namespaces

          user.max_user_namespaces = 0

          If the returned line does not have a value of "0", or a line is not returned, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r user.max_user_namespaces /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: user.max_user_namespaces = 0

          If "user.max_user_namespaces" is not set to "0", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to disable the use of user namespaces by adding the following line to a file, in
          the "/etc/sysctl.d" directory:

          Note: User namespaces are used primarily for Linux containers. If containers are in use, this
          requirement is not applicable.

          user.max_user_namespaces = 0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          The system configuration files need to be reloaded for the changes to take effect. To reload the
          contents of the files, run the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must use reverse path filtering on all IPv4 interfaces."
  tags:
      - V230549
      - medium
      - RHEL-08-040285
      - SV-230549r858830_rule
      - C-33218r833366_chk
      - F-33193r858829_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 uses reverse path filtering on all IPv4 interfaces with the following commands:

          $ sudo sysctl net.ipv4.conf.all.rp_filter

          net.ipv4.conf.all.rp_filter = 1

          If the returned line does not have a value of "1" or "2", or a line is not returned, this is a
          finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv4.conf.all.rp_filter /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv4.conf.all.rp_filter = 1

          If "net.ipv4.conf.all.rp_filter" is not set to "1" or "2", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to use reverse path filtering on all IPv4 interfaces by adding the following line
          to a file, in the "/etc/sysctl.d" directory:

          net.ipv4.conf.all.rp_filter = 1

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          The system configuration files need to be reloaded for the changes to take effect. To reload the
          contents of the files, run the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must prevent IPv4 Internet Control Message Protocol (ICMP) redirect messages from being accepted."
  tags:
      - V244550
      - medium
      - RHEL-08-040209
      - SV-244550r858791_rule
      - C-47825r833372_chk
      - F-47782r858790_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a
          particular destination. These messages modify the host's route table and are unauthenticated. An
          illicit ICMP redirect message could result in a man-in-the-middle attack.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 will not accept IPv4 ICMP redirect messages.

          Check the value of the default "accept_redirects" variables with the following command:

          $ sudo sysctl net.ipv4.conf.default.accept_redirects

          net.ipv4.conf.default.accept_redirects = 0

          If the returned line does not have a value of "0", a line is not returned, or the line is commented
          out, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv4.conf.default.accept_redirects /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv4.conf.default.accept_redirects = 0

          If "net.ipv4.conf.default.accept_redirects" is not set to "0", is missing or commented out, this is
          a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to prevent IPv4 ICMP redirect messages from being accepted.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv4.conf.default.accept_redirects = 0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not forward IPv4 source-routed packets."
  tags:
      - V244551
      - medium
      - RHEL-08-040239
      - SV-244551r858799_rule
      - C-47826r833374_chk
      - F-47783r858798_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Source-routed packets allow the source of the packet to suggest that routers forward the packet
          along a different path than configured on the router, which can be used to bypass network security
          measures. This requirement applies only to the forwarding of source-routed traffic, such as when
          forwarding is enabled and the system is functioning as a router.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 does not accept IPv4 source-routed packets.

          Check the value of the accept source route variable with the following command:

          $ sudo sysctl net.ipv4.conf.all.accept_source_route

          net.ipv4.conf.all.accept_source_route = 0

          If the returned line does not have a value of "0", a line is not returned, or the line is commented
          out, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv4.conf.all.accept_source_route /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv4.conf.all.accept_source_route = 0

          If "net.ipv4.conf.all.accept_source_route" is not set to "0", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not forward IPv4 source-routed packets.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv4.conf.all.accept_source_route=0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not forward IPv4 source-routed packets by default."
  tags:
      - V244552
      - medium
      - RHEL-08-040249
      - SV-244552r858803_rule
      - C-47827r833376_chk
      - F-47784r858802_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Source-routed packets allow the source of the packet to suggest that routers forward the packet
          along a different path than configured on the router, which can be used to bypass network security
          measures. This requirement applies only to the forwarding of source-routed traffic, such as when
          forwarding is enabled and the system is functioning as a router.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 does not accept IPv4 source-routed packets by default.

          Check the value of the accept source route variable with the following command:

          $ sudo sysctl net.ipv4.conf.default.accept_source_route

          net.ipv4.conf.default.accept_source_route = 0

          If the returned line does not have a value of "0", a line is not returned, or the line is commented
          out, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv4.conf.default.accept_source_route /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv4.conf.default.accept_source_route = 0

          If "net.ipv4.conf.default.accept_source_route" is not set to "0", is missing or commented out, this
          is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not forward IPv4 source-routed packets by default.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv4.conf.default.accept_source_route=0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must ignore IPv4 Internet Control Message Protocol (ICMP) redirect messages."
  tags:
      - V244553
      - medium
      - RHEL-08-040279
      - SV-244553r858818_rule
      - C-47828r833378_chk
      - F-47785r858817_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          ICMP redirect messages are used by routers to inform hosts that a more direct route exists for a
          particular destination. These messages modify the host's route table and are unauthenticated. An
          illicit ICMP redirect message could result in a man-in-the-middle attack.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 ignores IPv4 ICMP redirect messages.

          Check the value of the "accept_redirects" variables with the following command:

          $ sudo sysctl net.ipv4.conf.all.accept_redirects

          net.ipv4.conf.all.accept_redirects = 0

          If the returned line does not have a value of "0", a line is not returned, or the line is commented
          out, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv4.conf.all.accept_redirects /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv4.conf.all.accept_redirects = 0

          If "net.ipv4.conf.all.accept_redirects" is not set to "0", is missing or commented out, this is a
          finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to ignore IPv4 ICMP redirect messages.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv4.conf.all.accept_redirects = 0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must enable hardening for the Berkeley Packet Filter Just-in-time compiler."
  tags:
      - V244554
      - medium
      - RHEL-08-040286
      - SV-244554r858832_rule
      - C-47829r833380_chk
      - F-47786r858831_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Enabling hardening for the Berkeley Packet Filter (BPF) Just-in-time (JIT) compiler aids in
          mitigating JIT spraying attacks. Setting the value to "2" enables JIT hardening for all users.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 enables hardening for the BPF JIT with the following commands:

          $ sudo sysctl net.core.bpf_jit_harden

          net.core.bpf_jit_harden = 2

          If the returned line does not have a value of "2", or a line is not returned, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.core.bpf_jit_harden /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.core.bpf_jit_harden = 2

          If "net.core.bpf_jit_harden" is not set to "2", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to enable hardening for the BPF JIT compiler by adding the following line to a
          file, in the "/etc/sysctl.d" directory:

          net.core.bpf_jit_harden = 2

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          The system configuration files need to be reloaded for the changes to take effect. To reload the
          contents of the files, run the following command:

          $ sudo sysctl --system

- name: "RHEL 8 must not enable IPv4 packet forwarding unless the system is a router."
  tags:
      - V250317
      - medium
      - RHEL-08-040259
      - SV-250317r858808_rule
      - C-53751r833382_chk
      - F-53705r858807_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Routing protocol daemons are typically used on routers to exchange network topology information with
          other routers. If this software is used when not required, system network information may be
          unnecessarily transmitted across the network.

          The sysctl --system command will load settings from all system configuration files. All
          configuration files are sorted by their filename in lexicographic order, regardless of which of the
          directories they reside in. If multiple files specify the same option, the entry in the file with
          the lexicographically latest name will take precedence. Files are read from directories in the
          following list from top to bottom. Once a file of a given filename is loaded, any file of the same
          name in subsequent directories is ignored.
          /etc/sysctl.d/*.conf
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
        Check:
          Verify RHEL 8 is not performing IPv4 packet forwarding, unless the system is a router.

          Check that IPv4 forwarding is disabled using the following command:

          $ sudo sysctl net.ipv4.conf.all.forwarding

          net.ipv4.conf.all.forwarding = 0
          If the IPv4 forwarding value is not "0" and is not documented with the Information System Security
          Officer (ISSO) as an operational requirement, this is a finding.

          Check that the configuration files are present to enable this network parameter.

          $ sudo grep -r net.ipv4.conf.all.forwarding /run/sysctl.d/*.conf /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf /lib/sysctl.d/*.conf /etc/sysctl.conf /etc/sysctl.d/*.conf

          /etc/sysctl.d/99-sysctl.conf: net.ipv4.conf.all.forwarding = 0

          If "net.ipv4.conf.all.forwarding" is not set to "0", is missing or commented out, this is a finding.

          If conflicting results are returned, this is a finding.
        Fix:
          Configure RHEL 8 to not allow IPv4 packet forwarding, unless the system is a router.

          Add or edit the following line in a system configuration file, in the "/etc/sysctl.d/" directory:

          net.ipv4.conf.all.forwarding=0

          Remove any configurations that conflict with the above from the following locations:
          /run/sysctl.d/*.conf
          /usr/local/lib/sysctl.d/*.conf
          /usr/lib/sysctl.d/*.conf
          /lib/sysctl.d/*.conf
          /etc/sysctl.conf
          /etc/sysctl.d/*.conf

          Load settings from all system configuration files with the following command:

          $ sudo sysctl --system

################################################################################
# PKGS
################################################################################

- name: "A File Transfer Protocol (FTP) server package must not be installed unless mission essential on RHEL 8."
  tags:
      - V230558
      - high
      - RHEL-08-040360
      - SV-230558r627750_rule
      - C-33227r568420_chk
      - F-33202r568421_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The FTP service provides an unencrypted remote access that does not provide for the confidentiality
          and integrity of user passwords or the remote session. If a privileged user were to log on using
          this service, the privileged user password could be compromised. SSH or other encrypted file
          transfer methods must be used in place of this service.
        Check:
          Verify an FTP server has not been installed on the system with the following commands:

          $ sudo yum list installed *ftpd*

          vsftpd.x86_64                                                     3.0.3-28.el8
          appstream

          If an FTP server is installed and is not documented with the Information System Security Officer
          (ISSO) as an operational requirement, this is a finding.
        Fix:
          Document the FTP server package with the ISSO as an operational requirement or remove it from the
          system with the following command:

          $ sudo yum remove vsftpd

- name: "The gssproxy package must not be installed unless mission essential on RHEL 8."
  tags:
      - V230559
      - medium
      - RHEL-08-040370
      - SV-230559r646887_rule
      - C-33228r568423_chk
      - F-33203r568424_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Operating systems are capable of providing a wide variety of functions and services. Some of the
          functions and services, provided by default, may not be necessary to support essential
          organizational operations (e.g., key missions, functions).

          The gssproxy package is a proxy for GSS API credential handling and could expose secrets on some
          networks. It is not needed for normal function of the OS.
        Check:
          Verify the gssproxy package has not been installed on the system with the following commands:

          $ sudo yum list installed gssproxy

          gssproxy.x86_64                                                     0.8.0-14.el8
          @anaconda

          If the gssproxy package is installed and is not documented with the Information System Security
          Officer (ISSO) as an operational requirement, this is a finding.
        Fix:
          Document the gssproxy package with the ISSO as an operational requirement or remove it from the
          system with the following command:

          $ sudo yum remove gssproxy

- name: "The iprutils package must not be installed unless mission essential on RHEL 8."
  tags:
      - V230560
      - medium
      - RHEL-08-040380
      - SV-230560r627750_rule
      - C-33229r568426_chk
      - F-33204r568427_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Operating systems are capable of providing a wide variety of functions and services. Some of the
          functions and services, provided by default, may not be necessary to support essential
          organizational operations (e.g., key missions, functions).

          The iprutils package provides a suite of utilities to manage and configure SCSI devices supported by
          the ipr SCSI storage device driver.
        Check:
          Verify the iprutils package has not been installed on the system with the following commands:

          $ sudo yum list installed iprutils

          iprutils.x86_64                                                     2.4.18.1-1.el8
          @anaconda

          If the iprutils package is installed and is not documented with the Information System Security
          Officer (ISSO) as an operational requirement, this is a finding.
        Fix:
          Document the iprutils package with the ISSO as an operational requirement or remove it from the
          system with the following command:

          $ sudo yum remove iprutils

- name: "The tuned package must not be installed unless mission essential on RHEL 8."
  tags:
      - V230561
      - medium
      - RHEL-08-040390
      - SV-230561r627750_rule
      - C-33230r568429_chk
      - F-33205r568430_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Operating systems are capable of providing a wide variety of functions and services. Some of the
          functions and services, provided by default, may not be necessary to support essential
          organizational operations (e.g., key missions, functions).

          The tuned package contains a daemon that tunes the system settings dynamically. It does so by
          monitoring the usage of several system components periodically. Based on that information,
          components will then be put into lower or higher power savings modes to adapt to the current usage.
          The tuned package is not needed for normal OS operations.
        Check:
          Verify the tuned package has not been installed on the system with the following commands:

          $ sudo yum list installed tuned

          tuned.noarch                                                     2.12.0-3.el8
          @anaconda

          If the tuned package is installed and is not documented with the Information System Security Officer
          (ISSO) as an operational requirement, this is a finding.
        Fix:
          Document the tuned package with the ISSO as an operational requirement or remove it from the system
          with the following command:

          $ sudo yum remove tuned

- name: "The krb5-server package must not be installed on RHEL 8."
  tags:
      - V237640
      - medium
      - RHEL-08-010163
      - SV-237640r646890_rule
      - C-40859r646888_chk
      - F-40822r646889_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Unapproved mechanisms that are used for authentication to the cryptographic module are not verified
          and therefore cannot be relied upon to provide confidentiality or integrity, and DoD data may be
          compromised.

          RHEL 8 systems utilizing encryption are required to use FIPS-compliant mechanisms for authenticating
          to cryptographic modules.

          Currently, Kerberos does not utilize FIPS 140-2 cryptography.

          FIPS 140-2 is the current standard for validating that mechanisms used to access cryptographic
          modules utilize authentication that meets DoD requirements. This allows for Security Levels 1, 2, 3,
          or 4 for use on a general-purpose computing system.
        Check:
          Verify the krb5-server package has not been installed on the system with the following commands:

          If the system is a workstation or is utilizing krb5-server-1.17-18.el8.x86_64 or newer, this is Not
          Applicable

          $ sudo yum list installed krb5-server

          krb5-server.x86_64 1.17-9.el8 repository

          If the krb5-server package is installed and is not documented with the Information System Security
          Officer (ISSO) as an operational requirement, this is a finding.
        Fix:
          Document the krb5-server package with the ISSO as an operational requirement or remove it from the
          system with the following command:

          $ sudo yum remove krb5-server

- name: "The krb5-workstation package must not be installed on RHEL 8."
  tags:
      - V230239
      - medium
      - RHEL-08-010162
      - SV-230239r646864_rule
      - C-32908r646863_chk
      - F-32883r567464_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Unapproved mechanisms that are used for authentication to the cryptographic module are not verified
          and therefore cannot be relied upon to provide confidentiality or integrity, and DoD data may be
          compromised.

          RHEL 8 systems utilizing encryption are required to use FIPS-compliant mechanisms for authenticating
          to cryptographic modules.

          Currently, Kerberos does not utilize FIPS 140-2 cryptography.

          FIPS 140-2 is the current standard for validating that mechanisms used to access cryptographic
          modules utilize authentication that meets DoD requirements. This allows for Security Levels 1, 2, 3,
          or 4 for use on a general-purpose computing system.
        Check:
          Verify the krb5-workstation package has not been installed on the system with the following
          commands:

          If the system is a server or is utilizing krb5-workstation-1.17-18.el8.x86_64 or newer, this is Not
          Applicable.

          $ sudo yum list installed krb5-workstation

          krb5-workstation.x86_64                                                     1.17-9.el8
          repository

          If the krb5-workstation package is installed and is not documented with the Information System
          Security Officer (ISSO) as an operational requirement, this is a finding.
        Fix:
          Document the krb5-workstation package with the ISSO as an operational requirement or remove it from
          the system with the following command:

          $ sudo yum remove krb5-workstation

- name: "The graphical display manager must not be installed on RHEL 8 unless approved."
  tags:
      - V230553
      - medium
      - RHEL-08-040320
      - SV-230553r809324_rule
      - C-33222r809322_chk
      - F-33197r809323_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Internet services that are not required for system or application processes must not be active to
          decrease the attack surface of the system. Graphical display managers have a long history of
          security vulnerabilities and must not be used, unless approved and documented.
        Check:
          Verify that a graphical user interface is not installed:

          $ rpm -qa | grep xorg | grep server

          Ask the System Administrator if use of a graphical user interface is an operational requirement.

          If the use of a graphical user interface on the system is not documented with the ISSO, this is a
          finding.
        Fix:
          Document the requirement for a graphical user interface with the ISSO or reinstall the operating
          system without the graphical user interface. If reinstallation is not feasible, then continue with
          the following procedure:

          Open an SSH session and enter the following commands:

          $ sudo yum remove xorg-x11-server-Xorg xorg-x11-server-common xorg-x11-server-utils xorg-x11-server-
          Xwayland

          A reboot is required for the changes to take effect.

- name: "The Trivial File Transfer Protocol (TFTP) server package must not be installed if not required for RHEL 8 operational support."
  tags:
      - V230533
      - high
      - RHEL-08-040190
      - SV-230533r627750_rule
      - C-33202r568345_chk
      - F-33177r568346_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If TFTP is required for operational support (such as the transmission of router configurations) its
          use must be documented with the Information System Security Officer (ISSO), restricted to only
          authorized personnel, and have access control rules established.
        Check:
          Verify a TFTP server has not been installed on the system with the following command:

          $ sudo yum list installed tftp-server

          tftp-server.x86_64   5.2-24.el8

          If TFTP is installed and the requirement for TFTP is not documented with the ISSO, this is a
          finding.
        Fix:
          Remove the TFTP package from the system with the following command:

          $ sudo yum remove tftp-server

################################################################################
# 
################################################################################

- name: "RHEL 8 must display the Standard Mandatory DoD Notice and Consent Banner before granting local or remote access to the system via a command line user logon."
  tags:
      - V230227
      - medium
      - RHEL-08-010060
      - SV-230227r627750_rule
      - C-32896r567427_chk
      - F-32871r567428_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Display of a standardized and approved use notification before granting access to the operating
          system ensures privacy and security notification verbiage used is consistent with applicable federal
          laws, Executive Orders, directives, policies, regulations, standards, and guidance.

          System use notifications are required only for access via logon interfaces with human users and are
          not required when such human interfaces do not exist.

          The banner must be formatted in accordance with applicable DoD policy. Use the following verbiage
          for operating systems that can accommodate banners of 1300 characters:

          "You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-
          authorized use only.

          By using this IS (which includes any device attached to this IS), you consent to the following
          conditions:

          -The USG routinely intercepts and monitors communications on this IS for purposes including, but not
          limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel
          misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.

          -At any time, the USG may inspect and seize data stored on this IS.

          -Communications using, or data stored on, this IS are not private, are subject to routine
          monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.

          -This IS includes security measures (e.g., authentication and access controls) to protect USG
          interests--not for your personal benefit or privacy.

          -Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative
          searching or monitoring of the content of privileged communications, or work product, related to
          personal representation or services by attorneys, psychotherapists, or clergy, and their assistants.
          Such communications and work product are private and confidential. See User Agreement for details."

          Satisfies: SRG-OS-000023-GPOS-00006, SRG-OS-000228-GPOS-00088
        Check:
          Verify RHEL 8 displays the Standard Mandatory DoD Notice and Consent Banner before granting access
          to the operating system via a command line user logon.

          Check that RHEL 8 displays a banner at the command line login screen with the following command:

          $ sudo cat /etc/issue

          If the banner is set correctly it will return the following text:

          “You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-
          authorized use only.

          By using this IS (which includes any device attached to this IS), you consent to the following
          conditions:

          -The USG routinely intercepts and monitors communications on this IS for purposes including, but not
          limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel
          misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.

          -At any time, the USG may inspect and seize data stored on this IS.

          -Communications using, or data stored on, this IS are not private, are subject to routine
          monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.

          -This IS includes security measures (e.g., authentication and access controls) to protect USG
          interests--not for your personal benefit or privacy.

          -Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative
          searching or monitoring of the content of privileged communications, or work product, related to
          personal representation or services by attorneys, psychotherapists, or clergy, and their assistants.
          Such communications and work product are private and confidential. See User Agreement for details.”

          If the banner text does not match the Standard Mandatory DoD Notice and Consent Banner exactly, this
          is a finding.
        Fix:
          Configure RHEL 8 to display the Standard Mandatory DoD Notice and Consent Banner before granting
          access to the system via command line logon.

          Edit the "/etc/issue" file to replace the default text with the Standard Mandatory DoD Notice and
          Consent Banner. The DoD-required text is:

          "You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-
          authorized use only.

          By using this IS (which includes any device attached to this IS), you consent to the following
          conditions:

          -The USG routinely intercepts and monitors communications on this IS for purposes including, but not
          limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel
          misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.

          -At any time, the USG may inspect and seize data stored on this IS.

          -Communications using, or data stored on, this IS are not private, are subject to routine
          monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.

          -This IS includes security measures (e.g., authentication and access controls) to protect USG
          interests -- not for your personal benefit or privacy.

          -Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative
          searching or monitoring of the content of privileged communications, or work product, related to
          personal representation or services by attorneys, psychotherapists, or clergy, and their assistants.
          Such communications and work product are private and confidential. See User Agreement for details."

- name: "RHEL 8 operating systems booted with United Extensible Firmware Interface (UEFI) must require authentication upon booting into single-user mode and maintenance."
  tags:
      - V230234
      - high
      - RHEL-08-010140
      - SV-230234r743922_rule
      - C-32903r743920_chk
      - F-32878r743921_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If the system does not require valid authentication before it boots into single-user or maintenance
          mode, anyone who invokes single-user or maintenance mode is granted privileged access to all files
          on the system. GRUB 2 is the default boot loader for RHEL 8 and is designed to require a password to
          boot into single-user mode or make modifications to the boot menu.
        Check:
          For systems that use BIOS, this is Not Applicable.

          Check to see if an encrypted grub superusers password is set. On systems that use UEFI, use the
          following command:

          $ sudo grep -iw grub2_password /boot/efi/EFI/redhat/user.cfg

          GRUB2_PASSWORD=grub.pbkdf2.sha512.[password_hash]

          If the grub superusers password does not begin with "grub.pbkdf2.sha512", this is a finding.
        Fix:
          Configure the system to require a grub bootloader password for the grub superusers account with the
          grub2-setpassword command, which creates/overwrites the /boot/efi/EFI/redhat/user.cfg file.

          Generate an encrypted grub2 password for the grub superusers account with the following command:

          $ sudo grub2-setpassword
          Enter password:
          Confirm password:

- name: "RHEL 8 operating systems booted with a BIOS must require authentication upon booting into single-user and maintenance modes."
  tags:
      - V230235
      - high
      - RHEL-08-010150
      - SV-230235r743925_rule
      - C-32904r743923_chk
      - F-32879r743924_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If the system does not require valid authentication before it boots into single-user or maintenance
          mode, anyone who invokes single-user or maintenance mode is granted privileged access to all files
          on the system. GRUB 2 is the default boot loader for RHEL 8 and is designed to require a password to
          boot into single-user mode or make modifications to the boot menu.
        Check:
          For systems that use UEFI, this is Not Applicable.

          Check to see if an encrypted grub superusers password is set. On systems that use a BIOS, use the
          following command:

          $ sudo grep -iw grub2_password /boot/grub2/user.cfg

          GRUB2_PASSWORD=grub.pbkdf2.sha512.[password_hash]

          If the grub superusers password does not begin with "grub.pbkdf2.sha512", this is a finding.
        Fix:
          Configure the system to require a grub bootloader password for the grub superusers account with the
          grub2-setpassword command, which creates/overwrites the /boot/grub2/user.cfg file.

          Generate an encrypted grub2 password for the grub superusers account with the following command:

          $ sudo grub2-setpassword
          Enter password:
          Confirm password:

- name: "RHEL 8 operating systems must require authentication upon booting into rescue mode."
  tags:
      - V230236
      - medium
      - RHEL-08-010151
      - SV-230236r743928_rule
      - C-32905r743926_chk
      - F-32880r743927_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If the system does not require valid root authentication before it boots into emergency or rescue
          mode, anyone who invokes emergency or rescue mode is granted privileged access to all files on the
          system.
        Check:
          Check to see if the system requires authentication for rescue mode with the following command:

          $ sudo grep sulogin-shell /usr/lib/systemd/system/rescue.service

          ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue

          If the "ExecStart" line is configured for anything other than "/usr/lib/systemd/systemd-sulogin-
          shell rescue", commented out, or missing, this is a finding.
        Fix:
          Configure the system to require authentication upon booting into rescue mode by adding the following
          line to the "/usr/lib/systemd/system/rescue.service" file.

          ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue

- name: "RHEL 8 must prevent system daemons from using Kerberos for authentication."
  tags:
      - V230238
      - medium
      - RHEL-08-010161
      - SV-230238r646862_rule
      - C-32907r646861_chk
      - F-32882r567461_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Unapproved mechanisms that are used for authentication to the cryptographic module are not verified
          and therefore cannot be relied upon to provide confidentiality or integrity, and DoD data may be
          compromised.

          RHEL 8 systems utilizing encryption are required to use FIPS-compliant mechanisms for authenticating
          to cryptographic modules.

          The key derivation function (KDF) in Kerberos is not FIPS compatible.  Ensuring the system does not
          have any keytab files present prevents system daemons from using Kerberos for authentication.  A
          keytab is a file containing pairs of Kerberos principals and encrypted keys.

          FIPS 140-2 is the current standard for validating that mechanisms used to access cryptographic
          modules utilize authentication that meets DoD requirements. This allows for Security Levels 1, 2, 3,
          or 4 for use on a general-purpose computing system.
        Check:
          Verify that RHEL 8 prevents system daemons from using Kerberos for authentication.

          If the system is a server utilizing krb5-server-1.17-18.el8.x86_64 or newer, this requirement is not
          applicable.
          If the system is a workstation utilizing krb5-workstation-1.17-18.el8.x86_64 or newer, this
          requirement is not applicable.

          Check if there are available keytabs with the following command:

          $ sudo ls -al /etc/*.keytab

          If this command produces any file(s), this is a finding.
        Fix:
          Configure RHEL 8 to prevent system daemons from using Kerberos for authentication.

          Remove any files with the .keytab extension from the operating system.

- name: "A sticky bit must be set on all RHEL 8 public directories to prevent unauthorized and unintended information transferred via shared system resources."
  tags:
      - V230243
      - medium
      - RHEL-08-010190
      - SV-230243r792857_rule
      - C-32912r792856_chk
      - F-32887r567476_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Preventing unauthorized information transfers mitigates the risk of information, including encrypted
          representations of information, produced by the actions of prior users/roles (or the actions of
          processes acting on behalf of prior users/roles) from being available to any current users/roles (or
          current processes) that obtain access to shared system resources (e.g., registers, main memory, hard
          disks) after those resources have been released back to information systems. The control of
          information in shared resources is also commonly referred to as object reuse and residual
          information protection.

          This requirement generally applies to the design of an information technology product, but it can
          also apply to the configuration of particular information system components that are, or use, such
          products. This can be verified by acceptance/validation processes in DoD or other government
          agencies.

          There may be shared resources with configurable protections (e.g., files in storage) that may be
          assessed on specific information system components.
        Check:
          Verify that all world-writable directories have the sticky bit set.

          Check to see that all world-writable directories have the sticky bit set by running the following
          command:

          $ sudo find / -type d \( -perm -0002 -a ! -perm -1000 \) -print 2>/dev/null

          drwxrwxrwt 7 root root 4096 Jul 26 11:19 /tmp

          If any of the returned directories are world-writable and do not have the sticky bit set, this is a
          finding.
        Fix:
          Configure all world-writable directories to have the sticky bit set to prevent unauthorized and
          unintended information transferred via shared system resources.

          Set the sticky bit on all world-writable directories using the command, replace "[World-Writable
          Directory]" with any directory path missing the sticky bit:

          $ sudo chmod 1777 [World-Writable Directory]

- name: "The RHEL 8 /var/log/messages file must have mode 0640 or less permissive."
  tags:
      - V230245
      - medium
      - RHEL-08-010210
      - SV-230245r627750_rule
      - C-32914r567481_chk
      - F-32889r567482_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Only authorized personnel should be aware of errors and the details of the errors. Error messages
          are an indicator of an organization's operational state or can identify the RHEL 8 system or
          platform. Additionally, Personally Identifiable Information (PII) and operational information must
          not be revealed through error messages to unauthorized personnel or their designated
          representatives.

          The structure and content of error messages must be carefully considered by the organization and
          development team. The extent to which the information system is able to identify and handle error
          conditions is guided by organizational policy and operational requirements.
        Check:
          Verify that the "/var/log/messages" file has mode "0640" or less permissive with the following
          command:

          $ sudo stat -c "%a %n" /var/log/messages

          640 /var/log/messages

          If a value of "0640" or less permissive is not returned, this is a finding.
        Fix:
          Change the permissions of the file "/var/log/messages" to "0640" by running the following command:

          $ sudo chmod 0640 /var/log/messages

- name: "The RHEL 8 /var/log/messages file must be owned by root."
  tags:
      - V230246
      - medium
      - RHEL-08-010220
      - SV-230246r627750_rule
      - C-32915r567484_chk
      - F-32890r567485_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Only authorized personnel should be aware of errors and the details of the errors. Error messages
          are an indicator of an organization's operational state or can identify the RHEL 8 system or
          platform. Additionally, Personally Identifiable Information (PII) and operational information must
          not be revealed through error messages to unauthorized personnel or their designated
          representatives.

          The structure and content of error messages must be carefully considered by the organization and
          development team. The extent to which the information system is able to identify and handle error
          conditions is guided by organizational policy and operational requirements.
        Check:
          Verify that the /var/log/messages file is owned by root with the following command:

          $ sudo stat -c "%U" /var/log/messages

          root

          If "root" is not returned as a result, this is a finding.
        Fix:
          Change the owner of the file /var/log/messages to root by running the following command:

          $ sudo chown root /var/log/messages

- name: "The RHEL 8 /var/log/messages file must be group-owned by root."
  tags:
      - V230247
      - medium
      - RHEL-08-010230
      - SV-230247r627750_rule
      - C-32916r567487_chk
      - F-32891r567488_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Only authorized personnel should be aware of errors and the details of the errors. Error messages
          are an indicator of an organization's operational state or can identify the RHEL 8 system or
          platform. Additionally, Personally Identifiable Information (PII) and operational information must
          not be revealed through error messages to unauthorized personnel or their designated
          representatives.

          The structure and content of error messages must be carefully considered by the organization and
          development team. The extent to which the information system is able to identify and handle error
          conditions is guided by organizational policy and operational requirements.
        Check:
          Verify the "/var/log/messages" file is group-owned by root with the following command:

          $ sudo stat -c "%G" /var/log/messages

          root

          If "root" is not returned as a result, this is a finding.
        Fix:
          Change the group of the file "/var/log/messages" to "root" by running the following command:

          $ sudo chgrp root /var/log/messages

- name: "The RHEL 8 /var/log directory must have mode 0755 or less permissive."
  tags:
      - V230248
      - medium
      - RHEL-08-010240
      - SV-230248r627750_rule
      - C-32917r567490_chk
      - F-32892r567491_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Only authorized personnel should be aware of errors and the details of the errors. Error messages
          are an indicator of an organization's operational state or can identify the RHEL 8 system or
          platform. Additionally, Personally Identifiable Information (PII) and operational information must
          not be revealed through error messages to unauthorized personnel or their designated
          representatives.

          The structure and content of error messages must be carefully considered by the organization and
          development team. The extent to which the information system is able to identify and handle error
          conditions is guided by organizational policy and operational requirements.
        Check:
          Verify that the "/var/log" directory has a mode of "0755" or less with the following command:

          $ sudo stat -c "%a %n" /var/log

          755

          If a value of "0755" or less permissive is not returned, this is a finding.
        Fix:
          Change the permissions of the directory "/var/log" to "0755" by running the following command:

          $ sudo chmod 0755 /var/log

- name: "The RHEL 8 /var/log directory must be owned by root."
  tags:
      - V230249
      - medium
      - RHEL-08-010250
      - SV-230249r627750_rule
      - C-32918r567493_chk
      - F-32893r567494_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Only authorized personnel should be aware of errors and the details of the errors. Error messages
          are an indicator of an organization's operational state or can identify the RHEL 8 system or
          platform. Additionally, Personally Identifiable Information (PII) and operational information must
          not be revealed through error messages to unauthorized personnel or their designated
          representatives.

          The structure and content of error messages must be carefully considered by the organization and
          development team. The extent to which the information system is able to identify and handle error
          conditions is guided by organizational policy and operational requirements.
        Check:
          Verify the /var/log directory is owned by root with the following command:

          $ sudo stat -c "%U" /var/log

          root

          If "root" is not returned as a result, this is a finding.
        Fix:
          Change the owner of the directory /var/log to root by running the following command:

          $ sudo chown root /var/log

- name: "The RHEL 8 /var/log directory must be group-owned by root."
  tags:
      - V230250
      - medium
      - RHEL-08-010260
      - SV-230250r627750_rule
      - C-32919r567496_chk
      - F-32894r567497_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Only authorized personnel should be aware of errors and the details of the errors. Error messages
          are an indicator of an organization's operational state or can identify the RHEL 8 system or
          platform. Additionally, Personally Identifiable Information (PII) and operational information must
          not be revealed through error messages to unauthorized personnel or their designated
          representatives.

          The structure and content of error messages must be carefully considered by the organization and
          development team. The extent to which the information system is able to identify and handle error
          conditions is guided by organizational policy and operational requirements.
        Check:
          Verify the "/var/log" directory is group-owned by root with the following command:

          $ sudo stat -c "%G" /var/log

          root

          If "root" is not returned as a result, this is a finding.
        Fix:
          Change the group of the directory "/var/log" to "root" by running the following command:

          $ sudo chgrp root /var/log

- name: "The RHEL 8 operating system must implement DoD-approved TLS encryption in the GnuTLS package."
  tags:
      - V230256
      - medium
      - RHEL-08-010295
      - SV-230256r792859_rule
      - C-32925r792858_chk
      - F-32900r567515_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without cryptographic integrity protections, information can be altered by unauthorized users
          without detection.

          Transport Layer Security (TLS) encryption is a required security setting as a number of known
          vulnerabilities have been reported against Secure Sockets Layer (SSL) and earlier versions of TLS.
          Encryption of private information is essential to ensuring data confidentiality. If private
          information is not encrypted, it can be intercepted and easily read by an unauthorized party. SQL
          Server must use a minimum of FIPS 140-2-approved TLS version 1.2, and all non-FIPS-approved SSL and
          TLS versions must be disabled. NIST SP 800-52 specifies the preferred configurations for government
          systems.

          Cryptographic mechanisms used for protecting the integrity of information include, for example,
          signed hash functions using asymmetric cryptography enabling distribution of the public key to
          verify the hash information while maintaining the confidentiality of the secret key used to generate
          the hash.

          The GnuTLS library offers an API to access secure communications protocols.  SSLv2 is not available
          in the GnuTLS library.  The RHEL 8 system-wide crypto policy defines employed algorithms in the
          /etc/crypto-policies/back-ends/gnutls.config file.

          Satisfies: SRG-OS-000250-GPOS-00093, SRG-OS-000423-GPOS-00187
        Check:
          Verify the GnuTLS library is configured to only allow DoD-approved SSL/TLS Versions:

          $ sudo grep -io +vers.*  /etc/crypto-policies/back-ends/gnutls.config

          +VERS-ALL:-VERS-DTLS0.9:-VERS-SSL3.0:-VERS-TLS1.0:-VERS-TLS1.1:-VERS-DTLS1.0:+COMP-
          NULL:%PROFILE_MEDIUM

          If the "gnutls.config" does not list "-VERS-DTLS0.9:-VERS-SSL3.0:-VERS-TLS1.0:-VERS-TLS1.1:-VERS-
          DTLS1.0" to disable unapproved SSL/TLS versions, this is a finding.
        Fix:
          Configure the RHEL 8 GnuTLS library to use only DoD-approved encryption by adding the following line
          to "/etc/crypto-policies/back-ends/gnutls.config":

          +VERS-ALL:-VERS-DTLS0.9:-VERS-SSL3.0:-VERS-TLS1.0:-VERS-TLS1.1:-VERS-DTLS1.0

          A reboot is required for the changes to take effect.

- name: "RHEL 8 system commands must have mode 755 or less permissive."
  tags:
      - V230257
      - medium
      - RHEL-08-010300
      - SV-230257r792862_rule
      - C-32926r792860_chk
      - F-32901r792861_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 were to allow any user to make changes to software libraries, then those changes might be
          implemented without undergoing the appropriate testing and approvals that are part of a robust
          change management process.

          This requirement applies to RHEL 8 with software libraries that are accessible and configurable, as
          in the case of interpreted languages. Software libraries also include privileged programs that
          execute with escalated privileges. Only qualified and authorized individuals will be allowed to
          obtain access to information system components for purposes of initiating changes, including
          upgrades and modifications.
        Check:
          Verify the system commands contained in the following directories have mode "755" or less permissive
          with the following command:

          $ sudo find -L /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin -perm /022 -exec ls -l
          {} \;

          If any system commands are found to be group-writable or world-writable, this is a finding.
        Fix:
          Configure the system commands to be protected from unauthorized access.

          Run the following command, replacing "[FILE]" with any system command with a mode more permissive
          than "755".

          $ sudo chmod 755 [FILE]

- name: "RHEL 8 system commands must be owned by root."
  tags:
      - V230258
      - medium
      - RHEL-08-010310
      - SV-230258r627750_rule
      - C-32927r567520_chk
      - F-32902r567521_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 were to allow any user to make changes to software libraries, then those changes might be
          implemented without undergoing the appropriate testing and approvals that are part of a robust
          change management process.

          This requirement applies to RHEL 8 with software libraries that are accessible and configurable, as
          in the case of interpreted languages. Software libraries also include privileged programs that
          execute with escalated privileges. Only qualified and authorized individuals will be allowed to
          obtain access to information system components for purposes of initiating changes, including
          upgrades and modifications.
        Check:
          Verify the system commands contained in the following directories are owned by "root" with the
          following command:

          $ sudo find -L /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin ! -user root -exec ls -l
          {} \;

          If any system commands are returned, this is a finding.
        Fix:
          Configure the system commands to be protected from unauthorized access.

          Run the following command, replacing "[FILE]" with any system command file not owned by "root".

          $ sudo chown root [FILE]

- name: "RHEL 8 system commands must be group-owned by root or a system account."
  tags:
      - V230259
      - medium
      - RHEL-08-010320
      - SV-230259r792864_rule
      - C-32928r792863_chk
      - F-32903r567524_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 were to allow any user to make changes to software libraries, then those changes might be
          implemented without undergoing the appropriate testing and approvals that are part of a robust
          change management process.

          This requirement applies to RHEL 8 with software libraries that are accessible and configurable, as
          in the case of interpreted languages. Software libraries also include privileged programs that
          execute with escalated privileges. Only qualified and authorized individuals will be allowed to
          obtain access to information system components for purposes of initiating changes, including
          upgrades and modifications.
        Check:
          Verify the system commands contained in the following directories are group-owned by "root", or a
          required system account, with the following command:

          $ sudo find -L /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin ! -group root -exec ls
          -l {} \;

          If any system commands are returned and is not group-owned by a required system account, this is a
          finding.
        Fix:
          Configure the system commands to be protected from unauthorized access.

          Run the following command, replacing "[FILE]" with any system command file not group-owned by "root"
          or a required system account.

          $ sudo chgrp root [FILE]

- name: "RHEL 8 library files must have mode 755 or less permissive."
  tags:
      - V230260
      - medium
      - RHEL-08-010330
      - SV-230260r792867_rule
      - C-32929r792865_chk
      - F-32904r792866_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 were to allow any user to make changes to software libraries, then those changes might be
          implemented without undergoing the appropriate testing and approvals that are part of a robust
          change management process.

          This requirement applies to RHEL 8 with software libraries that are accessible and configurable, as
          in the case of interpreted languages. Software libraries also include privileged programs that
          execute with escalated privileges. Only qualified and authorized individuals will be allowed to
          obtain access to information system components for purposes of initiating changes, including
          upgrades and modifications.
        Check:
          Verify the system-wide shared library files contained in the following directories have mode "755"
          or less permissive with the following command:

          $ sudo find -L /lib /lib64 /usr/lib /usr/lib64 -perm /022 -type f -exec ls -l {} \;

          If any system-wide shared library file is found to be group-writable or world-writable, this is a
          finding.
        Fix:
          Configure the library files to be protected from unauthorized access. Run the following command,
          replacing "[FILE]" with any library file with a mode more permissive than 755.

          $ sudo chmod 755 [FILE]

- name: "RHEL 8 library files must be owned by root."
  tags:
      - V230261
      - medium
      - RHEL-08-010340
      - SV-230261r627750_rule
      - C-32930r567529_chk
      - F-32905r567530_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 were to allow any user to make changes to software libraries, then those changes might be
          implemented without undergoing the appropriate testing and approvals that are part of a robust
          change management process.

          This requirement applies to RHEL 8 with software libraries that are accessible and configurable, as
          in the case of interpreted languages. Software libraries also include privileged programs that
          execute with escalated privileges. Only qualified and authorized individuals will be allowed to
          obtain access to information system components for purposes of initiating changes, including
          upgrades and modifications.
        Check:
          Verify the system-wide shared library files are owned by "root" with the following command:

          $ sudo find -L /lib /lib64 /usr/lib /usr/lib64 ! -user root -exec ls -l {} \;

          If any system wide shared library file is returned, this is a finding.
        Fix:
          Configure the system-wide shared library files (/lib, /lib64, /usr/lib and /usr/lib64) to be
          protected from unauthorized access.

          Run the following command, replacing "[FILE]" with any library file not owned by "root".

          $ sudo chown root [FILE]

- name: "RHEL 8 library files must be group-owned by root or a system account."
  tags:
      - V230262
      - medium
      - RHEL-08-010350
      - SV-230262r627750_rule
      - C-32931r567532_chk
      - F-32906r567533_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 were to allow any user to make changes to software libraries, then those changes might be
          implemented without undergoing the appropriate testing and approvals that are part of a robust
          change management process.

          This requirement applies to RHEL 8 with software libraries that are accessible and configurable, as
          in the case of interpreted languages. Software libraries also include privileged programs that
          execute with escalated privileges. Only qualified and authorized individuals will be allowed to
          obtain access to information system components for purposes of initiating changes, including
          upgrades and modifications.
        Check:
          Verify the system-wide shared library files are group-owned by "root" with the following command:

          $ sudo find -L /lib /lib64 /usr/lib /usr/lib64 ! -group root -exec ls -l {} \;

          If any system wide shared library file is returned and is not group-owned by a required system
          account, this is a finding.
        Fix:
          Configure the system-wide shared library files (/lib, /lib64, /usr/lib and /usr/lib64) to be
          protected from unauthorized access.

          Run the following command, replacing "[FILE]" with any library file not group-owned by "root".

          $ sudo chgrp root [FILE]

- name: "RHEL 8 must accept Personal Identity Verification (PIV) credentials."
  tags:
      - V230275
      - medium
      - RHEL-08-010410
      - SV-230275r854030_rule
      - C-32944r567571_chk
      - F-32919r567572_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The use of PIV credentials facilitates standardization and reduces the risk of unauthorized access.

          The DoD has mandated the use of the Common Access Card (CAC) to support identity management and
          personal authentication for systems covered under Homeland Security Presidential Directive (HSPD)
          12, as well as making the CAC a primary component of layered protection for national security
          systems.
        Check:
          Verify RHEL 8 accepts PIV credentials.

          Check that the "opensc" package is installed on the system with the following command:

          $ sudo yum list installed opensc

          opensc.x86_64     0.19.0-5.el8     @anaconda

          Check that "opensc" accepts PIV cards with the following command:

          $ sudo opensc-tool --list-drivers | grep -i piv

            PIV-II     Personal Identity Verification Card

          If the "opensc" package is not installed and the "opensc-tool" driver list does not include "PIV-
          II", this is a finding.
        Fix:
          Configure RHEL 8 to accept PIV credentials.

          Install the "opensc" package using the following command:

          $ sudo yum install opensc

- name: "RHEL 8 must implement non-executable data to protect its memory from unauthorized code execution."
  tags:
      - V230276
      - medium
      - RHEL-08-010420
      - SV-230276r854031_rule
      - C-32945r567574_chk
      - F-32920r567575_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Some adversaries launch attacks with the intent of executing code in non-executable regions of
          memory or in memory locations that are prohibited. Security safeguards employed to protect memory
          include, for example, data execution prevention and address space layout randomization. Data
          execution prevention safeguards can be either hardware-enforced or software-enforced with hardware
          providing the greater strength of mechanism.

          Examples of attacks are buffer overflow attacks.
        Check:
          Verify the NX (no-execution) bit flag is set on the system.

          Check that the no-execution bit flag is set with the following commands:

          $ sudo dmesg | grep NX

          [ 0.000000] NX (Execute Disable) protection: active

          If "dmesg" does not show "NX (Execute Disable) protection" active, check the cpuinfo settings with
          the following command:

          $ sudo less /proc/cpuinfo | grep -i flags
          flags : fpu vme de pse tsc ms nx rdtscp lm constant_tsc

          If "flags" does not contain the "nx" flag, this is a finding.
        Fix:
          The NX bit execute protection must be enabled in the system BIOS.

- name: "RHEL 8 must clear the page allocator to prevent use-after-free attacks."
  tags:
      - V230277
      - medium
      - RHEL-08-010421
      - SV-230277r792884_rule
      - C-32946r792883_chk
      - F-32921r567578_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Some adversaries launch attacks with the intent of executing code in non-executable regions of
          memory or in memory locations that are prohibited. Security safeguards employed to protect memory
          include, for example, data execution prevention and address space layout randomization. Data
          execution prevention safeguards can be either hardware-enforced or software-enforced with hardware
          providing the greater strength of mechanism.

          Poisoning writes an arbitrary value to freed pages, so any modification or reference to that page
          after being freed or before being initialized will be detected and prevented. This prevents many
          types of use-after-free vulnerabilities at little performance cost. Also prevents leak of data and
          detection of corrupted memory.

          Satisfies: SRG-OS-000134-GPOS-00068, SRG-OS-000433-GPOS-00192
        Check:
          Verify that GRUB 2 is configured to enable page poisoning to mitigate use-after-free vulnerabilities
          with the following commands:

          Check that the current GRUB 2 configuration has page poisoning enabled:

          $ sudo grub2-editenv list | grep page_poison

          kernelopts=root=/dev/mapper/rhel-root ro crashkernel=auto resume=/dev/mapper/rhel-swap
          rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap rhgb quiet fips=1 page_poison=1 vsyscall=none audit=1
          audit_backlog_limit=8192 boot=UUID=8d171156-cd61-421c-ba41-1c021ac29e82

          If "page_poison" is not set to "1" or is missing, this is a finding.

          Check that page poisoning is enabled by default to persist in kernel updates:

          $ sudo grep page_poison /etc/default/grub

          GRUB_CMDLINE_LINUX="page_poison=1"

          If "page_poison" is not set to "1", is missing or commented out, this is a finding.
        Fix:
          Configure RHEL 8 to enable page poisoning with the following commands:

          $ sudo grubby --update-kernel=ALL --args="page_poison=1"

          Add or modify the following line in "/etc/default/grub" to ensure the configuration survives kernel
          updates:

          GRUB_CMDLINE_LINUX="page_poison=1"

- name: "RHEL 8 must disable virtual syscalls."
  tags:
      - V230278
      - medium
      - RHEL-08-010422
      - SV-230278r792886_rule
      - C-32947r792885_chk
      - F-32922r743947_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Syscalls are special routines in the Linux kernel, which userspace applications ask to do privileged
          tasks.  Invoking a system call is an expensive operation because the processor must interrupt the
          currently executing task and switch context to kernel mode and then back to userspace after the
          system call completes.  Virtual Syscalls map into user space a page that contains some variables and
          the implementation of some system calls.  This allows the system calls to be executed in userspace
          to alleviate the context switching expense.

          Virtual Syscalls provide an opportunity of attack for a user who has control of the return
          instruction pointer.  Disabling vsyscalls help to prevent return oriented programming (ROP) attacks
          via buffer overflows and overruns. If the system intends to run containers based on RHEL 6
          components, then virtual syscalls will need enabled so the components function properly.

          Satisfies: SRG-OS-000134-GPOS-00068, SRG-OS-000433-GPOS-00192
        Check:
          Verify that GRUB 2 is configured to disable vsyscalls with the following commands:

          Check that the current GRUB 2 configuration disables vsyscalls:

          $ sudo grub2-editenv list | grep vsyscall

          kernelopts=root=/dev/mapper/rhel-root ro crashkernel=auto resume=/dev/mapper/rhel-swap
          rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap rhgb quiet fips=1 page_poison=1 vsyscall=none audit=1
          audit_backlog_limit=8192 boot=UUID=8d171156-cd61-421c-ba41-1c021ac29e82

          If "vsyscall" is not set to "none" or is missing, this is a finding.

          Check that vsyscalls are disabled by default to persist in kernel updates:

          $ sudo grep vsyscall /etc/default/grub

          GRUB_CMDLINE_LINUX="vsyscall=none"

          If "vsyscall" is not set to "none", is missing or commented out and is not documented with the
          Information System Security Officer (ISSO) as an operational requirement, this is a finding.
        Fix:
          Document the use of vsyscalls with the ISSO as an operational requirement or disable them with the
          following command:

          $ sudo grubby --update-kernel=ALL --args="vsyscall=none"

          Add or modify the following line in "/etc/default/grub" to ensure the configuration survives kernel
          updates:

          GRUB_CMDLINE_LINUX="vsyscall=none"

- name: "RHEL 8 must clear SLUB/SLAB objects to prevent use-after-free attacks."
  tags:
      - V230279
      - medium
      - RHEL-08-010423
      - SV-230279r792888_rule
      - C-32948r792887_chk
      - F-32923r567584_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Some adversaries launch attacks with the intent of executing code in non-executable regions of
          memory or in memory locations that are prohibited. Security safeguards employed to protect memory
          include, for example, data execution prevention and address space layout randomization. Data
          execution prevention safeguards can be either hardware-enforced or software-enforced with hardware
          providing the greater strength of mechanism.

          Poisoning writes an arbitrary value to freed pages, so any modification or reference to that page
          after being freed or before being initialized will be detected and prevented. This prevents many
          types of use-after-free vulnerabilities at little performance cost. Also prevents leak of data and
          detection of corrupted memory.

          SLAB objects are blocks of physically-contiguous memory.  SLUB is the unqueued SLAB allocator.

          Satisfies: SRG-OS-000134-GPOS-00068, SRG-OS-000433-GPOS-00192
        Check:
          Verify that GRUB 2 is configured to enable poisoning of SLUB/SLAB objects to mitigate use-after-free
          vulnerabilities with the following commands:

          Check that the current GRUB 2 configuration has poisoning of SLUB/SLAB objects enabled:

          $ sudo grub2-editenv list | grep slub_debug

          kernelopts=root=/dev/mapper/rhel-root ro crashkernel=auto resume=/dev/mapper/rhel-swap
          rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap rhgb quiet fips=1 slub_debug=P page_poison=1 vsyscall=none
          audit=1 audit_backlog_limit=8192 boot=UUID=8d171156-cd61-421c-ba41-1c021ac29e82

          If "slub_debug" is not set to "P" or is missing, this is a finding.

          Check that poisoning of SLUB/SLAB objects is enabled by default to persist in kernel updates:

          $ sudo grep slub_debug /etc/default/grub

          GRUB_CMDLINE_LINUX="slub_debug=P"

          If "slub_debug" is not set to "P", is missing or commented out, this is a finding.
        Fix:
          Configure RHEL 8 to enable poisoning of SLUB/SLAB objects with the following commands:

          $ sudo grubby --update-kernel=ALL --args="slub_debug=P"

          Add or modify the following line in "/etc/default/grub" to ensure the configuration survives kernel
          updates:

          GRUB_CMDLINE_LINUX="slub_debug=P"

- name: "RHEL 8 must enable the hardware random number generator entropy gatherer service."
  tags:
      - V230285
      - low
      - RHEL-08-010471
      - SV-230285r627750_rule
      - C-32954r567601_chk
      - F-32929r567602_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The most important characteristic of a random number generator is its randomness, namely its ability
          to deliver random numbers that are impossible to predict.  Entropy in computer security is
          associated with the unpredictability of a source of randomness.  The random source with high entropy
          tends to achieve a uniform distribution of random values.  Random number generators are one of the
          most important building blocks of cryptosystems.

          The rngd service feeds random data from hardware device to kernel random device. Quality (non-
          predictable) random number generation is important for several security functions (i.e., ciphers).
        Check:
          Check that  RHEL 8 has enabled the hardware random number generator entropy gatherer service.

          Verify the rngd service is enabled and active with the following commands:

          $ sudo systemctl is-enabled rngd

          enabled

          $ sudo systemctl is-active rngd

          active

          If the service is not "enable and "active", this is a finding.
        Fix:
          Start the rngd service, and enable the rngd service with the following commands:

          $ sudo systemctl start rngd.service

          $ sudo systemctl enable rngd.service

- name: "RHEL 8 must prevent files with the setuid and setgid bit set from being executed on file systems that contain user home directories."
  tags:
      - V230299
      - medium
      - RHEL-08-010570
      - SV-230299r627750_rule
      - C-32968r567643_chk
      - F-32943r567644_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "nosuid" mount option causes the system not to execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify file systems that contain user home directories are mounted with the "nosuid" option.

          Note: If a separate file system has not been created for the user home directories (user home
          directories are mounted under "/"), this is automatically a finding as the "nosuid" option cannot be
          used on the "/" system.

          Find the file system(s) that contain the user home directories with the following command:

          $ sudo awk -F: '($3>=1000)&&($7 !~ /nologin/){print $1,$3,$6}' /etc/passwd

          smithj:1001: /home/smithj
          robinst:1002: /home/robinst

          Check the file systems that are mounted at boot time with the following command:

          $ sudo more /etc/fstab

          UUID=a411dc99-f2a1-4c87-9e05-184977be8539 /home xfs
          rw,relatime,discard,data=ordered,nosuid,nodev,noexec 0 0

          If a file system found in "/etc/fstab" refers to the user home directory file system and it does not
          have the "nosuid" option set, this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "nosuid" option on file systems that contain user home
          directories for interactive users.

- name: "RHEL 8 must prevent files with the setuid and setgid bit set from being executed on the /boot directory."
  tags:
      - V230300
      - medium
      - RHEL-08-010571
      - SV-230300r743959_rule
      - C-32969r743958_chk
      - F-32944r567647_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "nosuid" mount option causes the system not to execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          For systems that use UEFI, this is Not Applicable.

          Verify the /boot directory is mounted with the "nosuid" option with the following command:

          $ sudo mount | grep '\s/boot\s'

          /dev/sda1 on /boot type xfs (rw,nosuid,relatime,seclabe,attr2,inode64,noquota)

          If the /boot file system does not have the "nosuid" option set, this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "nosuid" option on the /boot directory.

- name: "RHEL 8 must prevent special devices on non-root local partitions."
  tags:
      - V230301
      - medium
      - RHEL-08-010580
      - SV-230301r627750_rule
      - C-32970r567649_chk
      - F-32945r567650_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.  The only legitimate location
          for device files is the /dev directory located on the root partition.
        Check:
          Verify all non-root local partitions are mounted with the "nodev" option with the following command:

          $ sudo mount | grep '^/dev\S* on /\S' | grep --invert-match 'nodev'

          If any output is produced, this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "nodev" option on all non-root local partitions.

- name: "RHEL 8 must prevent code from being executed on file systems that contain user home directories."
  tags:
      - V230302
      - medium
      - RHEL-08-010590
      - SV-230302r627750_rule
      - C-32971r567652_chk
      - F-32946r567653_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "noexec" mount option causes the system not to execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.
        Check:
          Verify file systems that contain user home directories are mounted with the "noexec" option.

          Note: If a separate file system has not been created for the user home directories (user home
          directories are mounted under "/"), this is automatically a finding as the "noexec" option cannot be
          used on the "/" system.

          Find the file system(s) that contain the user home directories with the following command:

          $ sudo awk -F: '($3>=1000)&&($7 !~ /nologin/){print $1,$3,$6}' /etc/passwd

          smithj:1001: /home/smithj
          robinst:1002: /home/robinst

          Check the file systems that are mounted at boot time with the following command:

          $ sudo more /etc/fstab

          UUID=a411dc99-f2a1-4c87-9e05-184977be8539 /home ext4
          rw,relatime,discard,data=ordered,nosuid,nodev,noexec 0 2

          If a file system found in "/etc/fstab" refers to the user home directory file system and it does not
          have the "noexec" option set, this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "noexec" option on file systems that contain user home
          directories for interactive users.

- name: "RHEL 8 must prevent special devices on file systems that are used with removable media."
  tags:
      - V230303
      - medium
      - RHEL-08-010600
      - SV-230303r627750_rule
      - C-32972r567655_chk
      - F-32947r567656_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "nodev" mount option causes the system not to interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.
        Check:
          Verify file systems that are used for removable media are mounted with the "nodev" option with the
          following command:

          $ sudo more /etc/fstab

          UUID=2bc871e4-e2a3-4f29-9ece-3be60c835222 /mnt/usbflash vfat noauto,owner,ro,nosuid,nodev,noexec 0 0

          If a file system found in "/etc/fstab" refers to removable media and it does not have the "nodev"
          option set, this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "nodev" option on file systems that are associated with
          removable media.

- name: "RHEL 8 must prevent code from being executed on file systems that are used with removable media."
  tags:
      - V230304
      - medium
      - RHEL-08-010610
      - SV-230304r627750_rule
      - C-32973r567658_chk
      - F-32948r567659_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "noexec" mount option causes the system not to execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.
        Check:
          Verify file systems that are used for removable media are mounted with the "noexec" option with the
          following command:

          $ sudo more /etc/fstab

          UUID=2bc871e4-e2a3-4f29-9ece-3be60c835222 /mnt/usbflash vfat noauto,owner,ro,nosuid,nodev,noexec 0 0

          If a file system found in "/etc/fstab" refers to removable media and it does not have the "noexec"
          option set, this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "noexec" option on file systems that are associated with
          removable media.

- name: "RHEL 8 must prevent files with the setuid and setgid bit set from being executed on file systems that are used with removable media."
  tags:
      - V230305
      - medium
      - RHEL-08-010620
      - SV-230305r627750_rule
      - C-32974r567661_chk
      - F-32949r567662_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "nosuid" mount option causes the system not to execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify file systems that are used for removable media are mounted with the "nosuid" option with the
          following command:

          $ sudo more /etc/fstab

          UUID=2bc871e4-e2a3-4f29-9ece-3be60c835222 /mnt/usbflash vfat noauto,owner,ro,nosuid,nodev,noexec 0 0

          If a file system found in "/etc/fstab" refers to removable media and it does not have the "nosuid"
          option set, this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "nosuid" option on file systems that are associated with
          removable media.

- name: "RHEL 8 must prevent code from being executed on file systems that are imported via Network File System (NFS)."
  tags:
      - V230306
      - medium
      - RHEL-08-010630
      - SV-230306r627750_rule
      - C-32975r567664_chk
      - F-32950r567665_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "noexec" mount option causes the system not to execute binary files. This option must be used
          for mounting any file system not containing approved binary as they may be incompatible. Executing
          files from untrusted file systems increases the opportunity for unprivileged users to attain
          unauthorized administrative access.
        Check:
          Verify that  file systems being imported via NFS are mounted with the "noexec" option with the
          following command:

          $ sudo grep nfs /etc/fstab | grep noexec

          UUID=e06097bb-cfcd-437b-9e4d-a691f5662a7d /store nfs rw,nosuid,nodev,noexec 0 0

          If a file system found in "/etc/fstab" refers to NFS and it does not have the "noexec" option set,
          this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "noexec" option on file systems that are being imported via
          NFS.

- name: "RHEL 8 must prevent special devices on file systems that are imported via Network File System (NFS)."
  tags:
      - V230307
      - medium
      - RHEL-08-010640
      - SV-230307r627750_rule
      - C-32976r567667_chk
      - F-32951r567668_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.
        Check:
          Verify file systems that are being NFS-imported are mounted with the "nodev" option with the
          following command:

          $ sudo grep nfs /etc/fstab | grep nodev

          UUID=e06097bb-cfcd-437b-9e4d-a691f5662a7d /store nfs rw,nosuid,nodev,noexec 0 0

          If a file system found in "/etc/fstab" refers to NFS and it does not have the "nodev" option set,
          this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "nodev" option on file systems that are being imported via
          NFS.

- name: "RHEL 8 must prevent files with the setuid and setgid bit set from being executed on file systems that are imported via Network File System (NFS)."
  tags:
      - V230308
      - medium
      - RHEL-08-010650
      - SV-230308r627750_rule
      - C-32977r567670_chk
      - F-32952r567671_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "nosuid" mount option causes the system not to execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify that file systems being imported via NFS are mounted with the "nosuid" option with the
          following command:

          $ sudo grep nfs /etc/fstab | grep nosuid

          UUID=e06097bb-cfcd-437b-9e4d-a691f5662a7d /store nfs rw,nosuid,nodev,noexec 0 0

          If a file system found in "/etc/fstab" refers to NFS and it does not have the "nosuid" option set,
          this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "nosuid" option on file systems that are being imported via
          NFS.

- name: "Local RHEL 8 initialization files must not execute world-writable programs."
  tags:
      - V230309
      - medium
      - RHEL-08-010660
      - SV-230309r627750_rule
      - C-32978r567673_chk
      - F-32953r567674_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If user start-up files execute world-writable programs, especially in unprotected directories, they
          could be maliciously modified to destroy user files or otherwise compromise the system at the user
          level. If the system is compromised at the user level, it is easier to elevate privileges to
          eventually compromise the system at the root and network level.
        Check:
          Verify that local initialization files do not execute world-writable programs.

          Check the system for world-writable files.

          The following command will discover and print world-writable files. Run it once for each local
          partition [PART]:

          $ sudo find [PART] -xdev -type f -perm -0002 -print

          For all files listed, check for their presence in the local initialization files with the following
          commands:

          Note: The example will be for a system that is configured to create user home directories in the
          "/home" directory.

          $ sudo grep <file> /home/*/.*

          If any local initialization files are found to reference world-writable files, this is a finding.
        Fix:
          Set the mode on files being executed by the local initialization files with the following command:

          $ sudo chmod 0755 <file>

- name: "RHEL 8 must disable kernel dumps unless needed."
  tags:
      - V230310
      - medium
      - RHEL-08-010670
      - SV-230310r627750_rule
      - C-32979r567676_chk
      - F-32954r567677_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Kernel core dumps may contain the full contents of system memory at the time of the crash. Kernel
          core dumps may consume a considerable amount of disk space and may result in denial of service by
          exhausting the available space on the target file system partition.

          RHEL 8 installation media presents the option to enable or disable the kdump service at the time of
          system installation.
        Check:
          Verify that kernel core dumps are disabled unless needed with the following command:

          $ sudo systemctl status kdump.service

          kdump.service - Crash recovery kernel arming
          Loaded: loaded (/usr/lib/systemd/system/kdump.service; enabled; vendor preset: enabled)
          Active: active (exited) since Mon 2020-05-04 16:08:09 EDT; 3min ago
          Main PID: 1130 (code=exited, status=0/SUCCESS)

          If the "kdump" service is active, ask the System Administrator if the use of the service is required
          and documented with the Information System Security Officer (ISSO).

          If the service is active and is not documented, this is a finding.
        Fix:
          If kernel core dumps are not required, disable the "kdump" service with the following command:

          # systemctl disable kdump.service

          If kernel core dumps are required, document the need with the ISSO.

- name: "RHEL 8 must disable acquiring, saving, and processing core dumps."
  tags:
      - V230312
      - medium
      - RHEL-08-010672
      - SV-230312r833308_rule
      - C-32981r833306_chk
      - F-32956r833307_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          A core dump includes a memory image taken at the time the operating system terminates an
          application. The memory image could contain sensitive data and is generally useful only for
          developers trying to debug problems.

          When the kernel invokes systemd-coredumpt to handle a core dump, it runs in privileged mode, and
          will connect to the socket created by the systemd-coredump.socket unit. This, in turn,  will spawn
          an unprivileged systemd-coredump@.service instance to process the core dump.
        Check:
          Verify RHEL 8 is not configured to acquire, save, or process core dumps with the following command:

          $ sudo systemctl status systemd-coredump.socket

          systemd-coredump.socket
          Loaded: masked (Reason: Unit systemd-coredump.socket is masked.)
          Active: inactive (dead)

          If the "systemd-coredump.socket" is loaded and not masked and the need for core dumps is not
          documented with the Information System Security Officer (ISSO) as an operational requirement, this
          is a finding.
        Fix:
          Configure the system to disable the systemd-coredump.socket with the following commands:

          $ sudo systemctl disable --now systemd-coredump.socket

          $ sudo systemctl mask systemd-coredump.socket

          Created symlink /etc/systemd/system/systemd-coredump.socket -> /dev/null

          Reload the daemon for this change to take effect.

          $ sudo systemctl daemon-reload

- name: "RHEL 8 must disable core dumps for all users."
  tags:
      - V230313
      - medium
      - RHEL-08-010673
      - SV-230313r627750_rule
      - C-32982r567685_chk
      - F-32957r619861_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          A core dump includes a memory image taken at the time the operating system terminates an
          application. The memory image could contain sensitive data and is generally useful only for
          developers trying to debug problems.
        Check:
          Verify the operating system disables core dumps for all users by issuing the following command:

          $ sudo grep -r -s '^[^#].*core' /etc/security/limits.conf /etc/security/limits.d/*.conf

          * hard core 0

          This can be set as a global domain (with the * wildcard) but may be set differently for multiple
          domains.

          If the "core" item is missing, commented out, or the value is anything other than "0" and the need
          for core dumps is not documented with the Information System Security Officer (ISSO) as an
          operational requirement for all domains that have the "core" item assigned, this is a finding.
        Fix:
          Configure the operating system to disable core dumps for all users.

          Add the following line to the top of the /etc/security/limits.conf or in a ".conf" file defined in
          /etc/security/limits.d/:

          * hard core 0

- name: "RHEL 8 must disable storing core dumps."
  tags:
      - V230314
      - medium
      - RHEL-08-010674
      - SV-230314r627750_rule
      - C-32983r567688_chk
      - F-32958r567689_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          A core dump includes a memory image taken at the time the operating system terminates an
          application. The memory image could contain sensitive data and is generally useful only for
          developers trying to debug problems.
        Check:
          Verify the operating system disables storing core dumps for all users by issuing the following
          command:

          $ sudo grep -i storage /etc/systemd/coredump.conf

          Storage=none

          If the "Storage" item is missing, commented out, or the value is anything other than "none" and the
          need for core dumps is not documented with the Information System Security Officer (ISSO) as an
          operational requirement for all domains that have the "core" item assigned, this is a finding.
        Fix:
          Configure the operating system to disable storing core dumps for all users.

          Add or modify the following line in /etc/systemd/coredump.conf:

          Storage=none

- name: "RHEL 8 must disable core dump backtraces."
  tags:
      - V230315
      - medium
      - RHEL-08-010675
      - SV-230315r627750_rule
      - C-32984r567691_chk
      - F-32959r567692_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          A core dump includes a memory image taken at the time the operating system terminates an
          application. The memory image could contain sensitive data and is generally useful only for
          developers trying to debug problems.
        Check:
          Verify the operating system disables core dump backtraces by issuing the following command:

          $ sudo grep -i ProcessSizeMax /etc/systemd/coredump.conf

          ProcessSizeMax=0

          If the "ProcessSizeMax" item is missing, commented out, or the value is anything other than "0" and
          the need for core dumps is not documented with the Information System Security Officer (ISSO) as an
          operational requirement for all domains that have the "core" item assigned, this is a finding.
        Fix:
          Configure the operating system to disable core dump backtraces.

          Add or modify the following line in /etc/systemd/coredump.conf:

          ProcessSizeMax=0

- name: "For RHEL 8 systems using Domain Name Servers (DNS) resolution, at least two name servers must be configured."
  tags:
      - V230316
      - medium
      - RHEL-08-010680
      - SV-230316r627750_rule
      - C-32985r567694_chk
      - F-32960r567695_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          To provide availability for name resolution services, multiple redundant name servers are mandated.
          A failure in name resolution could lead to the failure of security functions requiring name
          resolution, which may include time synchronization, centralized authentication, and remote system
          logging.
        Check:
          Determine whether the system is using local or DNS name resolution with the following command:

          $ sudo grep hosts /etc/nsswitch.conf

          hosts: files dns

          If the DNS entry is missing from the host's line in the "/etc/nsswitch.conf" file, the
          "/etc/resolv.conf" file must be empty.

          Verify the "/etc/resolv.conf" file is empty with the following command:

          $ sudo ls -al /etc/resolv.conf

          -rw-r--r-- 1 root root 0 Aug 19 08:31 resolv.conf

          If local host authentication is being used and the "/etc/resolv.conf" file is not empty, this is a
          finding.

          If the DNS entry is found on the host's line of the "/etc/nsswitch.conf" file, verify the operating
          system is configured to use two or more name servers for DNS resolution.

          Determine the name servers used by the system with the following command:

          $ sudo grep nameserver /etc/resolv.conf

          nameserver 192.168.1.2
          nameserver 192.168.1.3

          If less than two lines are returned that are not commented out, this is a finding.
        Fix:
          Configure the operating system to use two or more name servers for DNS resolution.

          By default, "NetworkManager" on RHEL 8 dynamically updates the /etc/resolv.conf file with the DNS
          settings from active "NetworkManager" connection profiles. However, this feature can be disabled to
          allow manual configurations.

          If manually configuring DNS, edit the "/etc/resolv.conf" file to uncomment or add the two or more
          "nameserver" option lines with the IP address of local authoritative name servers. If local host
          resolution is being performed, the "/etc/resolv.conf" file must be empty. An empty
          "/etc/resolv.conf" file can be created as follows:

          $ sudo echo -n > /etc/resolv.conf

- name: "Executable search paths within the initialization files of all local interactive RHEL 8 users must only contain paths that resolve to the system default or the users home directory."
  tags:
      - V230317
      - medium
      - RHEL-08-010690
      - SV-230317r792896_rule
      - C-32986r792895_chk
      - F-32961r567698_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The executable search path (typically the PATH environment variable) contains a list of directories
          for the shell to search to find executables. If this path includes the current working directory
          (other than the user's home directory), executables in these directories may be executed instead of
          system commands. This variable is formatted as a colon-separated list of directories. If there is an
          empty entry, such as a leading or trailing colon or two consecutive colons, this is interpreted as
          the current working directory. If deviations from the default system search path for the local
          interactive user are required, they must be documented with the Information System Security Officer
          (ISSO).
        Check:
          Verify that all local interactive user initialization file executable search path statements do not
          contain statements that will reference a working directory other than user home directories with the
          following commands:

          $ sudo grep -i path= /home/*/.*

          /home/[localinteractiveuser]/.bash_profile:PATH=$PATH:$HOME/.local/bin:$HOME/bin

          If any local interactive user initialization files have executable search path statements that
          include directories outside of their home directory and is not documented with the ISSO as an
          operational requirement, this is a finding.
        Fix:
          Edit the local interactive user initialization files to change any PATH variable statements that
          reference directories other than their home directory.

          If a local interactive user requires path variables to reference a directory owned by the
          application, it must be documented with the ISSO.

- name: "All RHEL 8 world-writable directories must be owned by root, sys, bin, or an application user."
  tags:
      - V230318
      - medium
      - RHEL-08-010700
      - SV-230318r743960_rule
      - C-32987r567700_chk
      - F-32962r567701_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If a world-writable directory is not owned by root, sys, bin, or an application User Identifier
          (UID), unauthorized users may be able to modify files created by others.

          The only authorized public directories are those temporary directories supplied with the system or
          those designed to be temporary file repositories. The setting is normally reserved for directories
          used by the system and by users for temporary file storage, (e.g., /tmp), and for directories
          requiring global read/write access.
        Check:
          The following command will discover and print world-writable directories that are not owned by a
          system account, given the assumption that only system accounts have a uid lower than 1000. Run it
          once for each local partition [PART]:

          $ sudo find [PART] -xdev -type d -perm -0002 -uid +999 -print

          If there is output, this is a finding.
        Fix:
          All directories in local partitions which are world-writable should be owned by root or another
          system account. If any world-writable directories are not owned by a system account, this should be
          investigated. Following this, the files should be deleted or assigned to an appropriate group.

- name: "All RHEL 8 world-writable directories must be group-owned by root, sys, bin, or an application group."
  tags:
      - V230319
      - medium
      - RHEL-08-010710
      - SV-230319r743961_rule
      - C-32988r567703_chk
      - F-32963r567704_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If a world-writable directory is not group-owned by root, sys, bin, or an application Group
          Identifier (GID), unauthorized users may be able to modify files created by others.

          The only authorized public directories are those temporary directories supplied with the system or
          those designed to be temporary file repositories. The setting is normally reserved for directories
          used by the system and by users for temporary file storage, (e.g., /tmp), and for directories
          requiring global read/write access.
        Check:
          The following command will discover and print world-writable directories that are not group-owned by
          a system account, given the assumption that only system accounts have a gid lower than 1000. Run it
          once for each local partition [PART]:

          $ sudo find [PART] -xdev -type d -perm -0002 -gid +999 -print

          If there is output, this is a finding.
        Fix:
          All directories in local partitions which are world-writable must be group-owned by root or another
          system account.  If any world-writable directories are not group-owned by a system account, this
          must be investigated.  Following this, the directories must be deleted or assigned to an appropriate
          group.

- name: "All RHEL 8 local interactive users must have a home directory assigned in the /etc/passwd file."
  tags:
      - V230320
      - medium
      - RHEL-08-010720
      - SV-230320r627750_rule
      - C-32989r567706_chk
      - F-32964r567707_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If local interactive users are not assigned a valid home directory, there is no place for the
          storage and control of files they should own.
        Check:
          Verify local interactive users on RHEL 8 have a home directory assigned with the following command:

          $ sudo pwck -r

          user 'lp': directory '/var/spool/lpd' does not exist
          user 'news': directory '/var/spool/news' does not exist
          user 'uucp': directory '/var/spool/uucp' does not exist
          user 'www-data': directory '/var/www' does not exist

          Ask the System Administrator (SA) if any users found without home directories are local interactive
          users. If the SA is unable to provide a response, check for users with a User Identifier (UID) of
          1000 or greater with the following command:

          $ sudo awk -F: '($3>=1000)&&($7 !~ /nologin/){print $1, $3, $6}' /etc/passwd

          If any interactive users do not have a home directory assigned, this is a finding.
        Fix:
          Assign home directories to all local interactive users on RHEL 8 that currently do not have a home
          directory assigned.

- name: "All RHEL 8 local interactive user home directories must have mode 0750 or less permissive."
  tags:
      - V230321
      - medium
      - RHEL-08-010730
      - SV-230321r627750_rule
      - C-32990r567709_chk
      - F-32965r567710_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Excessive permissions on local interactive user home directories may allow unauthorized access to
          user files by other users.
        Check:
          Verify the assigned home directory of all local interactive users has a mode of "0750" or less
          permissive with the following command:

          Note: This may miss interactive users that have been assigned a privileged User Identifier (UID).
          Evidence of interactive use may be obtained from a number of log files containing system logon
          information.

          $ sudo ls -ld $(awk -F: '($3>=1000)&&($7 !~ /nologin/){print $6}' /etc/passwd)

          drwxr-x--- 2 smithj admin 4096 Jun 5 12:41 smithj

          If home directories referenced in "/etc/passwd" do not have a mode of "0750" or less permissive,
          this is a finding.
        Fix:
          Change the mode of interactive user's home directories to "0750". To change the mode of a local
          interactive user's home directory, use the following command:

          Note: The example will be for the user "smithj".

          $ sudo chmod 0750 /home/smithj

- name: "All RHEL 8 local interactive user home directories must be group-owned by the home directory owner's primary group."
  tags:
      - V230322
      - medium
      - RHEL-08-010740
      - SV-230322r743963_rule
      - C-32991r743962_chk
      - F-32966r567713_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If the Group Identifier (GID) of a local interactive user's home directory is not the same as the
          primary GID of the user, this would allow unauthorized access to the user's files, and users that
          share the same group may not be able to access files that they legitimately should.
        Check:
          Verify the assigned home directory of all local interactive users is group-owned by that user's
          primary GID with the following command:

          Note: This may miss local interactive users that have been assigned a privileged UID. Evidence of
          interactive use may be obtained from a number of log files containing system logon information. The
          returned directory "/home/smithj" is used as an example.

          $ sudo ls -ld $(awk -F: '($3>=1000)&&($7 !~ /nologin/){print $6}' /etc/passwd)

          drwxr-x--- 2 smithj admin 4096 Jun 5 12:41 smithj

          Check the user's primary group with the following command:

          $ sudo grep $(grep smithj /etc/passwd | awk -F: ‘{print $4}') /etc/group

          admin:x:250:smithj,jonesj,jacksons

          If the user home directory referenced in "/etc/passwd" is not group-owned by that user's primary
          GID, this is a finding.
        Fix:
          Change the group owner of a local interactive user's home directory to the group found in
          "/etc/passwd". To change the group owner of a local interactive user's home directory, use the
          following command:

          Note: The example will be for the user "smithj", who has a home directory of "/home/smithj", and has
          a primary group of users.

          $ sudo chgrp users /home/smithj

- name: "All RHEL 8 local interactive user home directories defined in the /etc/passwd file must exist."
  tags:
      - V230323
      - medium
      - RHEL-08-010750
      - SV-230323r627750_rule
      - C-32992r567715_chk
      - F-32967r567716_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If a local interactive user has a home directory defined that does not exist, the user may be given
          access to the "/" directory as the current working directory upon logon. This could create a denial
          of service because the user would not be able to access their logon configuration files, and it may
          give them visibility to system files they normally would not be able to access.
        Check:
          Verify the assigned home directory of all local interactive users on RHEL 8 exists with the
          following command:

          $ sudo ls -ld $(awk -F: '($3>=1000)&&($7 !~ /nologin/){print $6}' /etc/passwd)

          drwxr-xr-x 2 smithj admin 4096 Jun 5 12:41 smithj

          Note: This may miss interactive users that have been assigned a privileged User ID (UID). Evidence
          of interactive use may be obtained from a number of log files containing system logon information.

          Check that all referenced home directories exist with the following command:

          $ sudo pwck -r

          user 'smithj': directory '/home/smithj' does not exist

          If any home directories referenced in "/etc/passwd" are returned as not defined, this is a finding.
        Fix:
          Create home directories to all local interactive users that currently do not have a home directory
          assigned. Use the following commands to create the user home directory assigned in "/etc/ passwd":

          Note: The example will be for the user smithj, who has a home directory of "/home/smithj", a UID of
          "smithj", and a Group Identifier (GID) of "users assigned" in "/etc/passwd".

          $ sudo mkdir /home/smithj
          $ sudo chown smithj /home/smithj
          $ sudo chgrp users /home/smithj
          $ sudo chmod 0750 /home/smithj

- name: "All RHEL 8 local initialization files must have mode 0740 or less permissive."
  tags:
      - V230325
      - medium
      - RHEL-08-010770
      - SV-230325r627750_rule
      - C-32994r567721_chk
      - F-32969r567722_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Local initialization files are used to configure the user's shell environment upon logon. Malicious
          modification of these files could compromise accounts upon logon.
        Check:
          Verify that all local initialization files have a mode of "0740" or less permissive with the
          following command:

          Note: The example will be for the "smithj" user, who has a home directory of "/home/smithj".

          $ sudo ls -al /home/smithj/.[^.]* | more

          -rwxr-xr-x 1 smithj users 896 Mar 10 2011 .profile
          -rwxr-xr-x 1 smithj users 497 Jan 6 2007 .login
          -rwxr-xr-x 1 smithj users 886 Jan 6 2007 .something

          If any local initialization files have a mode more permissive than "0740", this is a finding.
        Fix:
          Set the mode of the local initialization files to "0740" with the following command:

          Note: The example will be for the smithj user, who has a home directory of "/home/smithj".

          $ sudo chmod 0740 /home/smithj/.<INIT_FILE>

- name: "All RHEL 8 local files and directories must have a valid owner."
  tags:
      - V230326
      - medium
      - RHEL-08-010780
      - SV-230326r627750_rule
      - C-32995r567724_chk
      - F-32970r567725_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Unowned files and directories may be unintentionally inherited if a user is assigned the same User
          Identifier "UID" as the UID of the un-owned files.
        Check:
          Verify all local files and directories on RHEL 8 have a valid owner with the following command:

          Note: The value after -fstype must be replaced with the filesystem type.  XFS is used as an example.

          $ sudo find / -fstype xfs -nouser

          If any files on the system do not have an assigned owner, this is a finding.

          Note: Command may produce error messages from the /proc and /sys directories.
        Fix:
          Either remove all files and directories from the system that do not have a valid user, or assign a
          valid user to all unowned files and directories on RHEL 8 with the "chown" command:

          $ sudo chown <user> <file>

- name: "All RHEL 8 local files and directories must have a valid group owner."
  tags:
      - V230327
      - medium
      - RHEL-08-010790
      - SV-230327r627750_rule
      - C-32996r567727_chk
      - F-32971r567728_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Files without a valid group owner may be unintentionally inherited if a group is assigned the same
          Group Identifier (GID) as the GID of the files without a valid group owner.
        Check:
          Verify all local files and directories on RHEL 8 have a valid group with the following command:

          Note: The value after -fstype must be replaced with the filesystem type.  XFS is used as an example.

          $ sudo find / -fstype xfs -nogroup

          If any files on the system do not have an assigned group, this is a finding.

          Note: Command may produce error messages from the /proc and /sys directories.
        Fix:
          Either remove all files and directories from RHEL 8 that do not have a valid group, or assign a
          valid group to all files and directories on the system with the "chgrp" command:

          $ sudo chgrp <group> <file>

- name: "Unattended or automatic logon via the RHEL 8 graphical user interface must not be allowed."
  tags:
      - V230329
      - high
      - RHEL-08-010820
      - SV-230329r627750_rule
      - C-32998r567733_chk
      - F-32973r567734_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Failure to restrict system access to authenticated users negatively impacts operating system
          security.
        Check:
          Verify the operating system does not allow an unattended or automatic logon to the system via a
          graphical user interface.

          Note: This requirement assumes the use of the RHEL 8 default graphical user interface, Gnome Shell.
          If the system does not have any graphical user interface installed, this requirement is Not
          Applicable.

          Check for the value of the "AutomaticLoginEnable" in the "/etc/gdm/custom.conf" file with the
          following command:

          $ sudo grep -i automaticloginenable /etc/gdm/custom.conf

          AutomaticLoginEnable=false

          If the value of "AutomaticLoginEnable" is not set to "false", this is a finding.
        Fix:
          Configure the operating system to not allow an unattended or automatic logon to the system via a
          graphical user interface.

          Add or edit the line for the "AutomaticLoginEnable" parameter in the [daemon] section of the
          "/etc/gdm/custom.conf" file to "false":

          [daemon]
          AutomaticLoginEnable=false

- name: "RHEL 8 temporary user accounts must be provisioned with an expiration time of 72 hours or less."
  tags:
      - V230331
      - medium
      - RHEL-08-020000
      - SV-230331r627750_rule
      - C-33000r619865_chk
      - F-32975r567740_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If temporary user accounts remain active when no longer needed or for an excessive period, these
          accounts may be used to gain unauthorized access. To mitigate this risk, automated termination of
          all temporary accounts must be set upon account creation.

          Temporary accounts are established as part of normal account activation procedures when there is a
          need for short-term accounts without the demand for immediacy in account activation.

          If temporary accounts are used, RHEL 8 must be configured to automatically terminate these types of
          accounts after a DoD-defined time period of 72 hours.

          To address access requirements, many RHEL 8 operating systems may be integrated with enterprise-
          level authentication/access mechanisms that meet or exceed access control policy requirements.
        Check:
          Verify that temporary accounts have been provisioned with an expiration date of 72 hours.

          For every existing temporary account, run the following command to obtain its account expiration
          information.

          $ sudo chage -l system_account_name

          Verify each of these accounts has an expiration date set within 72 hours.

          If any temporary accounts have no expiration date set or do not expire within 72 hours, this is a
          finding.
        Fix:
          If a temporary account must be created configure the system to terminate the account after a 72 hour
          time period with the following command to set an expiration date on it. Substitute
          "system_account_name" with the account to be created.

          $ sudo chage -E `date -d "+3 days" +%Y-%m-%d` system_account_name

- name: "RHEL 8 must limit the number of concurrent sessions to ten for all accounts and/or account types."
  tags:
      - V230346
      - low
      - RHEL-08-020024
      - SV-230346r627750_rule
      - C-33015r567784_chk
      - F-32990r619863_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Operating system management includes the ability to control the number of users and user sessions
          that utilize an operating system. Limiting the number of allowed users and sessions per user is
          helpful in reducing the risks related to DoS attacks.

          This requirement addresses concurrent sessions for information system accounts and does not address
          concurrent sessions by single users via multiple system accounts. The maximum number of concurrent
          sessions should be defined based on mission needs and the operational environment for each system.
        Check:
          Verify the operating system limits the number of concurrent sessions to "10" for all accounts and/or
          account types by issuing the following command:

          $ sudo grep -r -s '^[^#].*maxlogins' /etc/security/limits.conf /etc/security/limits.d/*.conf

          * hard maxlogins 10

          This can be set as a global domain (with the * wildcard) but may be set differently for multiple
          domains.

          If the "maxlogins" item is missing, commented out, or the value is set greater than "10" and is not
          documented with the Information System Security Officer (ISSO) as an operational requirement for all
          domains that have the "maxlogins" item assigned, this is a finding.
        Fix:
          Configure the operating system to limit the number of concurrent sessions to "10" for all accounts
          and/or account types.

          Add the following line to the top of the /etc/security/limits.conf or in a ".conf" file defined in
          /etc/security/limits.d/:

          * hard maxlogins 10

- name: "RHEL 8 passwords must have a 24 hours/1 day minimum password lifetime restriction in /etc/shadow."
  tags:
      - V230364
      - medium
      - RHEL-08-020180
      - SV-230364r627750_rule
      - C-33033r567838_chk
      - F-33008r567839_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Enforcing a minimum password lifetime helps to prevent repeated password changes to defeat the
          password reuse or history enforcement requirement. If users are allowed to immediately and
          continually change their password, the password could be repeatedly changed in a short period of
          time to defeat the organization's policy regarding password reuse.
        Check:
          Check whether the minimum time period between password changes for each user account is one day or
          greater.

          $ sudo awk -F: '$4 < 1 {print $1 " " $4}' /etc/shadow

          If any results are returned that are not associated with a system account, this is a finding.
        Fix:
          Configure non-compliant accounts to enforce a 24 hours/1 day minimum password lifetime:

          $ sudo chage -m 1 [user]

- name: "RHEL 8 user account passwords must be configured so that existing passwords are restricted to a 60-day maximum lifetime."
  tags:
      - V230367
      - medium
      - RHEL-08-020210
      - SV-230367r627750_rule
      - C-33036r567847_chk
      - F-33011r567848_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Any password, no matter how complex, can eventually be cracked. Therefore, passwords need to be
          changed periodically. If RHEL 8 does not limit the lifetime of passwords and force users to change
          their passwords, there is the risk that RHEL 8 passwords could be compromised.
        Check:
          Check whether the maximum time period for existing passwords is restricted to 60 days with the
          following commands:

          $ sudo awk -F: '$5 > 60 {print $1 " " $5}' /etc/shadow

          $ sudo awk -F: '$5 <= 0 {print $1 " " $5}' /etc/shadow

          If any results are returned that are not associated with a system account, this is a finding.
        Fix:
          Configure non-compliant accounts to enforce a 60-day maximum password lifetime restriction.

          $ sudo chage -M 60 [user]

- name: "RHEL 8 duplicate User IDs (UIDs) must not exist for interactive users."
  tags:
      - V230371
      - medium
      - RHEL-08-020240
      - SV-230371r627750_rule
      - C-33040r567859_chk
      - F-33015r567860_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          To ensure accountability and prevent unauthenticated access, interactive users must be identified
          and authenticated to prevent potential misuse and compromise of the system.

          Interactive users include organizational employees or individuals the organization deems to have
          equivalent status of employees (e.g., contractors). Interactive users (and processes acting on
          behalf of users) must be uniquely identified and authenticated to all accesses, except for the
          following:

          1) Accesses explicitly identified and documented by the organization. Organizations document
          specific user actions that can be performed on the information system without identification or
          authentication; and

          2) Accesses that occur through authorized use of group authenticators without individual
          authentication. Organizations may require unique identification of individuals in group accounts
          (e.g., shared privilege accounts) or for detailed accountability of individual activity.

          Satisfies: SRG-OS-000104-GPOS-00051, SRG-OS-000121-GPOS-00062, SRG-OS-000042-GPOS-00020
        Check:
          Verify that RHEL 8 contains no duplicate User IDs (UIDs) for interactive users.

          Check that the operating system contains no duplicate UIDs for interactive users with the following
          command:

          $ sudo awk -F ":" 'list[$3]++{print $1, $3}' /etc/passwd

          If output is produced, and the accounts listed are interactive user accounts, this is a finding.
        Fix:
          Edit the file "/etc/passwd" and provide each interactive user account that has a duplicate User ID
          (UID) with a unique UID.

- name: "RHEL 8 account identifiers (individuals, groups, roles, and devices) must be disabled after 35 days of inactivity."
  tags:
      - V230373
      - medium
      - RHEL-08-020260
      - SV-230373r627750_rule
      - C-33042r567865_chk
      - F-33017r567866_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Inactive identifiers pose a risk to systems and applications because attackers may exploit an
          inactive identifier and potentially obtain undetected access to the system. Owners of inactive
          accounts will not notice if unauthorized access to their user account has been obtained.

          RHEL 8 needs to track periods of inactivity and disable application identifiers after 35 days of
          inactivity.
        Check:
          Verify the account identifiers (individuals, groups, roles, and devices) are disabled after 35 days
          of inactivity with the following command:

          Check the account inactivity value by performing the following command:

          $ sudo grep -i inactive /etc/default/useradd

          INACTIVE=35

          If "INACTIVE" is set to "-1", a value greater than "35", or is commented out, this is a finding.
        Fix:
          Configure RHEL 8 to disable account identifiers after 35 days of inactivity after the password
          expiration.

          Run the following command to change the configuration for useradd:

          $ sudo useradd -D -f 35

          DoD recommendation is 35 days, but a lower value is acceptable. The value "-1" will disable this
          feature, and "0" will disable the account immediately after the password expires.

- name: "RHEL 8 emergency accounts must be automatically removed or disabled after the crisis is resolved or within 72 hours."
  tags:
      - V230374
      - medium
      - RHEL-08-020270
      - SV-230374r627750_rule
      - C-33043r567868_chk
      - F-33018r567869_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Emergency accounts are privileged accounts established in response to crisis situations where the
          need for rapid account activation is required. Therefore, emergency account activation may bypass
          normal account authorization processes. If these accounts are automatically disabled, system
          maintenance during emergencies may not be possible, thus adversely affecting system availability.

          Emergency accounts are different from infrequently used accounts (i.e., local logon accounts used by
          the organization's system administrators when network or normal logon/access is not available).
          Infrequently used accounts are not subject to automatic termination dates. Emergency accounts are
          accounts created in response to crisis situations, usually for use by maintenance personnel. The
          automatic expiration or disabling time period may be extended as needed until the crisis is
          resolved; however, it must not be extended indefinitely. A permanent account should be established
          for privileged users who need long-term maintenance accounts.

          To address access requirements, many RHEL 8 systems can be integrated with enterprise-level
          authentication/access mechanisms that meet or exceed access control policy requirements.
        Check:
          Verify emergency accounts have been provisioned with an expiration date of 72 hours.

          For every existing emergency account, run the following command to obtain its account expiration
          information.

          $ sudo chage -l system_account_name

          Verify each of these accounts has an expiration date set within 72 hours.
          If any emergency accounts have no expiration date set or do not expire within 72 hours, this is a
          finding.
        Fix:
          If an emergency account must be created, configure the system to terminate the account after 72
          hours with the following command to set an expiration date for the account. Substitute
          "system_account_name" with the account to be created.

          $ sudo chage -E `date -d "+3 days" +%Y-%m-%d` system_account_name

          The automatic expiration or disabling time period may be extended as needed until the crisis is
          resolved.

- name: "RHEL 8 must not have unnecessary accounts."
  tags:
      - V230379
      - medium
      - RHEL-08-020320
      - SV-230379r627750_rule
      - C-33048r567883_chk
      - F-33023r567884_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Accounts providing no operational purpose provide additional opportunities for system compromise.
          Unnecessary accounts include user accounts for individuals not requiring access to the system and
          application accounts for applications not installed on the system.
        Check:
          Verify all accounts on the system are assigned to an active system, application, or user account.

          Obtain the list of authorized system accounts from the Information System Security Officer (ISSO).

          Check the system accounts on the system with the following command:

          $ sudo more /etc/passwd

          root:x:0:0:root:/root:/bin/bash
          bin:x:1:1:bin:/bin:/sbin/nologin
          daemon:x:2:2:daemon:/sbin:/sbin/nologin
          sync:x:5:0:sync:/sbin:/bin/sync
          shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
          halt:x:7:0:halt:/sbin:/sbin/halt
          games:x:12:100:games:/usr/games:/sbin/nologin
          gopher:x:13:30:gopher:/var/gopher:/sbin/nologin

          Accounts such as "games" and "gopher" are not authorized accounts as they do not support authorized
          system functions.

          If the accounts on the system do not match the provided documentation, or accounts that do not
          support an authorized system function are present, this is a finding.
        Fix:
          Configure the system so all accounts on the system are assigned to an active system, application, or
          user account.

          Remove accounts that do not support approved system activities or that allow for a normal user to
          perform administrative-level actions.

          Document all authorized accounts on the system.

- name: "RHEL 8 must set the umask value to 077 for all local interactive user accounts."
  tags:
      - V230384
      - medium
      - RHEL-08-020352
      - SV-230384r858732_rule
      - C-33053r858731_chk
      - F-33028r567899_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The umask controls the default access mode assigned to newly created files. A umask of 077 limits
          new files to mode 600 or less permissive. Although umask can be represented as a four-digit number,
          the first digit representing special access modes is typically ignored or required to be "0". This
          requirement applies to the globally configured system defaults and the local interactive user
          defaults for each account on the system.
        Check:
          Verify that the default umask for all local interactive users is "077".

          Identify the locations of all local interactive user home directories by looking at the
          "/etc/passwd" file.

          Check all local interactive user initialization files for interactive users with the following
          command:

          Note: The example is for a system that is configured to create users home directories in the "/home"
          directory.

          $ sudo grep -ir ^umask /home | grep -v '.bash_history'

          If any local interactive user initialization files are found to have a umask statement that has a
          value less restrictive than "077", this is a finding.
        Fix:
          Remove the umask statement from all local interactive user's initialization files.

          If the account is for an application, the requirement for a umask less restrictive than "077" can be
          documented with the Information System Security Officer, but the user agreement for access to the
          account must specify that the local interactive user must log on to their account first and then
          switch the user to the application account with the correct option to gain the account's environment
          variables.

- name: "RHEL 8 must define default permissions for logon and non-logon shells."
  tags:
      - V230385
      - medium
      - RHEL-08-020353
      - SV-230385r792902_rule
      - C-33054r792900_chk
      - F-33029r792901_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The umask controls the default access mode assigned to newly created files. A umask of 077 limits
          new files to mode 600 or less permissive. Although umask can be represented as a four-digit number,
          the first digit representing special access modes is typically ignored or required to be "0". This
          requirement applies to the globally configured system defaults and the local interactive user
          defaults for each account on the system.
        Check:
          Verify that the umask default for installed shells is "077".

          Check for the value of the "UMASK" parameter in the "/etc/bashrc", "/etc/csh.cshrc" and
          "/etc/profile" files with the following command:

          Note: If the value of the "UMASK" parameter is set to "000" in the "/etc/bashrc" the
          "/etc/csh.cshrc" or the "/etc/profile" files, the Severity is raised to a CAT I.

          # grep -i umask /etc/bashrc /etc/csh.cshrc /etc/profile

          /etc/bashrc:          umask 077
          /etc/bashrc:          umask 077
          /etc/csh.cshrc:      umask 077
          /etc/csh.cshrc:      umask 077
          /etc/profile:      umask 077
          /etc/profile:      umask 077

          If the value for the "UMASK" parameter is not "077", or the "UMASK" parameter is missing or is
          commented out, this is a finding.
        Fix:
          Configure the operating system to define default permissions for all authenticated users in such a
          way that the user can only read and modify their own files.

          Add or edit the lines for the "UMASK" parameter in the "/etc/bashrc", "/etc/csh.cshrc" and
          "/etc/profile"files to "077":

          UMASK 077

- name: "RHEL 8 must enable Linux audit logging for the USBGuard daemon."
  tags:
      - V230470
      - low
      - RHEL-08-030603
      - SV-230470r744006_rule
      - C-33139r568156_chk
      - F-33114r744005_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without the capability to generate audit records, it would be difficult to establish, correlate, and
          investigate the events relating to an incident or identify those responsible for one.

          If auditing is enabled late in the startup process, the actions of some startup processes may not be
          audited. Some audit systems also maintain state information only available if auditing is enabled
          before a given process is created.

          Audit records can be generated from various components within the information system (e.g., module
          or policy filter).

          The list of audited events is the set of events for which audits are to be generated. This set of
          events is typically a subset of the list of all events for which the system is capable of generating
          audit records.

          DoD has defined the list of events for which RHEL 8 will provide an audit record generation
          capability as the following:

          1) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects,
          security levels, or categories of information (e.g., classification levels);

          2) Access actions, such as successful and unsuccessful logon attempts, privileged activities or
          other system-level access, starting and ending time for user access to the system, concurrent logons
          from different workstations, successful and unsuccessful accesses to objects, all program
          initiations, and all direct access to the information system;

          3) All account creations, modifications, disabling, and terminations; and

          4) All kernel module load, unload, and restart actions.

          Satisfies: SRG-OS-000062-GPOS-00031, SRG-OS-000471-GPOS-00215
        Check:
          Verify RHEL 8 enables Linux audit logging of the USBGuard daemon with the following commands:

          Note: If the USBGuard daemon is not installed and enabled, this requirement is not applicable.

          $ sudo grep -i auditbackend /etc/usbguard/usbguard-daemon.conf

          AuditBackend=LinuxAudit

          If the "AuditBackend" entry does not equal "LinuxAudit", is missing, or the line is commented out,
          this is a finding.
        Fix:
          Configure RHEL 8 to enable Linux audit logging of the USBGuard daemon by adding or modifying the
          following line in "/etc/usbguard/usbguard-daemon.conf":

          AuditBackend=LinuxAudit

- name: "RHEL 8 must securely compare internal information system clocks at least every 24 hours with a server synchronized to an authoritative time source, such as the United States Naval Observatory (USNO) time servers, or a time server designated for the appropriate DoD network (NIPRNet/SIPRNet), and/or the Global Positioning System (GPS)."
  tags:
      - V230484
      - medium
      - RHEL-08-030740
      - SV-230484r854046_rule
      - C-33153r568198_chk
      - F-33128r568199_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Inaccurate time stamps make it more difficult to correlate events and can lead to an inaccurate
          analysis. Determining the correct time a particular event occurred on a system is critical when
          conducting forensic analysis and investigating system events. Sources outside the configured
          acceptable allowance (drift) may be inaccurate.

          Synchronizing internal information system clocks provides uniformity of time stamps for information
          systems with multiple system clocks and systems connected over a network.

          Organizations should consider endpoints that may not have regular access to the authoritative time
          server (e.g., mobile, teleworking, and tactical endpoints).

          If time stamps are not consistently applied and there is no common time reference, it is difficult
          to perform forensic analysis.

          Time stamps generated by the operating system include date and time. Time is commonly expressed in
          Coordinated Universal Time (UTC), a modern continuation of Greenwich Mean Time (GMT), or local time
          with an offset from UTC.

          RHEL 8 utilizes the "timedatectl" command to view the status of the "systemd-timesyncd.service". The
          "timedatectl" status will display the local time, UTC, and the offset from UTC.

          Note that USNO offers authenticated NTP service to DoD and U.S. Government agencies operating on the
          NIPR and SIPR networks. Visit https://www.usno.navy.mil/USNO/time/ntp/dod-customers for more
          information.

          Satisfies: SRG-OS-000355-GPOS-00143, SRG-OS-000356-GPOS-00144, SRG-OS-000359-GPOS-00146
        Check:
          Verify RHEL 8 is securely comparing internal information system clocks at least every 24 hours with
          an NTP server with the following commands:

          $ sudo grep maxpoll /etc/chrony.conf

          server 0.us.pool.ntp.mil iburst maxpoll 16

          If the "maxpoll" option is set to a number greater than 16 or the line is commented out, this is a
          finding.

          Verify the "chrony.conf" file is configured to an authoritative DoD time source by running the
          following command:

          $ sudo grep -i server /etc/chrony.conf
          server 0.us.pool.ntp.mil

          If the parameter "server" is not set or is not set to an authoritative DoD time source, this is a
          finding.
        Fix:
          Configure the operating system to securely compare internal information system clocks at least every
          24 hours with an NTP server by adding/modifying the following line in the /etc/chrony.conf file.

          server [ntp.server.name] iburst maxpoll 16

- name: "RHEL 8 must disable the chrony daemon from acting as a server."
  tags:
      - V230485
      - low
      - RHEL-08-030741
      - SV-230485r627750_rule
      - C-33154r568201_chk
      - F-33129r568202_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Inaccurate time stamps make it more difficult to correlate events and can lead to an inaccurate
          analysis. Determining the correct time a particular event occurred on a system is critical when
          conducting forensic analysis and investigating system events. Sources outside the configured
          acceptable allowance (drift) may be inaccurate.

          Minimizing the exposure of the server functionality of the chrony daemon diminishes the attack
          surface.

          RHEL 8 utilizes the "timedatectl" command to view the status of the "systemd-timesyncd.service". The
          "timedatectl" status will display the local time, UTC, and the offset from UTC.

          Note that USNO offers authenticated NTP service to DoD and U.S. Government agencies operating on the
          NIPR and SIPR networks. Visit https://www.usno.navy.mil/USNO/time/ntp/dod-customers for more
          information.
        Check:
          Verify RHEL 8 disables the chrony daemon from acting as a server with the following command:

          $ sudo grep -w 'port' /etc/chrony.conf

          port 0

          If the "port" option is not set to "0", is commented out or missing, this is a finding.
        Fix:
          Configure the operating system to disable the chrony daemon from acting as a server by
          adding/modifying the following line in the /etc/chrony.conf file.

          port 0

- name: "RHEL 8 must disable network management of the chrony daemon."
  tags:
      - V230486
      - low
      - RHEL-08-030742
      - SV-230486r627750_rule
      - C-33155r568204_chk
      - F-33130r568205_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Inaccurate time stamps make it more difficult to correlate events and can lead to an inaccurate
          analysis. Determining the correct time a particular event occurred on a system is critical when
          conducting forensic analysis and investigating system events. Sources outside the configured
          acceptable allowance (drift) may be inaccurate.

          Not exposing the management interface of the chrony daemon on the network diminishes the attack
          space.

          RHEL 8 utilizes the "timedatectl" command to view the status of the "systemd-timesyncd.service". The
          "timedatectl" status will display the local time, UTC, and the offset from UTC.

          Note that USNO offers authenticated NTP service to DoD and U.S. Government agencies operating on the
          NIPR and SIPR networks. Visit https://www.usno.navy.mil/USNO/time/ntp/dod-customers for more
          information.
        Check:
          Verify RHEL 8 disables network management of the chrony daemon with the following command:

          $ sudo grep -w 'cmdport' /etc/chrony.conf

          cmdport 0

          If the "cmdport" option is not set to "0", is commented out or missing, this is a finding.
        Fix:
          Configure the operating system disable network management of the chrony daemon by adding/modifying
          the following line in the /etc/chrony.conf file.

          cmdport 0

- name: "RHEL 8 must not have the telnet-server package installed."
  tags:
      - V230487
      - high
      - RHEL-08-040000
      - SV-230487r627750_rule
      - C-33156r568207_chk
      - F-33131r568208_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Operating systems are capable of providing a wide variety of functions and services. Some of the
          functions and services, provided by default, may not be necessary to support essential
          organizational operations (e.g., key missions, functions).

          Examples of non-essential capabilities include, but are not limited to, games, software packages,
          tools, and demonstration software not related to requirements or providing a wide array of
          functionality not required for every mission, but which cannot be disabled.

          Verify the operating system is configured to disable non-essential capabilities. The most secure way
          of ensuring a non-essential capability is disabled is to not have the capability installed.

          The telnet service provides an unencrypted remote access service that does not provide for the
          confidentiality and integrity of user passwords or the remote session.

          If a privileged user were to log on using this service, the privileged user password could be
          compromised.
        Check:
          Check to see if the telnet-server package is installed with the following command:

          $ sudo yum list installed telnet-server

          If the telnet-server package is installed, this is a finding.
        Fix:
          Configure the operating system to disable non-essential capabilities by removing the telnet-server
          package from the system with the following command:

          $ sudo yum remove telnet-server

- name: "RHEL 8 must not have any automated bug reporting tools installed."
  tags:
      - V230488
      - medium
      - RHEL-08-040001
      - SV-230488r627750_rule
      - C-33157r568210_chk
      - F-33132r568211_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Operating systems are capable of providing a wide variety of functions and services. Some of the
          functions and services, provided by default, may not be necessary to support essential
          organizational operations (e.g., key missions, functions).

          Examples of non-essential capabilities include, but are not limited to, games, software packages,
          tools, and demonstration software not related to requirements or providing a wide array of
          functionality not required for every mission, but which cannot be disabled.

          Verify the operating system is configured to disable non-essential capabilities. The most secure way
          of ensuring a non-essential capability is disabled is to not have the capability installed.
        Check:
          Check to see if any automated bug reporting packages are installed with the following command:

          $ sudo yum list installed abrt*

          If any automated bug reporting package is installed, this is a finding.
        Fix:
          Configure the operating system to disable non-essential capabilities by removing automated bug
          reporting packages from the system with the following command:

          $ sudo yum remove abrt*

- name: "RHEL 8 must not have the sendmail package installed."
  tags:
      - V230489
      - medium
      - RHEL-08-040002
      - SV-230489r627750_rule
      - C-33158r568213_chk
      - F-33133r568214_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Operating systems are capable of providing a wide variety of functions and services. Some of the
          functions and services, provided by default, may not be necessary to support essential
          organizational operations (e.g., key missions, functions).

          Examples of non-essential capabilities include, but are not limited to, games, software packages,
          tools, and demonstration software not related to requirements or providing a wide array of
          functionality not required for every mission, but which cannot be disabled.

          Verify the operating system is configured to disable non-essential capabilities. The most secure way
          of ensuring a non-essential capability is disabled is to not have the capability installed.
        Check:
          Check to see if the sendmail package is installed with the following command:

          $ sudo yum list installed sendmail

          If the sendmail package is installed, this is a finding.
        Fix:
          Configure the operating system to disable non-essential capabilities by removing the sendmail
          package from the system with the following command:

          $ sudo yum remove sendmail

- name: "RHEL 8 must enable mitigations against processor-based vulnerabilities."
  tags:
      - V230491
      - low
      - RHEL-08-040004
      - SV-230491r818842_rule
      - C-33160r818841_chk
      - F-33135r568220_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Operating systems are capable of providing a wide variety of functions and services. Some of the
          functions and services, provided by default, may not be necessary to support essential
          organizational operations (e.g., key missions, functions).

          Examples of non-essential capabilities include, but are not limited to, games, software packages,
          tools, and demonstration software not related to requirements or providing a wide array of
          functionality not required for every mission, but which cannot be disabled.

          Verify the operating system is configured to disable non-essential capabilities. The most secure way
          of ensuring a non-essential capability is disabled is to not have the capability installed.

          Kernel page-table isolation is a kernel feature that mitigates the Meltdown security vulnerability
          and hardens the kernel against attempts to bypass kernel address space layout randomization (KASLR).
        Check:
          Verify RHEL 8 enables kernel page-table isolation with the following commands:

          $ sudo grub2-editenv list | grep pti

          kernelopts=root=/dev/mapper/rhel-root ro crashkernel=auto resume=/dev/mapper/rhel-swap
          rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap rhgb quiet fips=1 audit=1 audit_backlog_limit=8192 pti=on
          boot=UUID=8d171156-cd61-421c-ba41-1c021ac29e82

          If the "pti" entry does not equal "on", is missing, or the line is commented out, this is a finding.

          Check that kernel page-table isolation is enabled by default to persist in kernel updates:

          $ sudo grep pti /etc/default/grub

          GRUB_CMDLINE_LINUX="pti=on"

          If "pti" is not set to "on", is missing or commented out, this is a finding.
        Fix:
          Configure RHEL 8 to enable kernel page-table isolation with the following command:

          $ sudo grubby --update-kernel=ALL --args="pti=on"

          Add or modify the following line in "/etc/default/grub" to ensure the configuration survives kernel
          updates:

          GRUB_CMDLINE_LINUX="pti=on"

- name: "RHEL 8 must not have the rsh-server package installed."
  tags:
      - V230492
      - high
      - RHEL-08-040010
      - SV-230492r627750_rule
      - C-33161r568222_chk
      - F-33136r568223_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Operating systems are capable of providing a wide variety of functions and services. Some of the
          functions and services, provided by default, may not be necessary to support essential
          organizational operations (e.g., key missions, functions).

          The rsh-server service provides an unencrypted remote access service that does not provide for the
          confidentiality and integrity of user passwords or the remote session and has very weak
          authentication.

          If a privileged user were to log on using this service, the privileged user password could be
          compromised.

          Satisfies: SRG-OS-000095-GPOS-00049, SRG-OS-000074-GPOS-00042
        Check:
          Check to see if the rsh-server package is installed with the following command:

          $ sudo yum list installed rsh-server

          If the rsh-server package is installed, this is a finding.
        Fix:
          Configure the operating system to disable non-essential capabilities by removing the rsh-server
          package from the system with the following command:

          $ sudo yum remove rsh-server

- name: "RHEL 8 must cover or disable the built-in or attached camera when not in use."
  tags:
      - V230493
      - medium
      - RHEL-08-040020
      - SV-230493r809316_rule
      - C-33162r809314_chk
      - F-33137r809315_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Failing to disconnect from collaborative computing devices (i.e., cameras) can result in subsequent
          compromises of organizational information. Providing easy methods to physically disconnect from such
          devices after a collaborative computing session helps to ensure participants actually carry out the
          disconnect activity without having to go through complex and tedious procedures.

          Satisfies: SRG-OS-000095-GPOS-00049, SRG-OS-000370-GPOS-00155
        Check:
          If the device or operating system does not have a camera installed, this requirement is not
          applicable.

          This requirement is not applicable to mobile devices (smartphones and tablets), where the use of the
          camera is a local AO decision.

          This requirement is not applicable to dedicated VTC suites located in approved VTC locations that
          are centrally managed.

          For an external camera, if there is not a method for the operator to manually disconnect the camera
          at the end of collaborative computing sessions, this is a finding.

          For a built-in camera, the camera must be protected by a camera cover (e.g., laptop camera cover
          slide) when not in use. If the built-in camera is not protected with a camera cover, or is not
          physically disabled, this is a finding.

          If the camera is not disconnected, covered, or physically disabled, determine if it is being
          disabled via software with the following commands:

          Verify the operating system disables the ability to load the uvcvideo kernel module.

          $ sudo grep -r uvcvideo /etc/modprobe.d/* | grep "/bin/true"

          install uvcvideo /bin/true

          If the command does not return any output, or the line is commented out, and the collaborative
          computing device has not been authorized for use, this is a finding.

          Verify the camera is disabled via blacklist with the following command:

          $ sudo grep -r uvcvideo /etc/modprobe.d/* | grep "blacklist"

          blacklist uvcvideo

          If the command does not return any output or the output is not "blacklist uvcvideo", and the
          collaborative computing device has not been authorized for use, this is a finding.
        Fix:
          Configure the operating system to disable the built-in or attached camera when not in use.

          Build or modify the "/etc/modprobe.d/blacklist.conf" file by using the following example:

          install uvcvideo /bin/true
          blacklist uvcvideo

          Reboot the system for the settings to take effect.

- name: "RHEL 8 must disable the asynchronous transfer mode (ATM) protocol."
  tags:
      - V230494
      - low
      - RHEL-08-040021
      - SV-230494r792911_rule
      - C-33163r792909_chk
      - F-33138r792910_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Failing to disconnect unused protocols can result in a system compromise.

          The Asynchronous Transfer Mode (ATM) is a protocol operating on network, data link, and physical
          layers, based on virtual circuits and virtual paths. Disabling ATM protects the system against
          exploitation of any laws in its implementation.
        Check:
          Verify the operating system disables the ability to load the ATM protocol kernel module.

          $ sudo grep -r atm /etc/modprobe.d/* | grep "/bin/true"

          install atm /bin/true

          If the command does not return any output, or the line is commented out, and use of the ATM protocol
          is not documented with the Information System Security Officer (ISSO) as an operational requirement,
          this is a finding.

          Verify the operating system disables the ability to use the ATM protocol.

          Check to see if the ATM protocol is disabled with the following command:

          $ sudo grep -r atm /etc/modprobe.d/* | grep "blacklist"

          blacklist atm

          If the command does not return any output or the output is not "blacklist atm", and use of the ATM
          protocol is not documented with the Information System Security Officer (ISSO) as an operational
          requirement, this is a finding.
        Fix:
          Configure the operating system to disable the ability to use the ATM protocol kernel module.

          Add or update the following lines in the file "/etc/modprobe.d/blacklist.conf":

          install atm /bin/true
          blacklist atm

          Reboot the system for the settings to take effect.

- name: "RHEL 8 must disable the controller area network (CAN) protocol."
  tags:
      - V230495
      - low
      - RHEL-08-040022
      - SV-230495r792914_rule
      - C-33164r792912_chk
      - F-33139r792913_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Failing to disconnect unused protocols can result in a system compromise.

          The Controller Area Network (CAN) is a serial communications protocol, which was initially developed
          for automotive and is now also used in marine, industrial, and medical applications. Disabling CAN
          protects the system against exploitation of any flaws in its implementation.
        Check:
          Verify the operating system disables the ability to load the CAN protocol kernel module.

          $ sudo grep -r can /etc/modprobe.d/* | grep "/bin/true"

          install can /bin/true

          If the command does not return any output, or the line is commented out, and use of the CAN protocol
          is not documented with the Information System Security Officer (ISSO) as an operational requirement,
          this is a finding.

          Verify the operating system disables the ability to use the CAN protocol.

          Check to see if the CAN protocol is disabled with the following command:

          $ sudo grep -r can /etc/modprobe.d/* | grep "blacklist"

          blacklist can

          If the command does not return any output or the output is not "blacklist can", and use of the CAN
          protocol is not documented with the Information System Security Officer (ISSO) as an operational
          requirement, this is a finding.
        Fix:
          Configure the operating system to disable the ability to use the CAN protocol kernel module.

          Add or update the following lines in the file "/etc/modprobe.d/blacklist.conf":

          install can /bin/true
          blacklist can

          Reboot the system for the settings to take effect.

- name: "RHEL 8 must disable the stream control transmission protocol (SCTP)."
  tags:
      - V230496
      - low
      - RHEL-08-040023
      - SV-230496r792917_rule
      - C-33165r792915_chk
      - F-33140r792916_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Failing to disconnect unused protocols can result in a system compromise.

          The Stream Control Transmission Protocol (SCTP) is a transport layer protocol, designed to support
          the idea of message-oriented communication, with several streams of messages within one connection.
          Disabling SCTP protects the system against exploitation of any flaws in its implementation.
        Check:
          Verify the operating system disables the ability to load the SCTP kernel module.

          $ sudo grep -r sctp /etc/modprobe.d/* | grep "/bin/true"

          install sctp /bin/true

          If the command does not return any output, or the line is commented out, and use of the SCTP is not
          documented with the Information System Security Officer (ISSO) as an operational requirement, this
          is a finding.

          Verify the operating system disables the ability to use the SCTP.

          Check to see if the SCTP is disabled with the following command:

          $ sudo grep -r sctp /etc/modprobe.d/* | grep "blacklist"

          blacklist sctp

          If the command does not return any output or the output is not "blacklist sctp", and use of the SCTP
          is not documented with the Information System Security Officer (ISSO) as an operational requirement,
          this is a finding.
        Fix:
          Configure the operating system to disable the ability to use the SCTP kernel module.

          Add or update the following lines in the file "/etc/modprobe.d/blacklist.conf":

          install sctp /bin/true
          blacklist sctp

          Reboot the system for the settings to take effect.

- name: "RHEL 8 must disable the transparent inter-process communication (TIPC) protocol."
  tags:
      - V230497
      - low
      - RHEL-08-040024
      - SV-230497r792920_rule
      - C-33166r792918_chk
      - F-33141r792919_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Failing to disconnect unused protocols can result in a system compromise.

          The Transparent Inter-Process Communication (TIPC) protocol is designed to provide communications
          between nodes in a cluster. Disabling TIPC protects the system against exploitation of any flaws in
          its implementation.
        Check:
          Verify the operating system disables the ability to load the TIPC protocol kernel module.

          $ sudo grep -r tipc /etc/modprobe.d/* | grep "/bin/true"

          install tipc /bin/true

          If the command does not return any output, or the line is commented out, and use of the TIPC
          protocol is not documented with the Information System Security Officer (ISSO) as an operational
          requirement, this is a finding.

          Verify the operating system disables the ability to use the TIPC protocol.

          Check to see if the TIPC protocol is disabled with the following command:

          $ sudo grep -r tipc /etc/modprobe.d/* | grep "blacklist"

          blacklist tipc

          If the command does not return any output or the output is not "blacklist tipc", and use of the TIPC
          protocol is not documented with the Information System Security Officer (ISSO) as an operational
          requirement, this is a finding.
        Fix:
          Configure the operating system to disable the ability to use the TIPC protocol kernel module.

          Add or update the following lines in the file "/etc/modprobe.d/blacklist.conf":

          install tipc /bin/true
          blacklist tipc

          Reboot the system for the settings to take effect.

- name: "RHEL 8 must disable mounting of cramfs."
  tags:
      - V230498
      - low
      - RHEL-08-040025
      - SV-230498r792922_rule
      - C-33167r792921_chk
      - F-33142r568241_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          Removing support for unneeded filesystem types reduces the local attack surface of the server.

          Compressed ROM/RAM file system (or cramfs) is a read-only file system designed for simplicity and
          space-efficiency.  It is mainly used in embedded and small-footprint systems.
        Check:
          Verify the operating system disables the ability to load the cramfs kernel module.

          $ sudo grep -r cramfs /etc/modprobe.d/* | grep "/bin/true"

          install cramfs /bin/true

          If the command does not return any output, or the line is commented out, and use of the cramfs
          protocol is not documented with the Information System Security Officer (ISSO) as an operational
          requirement, this is a finding.

          Verify the operating system disables the ability to use the cramfs kernel module.

          Check to see if the cramfs kernel module is disabled with the following command:

          $ sudo grep -r cramfs /etc/modprobe.d/* | grep "blacklist"

          blacklist cramfs

          If the command does not return any output or the output is not "blacklist cramfs", and use of the
          cramfs kernel module is not documented with the Information System Security Officer (ISSO) as an
          operational requirement, this is a finding.
        Fix:
          Configure the operating system to disable the ability to use the cramfs kernel module.

          Add or update the following lines in the file "/etc/modprobe.d/blacklist.conf":

          install cramfs /bin/true
          blacklist cramfs

          Reboot the system for the settings to take effect.

- name: "RHEL 8 must disable IEEE 1394 (FireWire) Support."
  tags:
      - V230499
      - low
      - RHEL-08-040026
      - SV-230499r792924_rule
      - C-33168r792923_chk
      - F-33143r568244_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          It is detrimental for operating systems to provide, or install by default, functionality exceeding
          requirements or mission objectives. These unnecessary capabilities or services are often overlooked
          and therefore may remain unsecured. They increase the risk to the platform by providing additional
          attack vectors.

          The IEEE 1394 (FireWire) is a serial bus standard for high-speed real-time communication. Disabling
          FireWire protects the system against exploitation of any flaws in its implementation.
        Check:
          Verify the operating system disables the ability to load the firewire-core kernel module.

          $ sudo grep -r firewire-core /etc/modprobe.d/* | grep "/bin/true"

          install firewire-core /bin/true

          If the command does not return any output, or the line is commented out, and use of the firewire-
          core protocol is not documented with the Information System Security Officer (ISSO) as an
          operational requirement, this is a finding.

          Verify the operating system disables the ability to use the firewire-core kernel module.

          Check to see if the firewire-core kernel module is disabled with the following command:

          $ sudo grep -r firewire-core /etc/modprobe.d/* | grep "blacklist"

          blacklist firewire-core

          If the command does not return any output or the output is not "blacklist firewire-core", and use of
          the firewire-core kernel module is not documented with the Information System Security Officer
          (ISSO) as an operational requirement, this is a finding.
        Fix:
          Configure the operating system to disable the ability to use the firewire-core kernel module.

          Add or update the following lines in the file "/etc/modprobe.d/blacklist.conf":

          install firewire-core /bin/true
          blacklist firewire-core

          Reboot the system for the settings to take effect.

- name: "The RHEL 8 file system automounter must be disabled unless required."
  tags:
      - V230502
      - medium
      - RHEL-08-040070
      - SV-230502r627750_rule
      - C-33171r568252_chk
      - F-33146r568253_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Automatically mounting file systems permits easy introduction of unknown devices, thereby
          facilitating malicious activity.
        Check:
          Verify the operating system disables the ability to automount devices.

          Check to see if automounter service is active with the following command:

          Note: If the autofs service is not installed, this requirement is not applicable.

          $ sudo systemctl status autofs

          autofs.service - Automounts filesystems on demand
          Loaded: loaded (/usr/lib/systemd/system/autofs.service; disabled)
          Active: inactive (dead)

          If the "autofs" status is set to "active" and is not documented with the Information System Security
          Officer (ISSO) as an operational requirement, this is a finding.
        Fix:
          Configure the operating system to disable the ability to automount devices.

          Turn off the automount service with the following commands:

          $ sudo systemctl stop autofs
          $ sudo systemctl disable autofs

          If "autofs" is required for Network File System (NFS), it must be documented with the ISSO.

- name: "RHEL 8 must be configured to disable USB mass storage."
  tags:
      - V230503
      - medium
      - RHEL-08-040080
      - SV-230503r809319_rule
      - C-33172r809317_chk
      - F-33147r809318_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          USB mass storage permits easy introduction of unknown devices, thereby facilitating malicious
          activity.

          Satisfies: SRG-OS-000114-GPOS-00059, SRG-OS-000378-GPOS-00163
        Check:
          Verify the operating system disables the ability to load the USB Storage kernel module.

          $ sudo grep -r usb-storage /etc/modprobe.d/* | grep -i "/bin/true"

          install usb-storage /bin/true

          If the command does not return any output, or the line is commented out, and use of USB Storage is
          not documented with the Information System Security Officer (ISSO) as an operational requirement,
          this is a finding.

          Verify the operating system disables the ability to use USB mass storage devices.

          Check to see if USB mass storage is disabled with the following command:

          $ sudo grep usb-storage /etc/modprobe.d/* | grep -i "blacklist"

          blacklist usb-storage

          If the command does not return any output or the output is not "blacklist usb-storage" and use of
          USB storage devices is not documented with the Information System Security Officer (ISSO) as an
          operational requirement, this is a finding.
        Fix:
          Configure the operating system to disable the ability to use the USB Storage kernel module and the
          ability to use USB mass storage devices.

          Add or update the following lines in the file "/etc/modprobe.d/blacklist.conf":

          install usb-storage /bin/true
          blacklist usb-storage

          Reboot the system for the settings to take effect.

- name: "RHEL 8 wireless network adapters must be disabled."
  tags:
      - V230506
      - medium
      - RHEL-08-040110
      - SV-230506r627750_rule
      - C-33175r568264_chk
      - F-33150r568265_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without protection of communications with wireless peripherals, confidentiality and integrity may be
          compromised because unprotected communications can be intercepted and either read, altered, or used
          to compromise the RHEL 8 operating system.

          This requirement applies to wireless peripheral technologies (e.g., wireless mice, keyboards,
          displays, etc.) used with RHEL 8 systems. Wireless peripherals (e.g., Wi-Fi/Bluetooth/IR Keyboards,
          Mice, and Pointing Devices and Near Field Communications [NFC]) present a unique challenge by
          creating an open, unsecured port on a computer. Wireless peripherals must meet DoD requirements for
          wireless data transmission and be approved for use by the Authorizing Official (AO). Even though
          some wireless peripherals, such as mice and pointing devices, do not ordinarily carry information
          that need to be protected, modification of communications with these wireless peripherals may be
          used to compromise the RHEL 8 operating system. Communication paths outside the physical protection
          of a controlled boundary are exposed to the possibility of interception and modification.

          Protecting the confidentiality and integrity of communications with wireless peripherals can be
          accomplished by physical means (e.g., employing physical barriers to wireless radio frequencies) or
          by logical means (e.g., employing cryptographic techniques). If physical means of protection are
          employed, then logical means (cryptography) do not have to be employed, and vice versa. If the
          wireless peripheral is only passing telemetry data, encryption of the data may not be required.

          Satisfies: SRG-OS-000299-GPOS-00117, SRG-OS-000300-GPOS-00118, SRG-OS-000481-GPOS-000481
        Check:
          Verify there are no wireless interfaces configured on the system with the following command:

          Note: This requirement is Not Applicable for systems that do not have physical wireless network
          radios.

          $ sudo nmcli device status

          DEVICE                    TYPE            STATE                    CONNECTION
          virbr0                      bridge         connected             virbr0
          wlp7s0                    wifi              connected            wifiSSID
          enp6s0                    ethernet     disconnected        --
          p2p-dev-wlp7s0     wifi-p2p     disconnected        --
          lo                             loopback    unmanaged           --
          virbr0-nic                tun              unmanaged          --

          If a wireless interface is configured and has not been documented and approved by the Information
          System Security Officer (ISSO), this is a finding.
        Fix:
          Configure the system to disable all wireless network interfaces with the following command:

          $ sudo nmcli radio all off

- name: "RHEL 8 Bluetooth must be disabled."
  tags:
      - V230507
      - medium
      - RHEL-08-040111
      - SV-230507r833336_rule
      - C-33176r833334_chk
      - F-33151r833335_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without protection of communications with wireless peripherals, confidentiality and integrity may be
          compromised because unprotected communications can be intercepted and either read, altered, or used
          to compromise the RHEL 8 operating system.

          This requirement applies to wireless peripheral technologies (e.g., wireless mice, keyboards,
          displays, etc.) used with RHEL 8 systems. Wireless peripherals (e.g., Wi-Fi/Bluetooth/IR Keyboards,
          Mice, and Pointing Devices and Near Field Communications [NFC]) present a unique challenge by
          creating an open, unsecured port on a computer. Wireless peripherals must meet DoD requirements for
          wireless data transmission and be approved for use by the Authorizing Official (AO). Even though
          some wireless peripherals, such as mice and pointing devices, do not ordinarily carry information
          that need to be protected, modification of communications with these wireless peripherals may be
          used to compromise the RHEL 8 operating system. Communication paths outside the physical protection
          of a controlled boundary are exposed to the possibility of interception and modification.

          Protecting the confidentiality and integrity of communications with wireless peripherals can be
          accomplished by physical means (e.g., employing physical barriers to wireless radio frequencies) or
          by logical means (e.g., employing cryptographic techniques). If physical means of protection are
          employed, then logical means (cryptography) do not have to be employed, and vice versa. If the
          wireless peripheral is only passing telemetry data, encryption of the data may not be required.
        Check:
          If the device or operating system does not have a Bluetooth adapter installed, this requirement is
          not applicable.

          This requirement is not applicable to mobile devices (smartphones and tablets), where the use of
          Bluetooth is a local AO decision.

          Determine if Bluetooth is disabled with the following command:

          $ sudo grep bluetooth /etc/modprobe.d/*

          /etc/modprobe.d/bluetooth.conf:install bluetooth /bin/true

          If the Bluetooth driver blacklist entry is missing, a Bluetooth driver is determined to be in use,
          and the collaborative computing device has not been authorized for use, this is a finding.

          Verify the operating system disables the ability to use Bluetooth with the following command:

          $ sudo grep -r bluetooth /etc/modprobe.d | grep -i "blacklist" | grep -v "^#"

          blacklist bluetooth

          If the command does not return any output or the output is not "blacklist bluetooth", and use of
          Bluetooth is not documented with the ISSO as an operational requirement, this is a finding.
        Fix:
          Configure the operating system to disable the Bluetooth adapter when not in use.

          Build or modify the "/etc/modprobe.d/bluetooth.conf" file with the following line:

          install bluetooth /bin/true

          Disable the ability to use the Bluetooth kernel module.

          $ sudo vi /etc/modprobe.d/blacklist.conf

          Add or update the line:

          blacklist bluetooth

          Reboot the system for the settings to take effect.

- name: "RHEL 8 must mount /dev/shm with the nodev option."
  tags:
      - V230508
      - medium
      - RHEL-08-040120
      - SV-230508r854049_rule
      - C-33177r568270_chk
      - F-33152r568271_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/dev/shm" is mounted with the "nodev" option:

          $ sudo mount | grep /dev/shm

          tmpfs on /dev/shm type tmpfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nodev"option is configured for /dev/shm:

          $ sudo cat /etc/fstab | grep /dev/shm

          tmpfs /dev/shm tmpfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nodev" option is missing, or if /dev/shm is mounted without the
          "nodev" option, this is a finding.
        Fix:
          Configure the system so that /dev/shm is mounted with the "nodev" option by adding /modifying the
          /etc/fstab with the following line:

          tmpfs /dev/shm tmpfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /dev/shm with the nosuid option."
  tags:
      - V230509
      - medium
      - RHEL-08-040121
      - SV-230509r854050_rule
      - C-33178r568273_chk
      - F-33153r568274_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.
          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.
          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/dev/shm" is mounted with the "nosuid" option:

          $ sudo mount | grep /dev/shm

          tmpfs on /dev/shm type tmpfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nosuid" option is configured for /dev/shm:

          $ sudo cat /etc/fstab | grep /dev/shm

          tmpfs /dev/shm tmpfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nosuid" option is missing, or if /dev/shm is mounted without the
          "nosuid" option, this is a finding.
        Fix:
          Configure the system so that /dev/shm is mounted with the  "nosuid" option by adding /modifying the
          /etc/fstab with the following line:

          tmpfs /dev/shm tmpfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /dev/shm with the noexec option."
  tags:
      - V230510
      - medium
      - RHEL-08-040122
      - SV-230510r854051_rule
      - C-33179r568276_chk
      - F-33154r568277_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/dev/shm" is mounted with the "noexec" option:

          $ sudo mount | grep /dev/shm

          tmpfs on /dev/shm type tmpfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "noexec" options is configured for /dev/shm:

          $ sudo cat /etc/fstab | grep /dev/shm

          tmpfs /dev/shm tmpfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "noexec" option is missing, or if /dev/shm is mounted without the
          "noexec" option, this is a finding.
        Fix:
          Configure the system so that /dev/shm is mounted with the "noexec" option by adding /modifying the
          /etc/fstab with the following line:

          tmpfs /dev/shm tmpfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /tmp with the nodev option."
  tags:
      - V230511
      - medium
      - RHEL-08-040123
      - SV-230511r854052_rule
      - C-33180r568279_chk
      - F-33155r568280_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/tmp" is mounted with the "nodev" option:

          $ sudo mount | grep /tmp

          /dev/mapper/rhel-tmp on /tmp type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nodev" option is configured for /tmp:

          $ sudo cat /etc/fstab | grep /tmp

          /dev/mapper/rhel-tmp /tmp xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nodev" option is missing, or if /tmp is mounted without the "nodev"
          option, this is a finding.
        Fix:
          Configure the system so that /tmp is mounted with the "nodev" option by adding /modifying the
          /etc/fstab with the following line:

          /dev/mapper/rhel-tmp /tmp xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /tmp with the nosuid option."
  tags:
      - V230512
      - medium
      - RHEL-08-040124
      - SV-230512r854053_rule
      - C-33181r568282_chk
      - F-33156r568283_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.
          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.
          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/tmp" is mounted with the "nosuid" option:

          $ sudo mount | grep /tmp

          /dev/mapper/rhel-tmp on /tmp type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nosuid" option is configured for /tmp:

          $ sudo cat /etc/fstab | grep /tmp

          /dev/mapper/rhel-tmp /tmp xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nosuid" option is missing, or if /tmp is mounted without the
          "nosuid" option, this is a finding.
        Fix:
          Configure the system so that /tmp is mounted with the "nosuid" option by adding /modifying the
          /etc/fstab with the following line:

          /dev/mapper/rhel-tmp /tmp xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /tmp with the noexec option."
  tags:
      - V230513
      - medium
      - RHEL-08-040125
      - SV-230513r854054_rule
      - C-33182r568285_chk
      - F-33157r568286_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/tmp" is mounted with the "noexec" option:

          $ sudo mount | grep /tmp

          /dev/mapper/rhel-tmp on /tmp type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "noexec" option is configured for /tmp:

          $ sudo cat /etc/fstab | grep /tmp

          /dev/mapper/rhel-tmp /tmp xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "noexec" option is missing, or if /tmp is mounted without the
          "noexec" option, this is a finding.
        Fix:
          Configure the system so that /tmp is mounted with the "noexec" option by adding /modifying the
          /etc/fstab with the following line:

          /dev/mapper/rhel-tmp /tmp xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /var/log with the nodev option."
  tags:
      - V230514
      - medium
      - RHEL-08-040126
      - SV-230514r854055_rule
      - C-33183r568288_chk
      - F-33158r568289_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/var/log" is mounted with the "nodev" option:

          $ sudo mount | grep /var/log

          /dev/mapper/rhel-var-log on /var/log type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nodev" option is configured for /var/log:

          $ sudo cat /etc/fstab | grep /var/log

          /dev/mapper/rhel-var-log /var/log xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nodev" option is missing, or if /var/log is mounted without the
          "nodev" option, this is a finding.
        Fix:
          Configure the system so that /var/log is mounted with the "nodev" option by adding /modifying the
          /etc/fstab with the following line:

          /dev/mapper/rhel-var-log /var/log xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /var/log with the nosuid option."
  tags:
      - V230515
      - medium
      - RHEL-08-040127
      - SV-230515r854056_rule
      - C-33184r568291_chk
      - F-33159r568292_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/var/log" is mounted with the "nosuid" option:

          $ sudo mount | grep /var/log

          /dev/mapper/rhel-var-log on /var/log type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nosuid" option is configured for /var/log:

          $ sudo cat /etc/fstab | grep /var/log

          /dev/mapper/rhel-var-log /var/log xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nosuid" option is missing, or if /var/log is mounted without the
          "nosuid" option, this is a finding.
        Fix:
          Configure the system so that /var/log is mounted with the "nosuid" option by adding /modifying the
          /etc/fstab with the following line:

          /dev/mapper/rhel-var-log /var/log xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /var/log with the noexec option."
  tags:
      - V230516
      - medium
      - RHEL-08-040128
      - SV-230516r854057_rule
      - C-33185r568294_chk
      - F-33160r568295_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/var/log" is mounted with the "noexec" option:

          $ sudo mount | grep /var/log

          /dev/mapper/rhel-var-log on /var/log type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "noexec" option is configured for /var/log:

          $ sudo cat /etc/fstab | grep /var/log

          /dev/mapper/rhel-var-log /var/log xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "noexec" option is missing, or if /var/log is mounted without the
          "noexec" option, this is a finding.
        Fix:
          Configure the system so that /var/log is mounted with the "noexec" option by adding /modifying the
          /etc/fstab with the following line:

          /dev/mapper/rhel-var-log /var/log xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /var/log/audit with the nodev option."
  tags:
      - V230517
      - medium
      - RHEL-08-040129
      - SV-230517r854058_rule
      - C-33186r568297_chk
      - F-33161r568298_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/var/log/audit" is mounted with the "nodev" option:

          $ sudo mount | grep /var/log/audit

          /dev/mapper/rhel-var-log-audit on /var/log/audit type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nodev" option is configured for /var/log/audit:

          $ sudo cat /etc/fstab | grep /var/log/audit

          /dev/mapper/rhel-var-log-audit /var/log/audit xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nodev" option is missing, or if /var/log/audit is mounted without
          the "nodev" option, this is a finding.
        Fix:
          Configure the system so that /var/log/audit is mounted with the "nodev" option by adding /modifying
          the /etc/fstab with the following line:

          /dev/mapper/rhel-var-log-audit /var/log/audit xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /var/log/audit with the nosuid option."
  tags:
      - V230518
      - medium
      - RHEL-08-040130
      - SV-230518r854059_rule
      - C-33187r568300_chk
      - F-33162r568301_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/var/log/audit" is mounted with the "nosuid" option:

          $ sudo mount | grep /var/log/audit

          /dev/mapper/rhel-var-log-audit on /var/log/audit type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nosuid" option is configured for /var/log/audit:

          $ sudo cat /etc/fstab | grep /var/log/audit

          /dev/mapper/rhel-var-log-audit /var/log/audit xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nosuid" option is missing, or if /var/log/audit is mounted without
          the "nosuid" option, this is a finding.
        Fix:
          Configure the system so that /var/log/audit is mounted with the "nosuid" option by adding /modifying
          the /etc/fstab with the following line:

          /dev/mapper/rhel-var-log-audit /var/log/audit xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /var/log/audit with the noexec option."
  tags:
      - V230519
      - medium
      - RHEL-08-040131
      - SV-230519r854060_rule
      - C-33188r568303_chk
      - F-33163r568304_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/var/log/audit" is mounted with the "noexec" option:

          $ sudo mount | grep /var/log/audit

          /dev/mapper/rhel-var-log-audit on /var/log/audit type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "noexec" option is configured for /var/log/audit:

          $ sudo cat /etc/fstab | grep /var/log/audit

          /dev/mapper/rhel-var-log-audit /var/log/audit xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "noexec" option is missing, or if /var/log/audit is mounted without
          the "noexec" option, this is a finding.
        Fix:
          Configure the system so that /var/log/audit is mounted with the "noexec" option by adding /modifying
          the /etc/fstab with the following line:

          /dev/mapper/rhel-var-log-audit /var/log/audit xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /var/tmp with the nodev option."
  tags:
      - V230520
      - medium
      - RHEL-08-040132
      - SV-230520r854061_rule
      - C-33189r792925_chk
      - F-33164r792926_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/var/tmp" is mounted with the "nodev" option:

          $ sudo mount | grep /var/tmp

          /dev/mapper/rhel-var-tmp on /var/tmp type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nodev" option is configured for /var/tmp:

          $ sudo cat /etc/fstab | grep /var/tmp

          /dev/mapper/rhel-var-tmp /var/tmp xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nodev" option is missing, or if /var/tmp is mounted without the
          "nodev" option, this is a finding.
        Fix:
          Configure the system so that /var/tmp is mounted with the "nodev" option by adding /modifying the
          /etc/fstab with the following line:

          /dev/mapper/rhel-var-tmp /var/tmp xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /var/tmp with the nosuid option."
  tags:
      - V230521
      - medium
      - RHEL-08-040133
      - SV-230521r854062_rule
      - C-33190r792928_chk
      - F-33165r792929_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/var/tmp" is mounted with the "nosuid" option:

          $ sudo mount | grep /var/tmp

          /dev/mapper/rhel-var-tmp on /var/tmp type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "nosuid" option is configured for /var/tmp:

          $ sudo cat /etc/fstab | grep /var/tmp

          /dev/mapper/rhel-var-tmp /var/tmp xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "nosuid" option is missing, or if /var/tmp is mounted without the
          "nosuid" option, this is a finding.
        Fix:
          Configure the system so that /var/tmp is mounted with the "nosuid" option by adding /modifying the
          /etc/fstab with the following line:

          /dev/mapper/rhel-var-tmp /var/tmp xfs defaults,nodev,nosuid,noexec 0 0

- name: "RHEL 8 must mount /var/tmp with the noexec option."
  tags:
      - V230522
      - medium
      - RHEL-08-040134
      - SV-230522r854063_rule
      - C-33191r792931_chk
      - F-33166r792932_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          The "noexec" mount option causes the system to not execute binary files. This option must be used
          for mounting any file system not containing approved binary files, as they may be incompatible.
          Executing files from untrusted file systems increases the opportunity for unprivileged users to
          attain unauthorized administrative access.

          The "nodev" mount option causes the system to not interpret character or block special devices.
          Executing character or block special devices from untrusted file systems increases the opportunity
          for unprivileged users to attain unauthorized administrative access.

          The "nosuid" mount option causes the system to not execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          Verify "/var/tmp" is mounted with the "noexec" option:

          $ sudo mount | grep /var/tmp

          /dev/mapper/rhel-var-tmp on /var/tmp type xfs (rw,nodev,nosuid,noexec,seclabel)

          Verify that the "noexec" option is configured for /var/tmp:

          $ sudo cat /etc/fstab | grep /var/tmp

          /dev/mapper/rhel-var-tmp /var/tmp xfs defaults,nodev,nosuid,noexec 0 0

          If results are returned and the "noexec" option is missing, or if /var/tmp is mounted without the
          "noexec" option, this is a finding.
        Fix:
          Configure the system so that /var/tmp is mounted with the "noexec" option by adding /modifying the
          /etc/fstab with the following line:

          /dev/mapper/rhel-var-tmp /var/tmp xfs defaults,nodev,nosuid,noexec 0 0

- name: "The RHEL 8 fapolicy module must be installed."
  tags:
      - V230523
      - medium
      - RHEL-08-040135
      - SV-230523r854064_rule
      - C-33192r744021_chk
      - F-33167r744022_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          Utilizing a whitelist provides a configuration management method for allowing the execution of only
          authorized software. Using only authorized software decreases risk by limiting the number of
          potential vulnerabilities. Verification of whitelisted software occurs prior to execution or at
          system startup.

          User home directories/folders may contain information of a sensitive nature. Non-privileged users
          should coordinate any sharing of information with an SA through shared resources.

          RHEL 8 ships with many optional packages. One such package is a file access policy daemon called
          "fapolicyd". "fapolicyd" is a userspace daemon that determines access rights to files based on
          attributes of the process and file. It can be used to either blacklist or whitelist processes or
          file access.

          Proceed with caution with enforcing the use of this daemon. Improper configuration may render the
          system non-functional. The "fapolicyd" API is not namespace aware and can cause issues when
          launching or running containers.

          Satisfies: SRG-OS-000368-GPOS-00154, SRG-OS-000370-GPOS-00155, SRG-OS-000480-GPOS-00232
        Check:
          Verify the RHEL 8 "fapolicyd" is installed.

          Check that "fapolicyd" is installed with the following command:

          $ sudo yum list installed fapolicyd

          Installed Packages
          fapolicyd.x86_64

          If fapolicyd is not installed, this is a finding.
        Fix:
          Install "fapolicyd" with the following command:

          $ sudo yum install fapolicyd.x86_64

- name: "RHEL 8 must block unauthorized peripherals before establishing a connection."
  tags:
      - V230524
      - medium
      - RHEL-08-040140
      - SV-230524r854065_rule
      - C-33193r744024_chk
      - F-33168r744025_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without authenticating devices, unidentified or unknown devices may be introduced, thereby
          facilitating malicious activity.

          Peripherals include, but are not limited to, such devices as flash drives, external storage, and
          printers.

          A new feature that RHEL 8 provides is the USBGuard software framework. The USBguard-daemon is the
          main component of the USBGuard software framework. It runs as a service in the background and
          enforces the USB device authorization policy for all USB devices. The policy is defined by a set of
          rules using a rule language described in the usbguard-rules.conf file. The policy and the
          authorization state of USB devices can be modified during runtime using the usbguard tool.

          The System Administrator (SA) must work with the site Information System Security Officer (ISSO) to
          determine a list of authorized peripherals and establish rules within the USBGuard software
          framework to allow only authorized devices.
        Check:
          Verify the USBGuard has a policy configured with the following command:

          $ sudo usbguard list-rules

          If the command does not return results or an error is returned, ask the SA to indicate how
          unauthorized peripherals are being blocked.

          If there is no evidence that unauthorized peripherals are being blocked before establishing a
          connection, this is a finding.
        Fix:
          Configure the operating system to enable the blocking of unauthorized peripherals with the following
          command:
          This command must be run from a root shell and will create an allow list for any usb devices
          currently connect to the system.

          # usbguard generate-policy > /etc/usbguard/rules.conf

          Note: Enabling and starting usbguard without properly configuring it for an individual system will
          immediately prevent any access over a usb device such as a keyboard or mouse

- name: "The x86 Ctrl-Alt-Delete key sequence must be disabled on RHEL 8."
  tags:
      - V230529
      - high
      - RHEL-08-040170
      - SV-230529r833338_rule
      - C-33198r568333_chk
      - F-33173r833337_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          A locally logged-on user, who presses Ctrl-Alt-Delete when at the console, can reboot the system. If
          accidentally pressed, as could happen in the case of a mixed OS environment, this can create the
          risk of short-term loss of availability of systems due to unintentional reboot. In a graphical user
          environment, risk of unintentional reboot from the Ctrl-Alt-Delete sequence is reduced because the
          user will be prompted before any action is taken.
        Check:
          Verify RHEL 8 is not configured to reboot the system when Ctrl-Alt-Delete is pressed with the
          following command:

          $ sudo systemctl status ctrl-alt-del.target

          ctrl-alt-del.target
          Loaded: masked (Reason: Unit ctrl-alt-del.target is masked.)
          Active: inactive (dead)

          If the "ctrl-alt-del.target" is loaded and not masked, this is a finding.
        Fix:
          Configure the system to disable the Ctrl-Alt-Delete sequence for the command line with the following
          commands:

          $ sudo systemctl disable ctrl-alt-del.target

          $ sudo systemctl mask ctrl-alt-del.target

          Created symlink /etc/systemd/system/ctrl-alt-del.target -> /dev/null

          Reload the daemon for this change to take effect.

          $ sudo systemctl daemon-reload

- name: "The systemd Ctrl-Alt-Delete burst key sequence in RHEL 8 must be disabled."
  tags:
      - V230531
      - high
      - RHEL-08-040172
      - SV-230531r627750_rule
      - C-33200r568339_chk
      - F-33175r619890_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          A locally logged-on user who presses Ctrl-Alt-Delete when at the console can reboot the system. If
          accidentally pressed, as could happen in the case of a mixed OS environment, this can create the
          risk of short-term loss of availability of systems due to unintentional reboot. In a graphical user
          environment, risk of unintentional reboot from the Ctrl-Alt-Delete sequence is reduced because the
          user will be prompted before any action is taken.
        Check:
          Verify RHEL 8 is not configured to reboot the system when Ctrl-Alt-Delete is pressed seven times
          within two seconds with the following command:

          $ sudo grep -i ctrl /etc/systemd/system.conf

          CtrlAltDelBurstAction=none

          If the "CtrlAltDelBurstAction" is not set to "none", commented out, or is missing, this is a
          finding.
        Fix:
          Configure the system to disable the CtrlAltDelBurstAction by added or modifying the following line
          in the "/etc/systemd/system.conf" configuration file:

          CtrlAltDelBurstAction=none

          Reload the daemon for this change to take effect.

          $ sudo systemctl daemon-reload

- name: "The debug-shell systemd service must be disabled on RHEL 8."
  tags:
      - V230532
      - medium
      - RHEL-08-040180
      - SV-230532r627750_rule
      - C-33201r568342_chk
      - F-33176r619892_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The debug-shell requires no authentication and provides root privileges to anyone who has physical
          access to the machine.  While this feature is disabled by default, masking it adds an additional
          layer of assurance that it will not be enabled via a dependency in systemd.  This also prevents
          attackers with physical access from trivially bypassing security on the machine through valid
          troubleshooting configurations and gaining root access when the system is rebooted.
        Check:
          Verify RHEL 8 is configured to mask the debug-shell systemd service with the following command:

          $ sudo systemctl status debug-shell.service

          debug-shell.service
          Loaded: masked (Reason: Unit debug-shell.service is masked.)
          Active: inactive (dead)

          If the "debug-shell.service" is loaded and not masked, this is a finding.
        Fix:
          Configure the system to mask the debug-shell systemd service with the following command:

          $ sudo systemctl mask debug-shell.service

          Created symlink /etc/systemd/system/debug-shell.service -> /dev/null

          Reload the daemon to take effect.

          $ sudo systemctl daemon-reload

- name: "The root account must be the only account having unrestricted access to the RHEL 8 system."
  tags:
      - V230534
      - high
      - RHEL-08-040200
      - SV-230534r627750_rule
      - C-33203r568348_chk
      - F-33178r568349_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If an account other than root also has a User Identifier (UID) of "0", it has root authority, giving
          that account unrestricted access to the entire operating system. Multiple accounts with a UID of "0"
          afford an opportunity for potential intruders to guess a password for a privileged account.
        Check:
          Check the system for duplicate UID "0" assignments with the following command:

          $ sudo awk -F: '$3 == 0 {print $1}' /etc/passwd

          If any accounts other than root have a UID of "0", this is a finding.
        Fix:
          Change the UID of any account on the system, other than root, that has a UID of "0".

          If the account is associated with system commands or applications, the UID should be changed to one
          greater than "0" but less than "1000". Otherwise, assign a UID of greater than "1000" that has not
          already been assigned.

- name: "RHEL 8 must be configured to prevent unrestricted mail relaying."
  tags:
      - V230550
      - medium
      - RHEL-08-040290
      - SV-230550r627750_rule
      - C-33219r568396_chk
      - F-33194r568397_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If unrestricted mail relaying is permitted, unauthorized senders could use this host as a mail relay
          for the purpose of sending spam or other unauthorized activity.
        Check:
          Verify the system is configured to prevent unrestricted mail relaying.

          Determine if "postfix" is installed with the following commands:

          $ sudo yum list installed postfix

          postfix.x86_64  2:3.3.1-9.el8

          If postfix is not installed, this is Not Applicable.

          If postfix is installed, determine if it is configured to reject connections from unknown or
          untrusted networks with the following command:

          $ sudo postconf -n smtpd_client_restrictions

          smtpd_client_restrictions = permit_mynetworks, reject

          If the "smtpd_client_restrictions" parameter contains any entries other than "permit_mynetworks" and
          "reject", this is a finding.
        Fix:
          If "postfix" is installed, modify the "/etc/postfix/main.cf" file to restrict client connections to
          the local network with the following command:

          $ sudo postconf -e 'smtpd_client_restrictions = permit_mynetworks,reject'

- name: "RHEL 8 network interfaces must not be in promiscuous mode."
  tags:
      - V230554
      - medium
      - RHEL-08-040330
      - SV-230554r627750_rule
      - C-33223r568408_chk
      - F-33198r568409_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Network interfaces in promiscuous mode allow for the capture of all network traffic visible to the
          system. If unauthorized individuals can access these applications, it may allow them to collect
          information such as logon IDs, passwords, and key exchanges between systems.

          If the system is being used to perform a network troubleshooting function, the use of these tools
          must be documented with the Information System Security Officer (ISSO) and restricted to only
          authorized personnel.
        Check:
          Verify network interfaces are not in promiscuous mode unless approved by the ISSO and documented.

          Check for the status with the following command:

          $ sudo ip link | grep -i promisc

          If network interfaces are found on the system in promiscuous mode and their use has not been
          approved by the ISSO and documented, this is a finding.
        Fix:
          Configure network interfaces to turn off promiscuous mode unless approved by the ISSO and
          documented.

          Set the promiscuous mode of an interface to off with the following command:

          $ sudo ip link set dev <devicename> multicast off promisc off

- name: "If the Trivial File Transfer Protocol (TFTP) server is required, the RHEL 8 TFTP daemon must be configured to operate in secure mode."
  tags:
      - V230557
      - medium
      - RHEL-08-040350
      - SV-230557r627750_rule
      - C-33226r568417_chk
      - F-33201r568418_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Restricting TFTP to a specific directory prevents remote users from copying, transferring, or
          overwriting system files.
        Check:
          Verify the TFTP daemon is configured to operate in secure mode with the following commands:

          $ sudo yum list installed tftp-server

          tftp-server.x86_64 x.x-x.el8

          If a TFTP server is not installed, this is Not Applicable.

          If a TFTP server is installed, check for the server arguments with the following command:

          $ sudo grep server_args /etc/xinetd.d/tftp

          server_args = -s /var/lib/tftpboot

          If the "server_args" line does not have a "-s" option, and a subdirectory is not assigned, this is a
          finding.
        Fix:
          Configure the TFTP daemon to operate in secure mode by adding the following line to
          "/etc/xinetd.d/tftp" (or modify the line to have the required value):

          server_args = -s /var/lib/tftpboot

- name: "RHEL 8 operating systems booted with United Extensible Firmware Interface (UEFI) must require a unique superusers name upon booting into single-user mode and maintenance."
  tags:
      - V244521
      - medium
      - RHEL-08-010141
      - SV-244521r792982_rule
      - C-47796r792981_chk
      - F-47753r743811_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If the system does not require valid authentication before it boots into single-user or maintenance
          mode, anyone who invokes single-user or maintenance mode is granted privileged access to all files
          on the system. GRUB 2 is the default boot loader for RHEL 8 and is designed to require a password to
          boot into single-user mode or make modifications to the boot menu.

          The GRUB 2 superuser account is an account of last resort. Establishing a unique username for this
          account hardens the boot loader against brute force attacks. Due to the nature of the superuser
          account database being distinct from the OS account database, this allows the use of a username that
          is not among those within the OS account database. Examples of non-unique superusers names are root,
          superuser, unlock, etc.
        Check:
          For systems that use BIOS, this is Not Applicable.

          Verify that a unique name is set as the "superusers" account:

          $ sudo grep -iw "superusers" /boot/efi/EFI/redhat/grub.cfg
          set superusers="[someuniquestringhere]"
          export superusers

          If "superusers" is identical to any OS account name or is missing a name, this is a finding.
        Fix:
          Configure the system to have a unique name for the grub superusers account.

          Edit the /etc/grub.d/01_users file and add or modify the following lines:

          set superusers="[someuniquestringhere]"
          export superusers
          password_pbkdf2 [someuniquestringhere] ${GRUB2_PASSWORD}

          Generate a new grub.cfg file with the following command:

          $ sudo grub2-mkconfig -o /boot/efi/EFI/redhat/grub.cfg

- name: "RHEL 8 operating systems booted with a BIOS must require  a unique superusers name upon booting into single-user and maintenance modes."
  tags:
      - V244522
      - medium
      - RHEL-08-010149
      - SV-244522r792984_rule
      - C-47797r792983_chk
      - F-47754r743814_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If the system does not require valid authentication before it boots into single-user or maintenance
          mode, anyone who invokes single-user or maintenance mode is granted privileged access to all files
          on the system. GRUB 2 is the default boot loader for RHEL 8 and is designed to require a password to
          boot into single-user mode or make modifications to the boot menu.

          The GRUB 2 superuser account is an account of last resort. Establishing a unique username for this
          account hardens the boot loader against brute force attacks. Due to the nature of the superuser
          account database being distinct from the OS account database, this allows the use of a username that
          is not among those within the OS account database. Examples of non-unique superusers names are root,
          superuser, unlock, etc.
        Check:
          For systems that use UEFI, this is Not Applicable.

          Verify that a unique name is set as the "superusers" account:

          $ sudo grep -iw "superusers" /boot/grub2/grub.cfg
          set superusers="[someuniquestringhere]"
          export superusers

          If "superusers" is identical to any OS account name or is missing a name, this is a finding.
        Fix:
          Configure the system to have a unique name for the grub superusers account.

          Edit the /etc/grub.d/01_users file and add or modify the following lines:

          set superusers="[someuniquestringhere]"
          export superusers
          password_pbkdf2 [someuniquestringhere] ${GRUB2_PASSWORD}

          Generate a new grub.cfg file with the following command:

          $ sudo grub2-mkconfig -o /boot/grub2/grub.cfg

- name: "RHEL 8 operating systems must require authentication upon booting into emergency mode."
  tags:
      - V244523
      - medium
      - RHEL-08-010152
      - SV-244523r743818_rule
      - C-47798r743816_chk
      - F-47755r743817_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If the system does not require valid root authentication before it boots into emergency or rescue
          mode, anyone who invokes emergency or rescue mode is granted privileged access to all files on the
          system.
        Check:
          Check to see if the system requires authentication for emergency mode with the following command:

          $ sudo grep sulogin-shell /usr/lib/systemd/system/emergency.service

          ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency

          If the "ExecStart" line is configured for anything other than "/usr/lib/systemd/systemd-sulogin-
          shell emergency", commented out, or missing, this is a finding.
        Fix:
          Configure the system to require authentication upon booting into emergency mode by adding the
          following line to the "/usr/lib/systemd/system/emergency.service" file.

          ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency

- name: "RHEL 8 must have the packages required to use the hardware random number generator entropy gatherer service."
  tags:
      - V244527
      - low
      - RHEL-08-010472
      - SV-244527r743830_rule
      - C-47802r743828_chk
      - F-47759r743829_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The most important characteristic of a random number generator is its randomness, namely its ability
          to deliver random numbers that are impossible to predict.  Entropy in computer security is
          associated with the unpredictability of a source of randomness.  The random source with high entropy
          tends to achieve a uniform distribution of random values.  Random number generators are one of the
          most important building blocks of cryptosystems.

          The rngd service feeds random data from hardware device to kernel random device. Quality (non-
          predictable) random number generation is important for several security functions (i.e., ciphers).
        Check:
          Check that RHEL 8 has the packages required to enabled the hardware random number generator entropy
          gatherer service with the following command:

          $ sudo yum list installed rng-tools

          rng-tools.x86_64                       6.8-3.el8                        @anaconda

          If the "rng-tools" package is not installed, this is a finding.
        Fix:
          Install the packages required to enabled the hardware random number generator entropy gatherer
          service with the following command:

          $ sudo yum install rng-tools

- name: "RHEL 8 must prevent files with the setuid and setgid bit set from being executed on the /boot/efi directory."
  tags:
      - V244530
      - medium
      - RHEL-08-010572
      - SV-244530r809336_rule
      - C-47805r809335_chk
      - F-47762r743838_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The "nosuid" mount option causes the system not to execute "setuid" and "setgid" files with owner
          privileges. This option must be used for mounting any file system not containing approved "setuid"
          and "setguid" files. Executing files from untrusted file systems increases the opportunity for
          unprivileged users to attain unauthorized administrative access.
        Check:
          For systems that use BIOS, this is Not Applicable.

          Verify the /boot/efi directory is mounted with the "nosuid" option with the following command:

          $ sudo mount | grep '\s/boot/efi\s'

          /dev/sda1 on /boot/efi type vfat (rw,nosuid,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=as
          cii,shortname=winnt,errors=remount-ro)

          If the /boot/efi file system does not have the "nosuid" option set, this is a finding.
        Fix:
          Configure the "/etc/fstab" to use the "nosuid" option on the /boot/efi directory.

- name: "All RHEL 8 local interactive user home directory files must have mode 0750 or less permissive."
  tags:
      - V244531
      - medium
      - RHEL-08-010731
      - SV-244531r743842_rule
      - C-47806r743840_chk
      - F-47763r743841_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Excessive permissions on local interactive user home directories may allow unauthorized access to
          user files by other users.
        Check:
          Verify all files and directories contained in a local interactive user home directory, excluding
          local initialization files, have a mode of "0750".
          Files that begin with a "." are excluded from this requirement.

          Note: The example will be for the user "smithj", who has a home directory of "/home/smithj".

          $ sudo ls -lLR /home/smithj
          -rwxr-x--- 1 smithj smithj 18 Mar 5 17:06 file1
          -rwxr----- 1 smithj smithj 193 Mar 5 17:06 file2
          -rw-r-x--- 1 smithj smithj 231 Mar 5 17:06 file3

          If any files or directories are found with a mode more permissive than "0750", this is a finding.
        Fix:
          Set the mode on files and directories in the local interactive user home directory with the
          following command:

          Note: The example will be for the user smithj, who has a home directory of "/home/smithj" and is a
          member of the users group.

          $ sudo chmod 0750 /home/smithj/<file or directory>

- name: "RHEL 8 must be configured so that all files and directories contained in local interactive user home directories are group-owned by a group of which the home directory owner is a member."
  tags:
      - V244532
      - medium
      - RHEL-08-010741
      - SV-244532r743845_rule
      - C-47807r743843_chk
      - F-47764r743844_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If a local interactive user's files are group-owned by a group of which the user is not a member,
          unintended users may be able to access them.
        Check:
          Verify all files and directories in a local interactive user home directory are group-owned by a
          group that the user is a member.

          Check the group owner of all files and directories in a local interactive user's home directory with
          the following command:

          Note: The example will be for the user "smithj", who has a home directory of "/home/smithj".

          $ sudo ls -lLR /<home directory>/<users home directory>/
          -rw-r--r-- 1 smithj smithj  18 Mar  5 17:06 file1
          -rw-r--r-- 1 smithj smithj 193 Mar  5 17:06 file2
          -rw-r--r-- 1 smithj sa        231 Mar  5 17:06 file3

          If any files found with a group-owner different from the home directory user private group, check to
          see if the user is a member of that group with the following command:

          $ sudo grep smithj /etc/group
          sa:x:100:juan,shelley,bob,smithj
          smithj:x:521:smithj

          If any files or directories are group owned by a group that the directory owner is not a member of,
          this is a finding.
        Fix:
          Change the group of a local interactive user's files and directories to a group that the interactive
          user is a member. To change the group owner of a local interactive user's files and directories, use
          the following command:

          Note: The example will be for the user smithj, who has a home directory of "/home/smithj" and is a
          member of the users group.

          $ sudo chgrp smithj /home/smithj/<file or directory>

- name: "The RHEL 8 fapolicy module must be enabled."
  tags:
      - V244545
      - medium
      - RHEL-08-040136
      - SV-244545r854074_rule
      - C-47820r743882_chk
      - F-47777r743883_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          Utilizing a whitelist provides a configuration management method for allowing the execution of only
          authorized software. Using only authorized software decreases risk by limiting the number of
          potential vulnerabilities. Verification of whitelisted software occurs prior to execution or at
          system startup.

          User home directories/folders may contain information of a sensitive nature. Non-privileged users
          should coordinate any sharing of information with an SA through shared resources.

          RHEL 8 ships with many optional packages. One such package is a file access policy daemon called
          "fapolicyd". "fapolicyd" is a userspace daemon that determines access rights to files based on
          attributes of the process and file. It can be used to either blacklist or whitelist processes or
          file access.

          Proceed with caution with enforcing the use of this daemon. Improper configuration may render the
          system non-functional. The "fapolicyd" API is not namespace aware and can cause issues when
          launching or running containers.

          Satisfies: SRG-OS-000368-GPOS-00154, SRG-OS-000370-GPOS-00155, SRG-OS-000480-GPOS-00232
        Check:
          Verify the RHEL 8 "fapolicyd" is enabled and running with the following command:

          $ sudo systemctl status fapolicyd.service

          fapolicyd.service - File Access Policy Daemon
          Loaded: loaded (/usr/lib/systemd/system/fapolicyd.service; enabled; vendor preset: disabled)
          Active: active (running)

          If fapolicyd is not enabled and running, this is a finding.
        Fix:
          Enable "fapolicyd" using the following command:

          $ sudo systemctl enable --now fapolicyd

- name: "The RHEL 8 fapolicy module must be configured to employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs."
  tags:
      - V244546
      - medium
      - RHEL-08-040137
      - SV-244546r858730_rule
      - C-47821r858728_chk
      - F-47778r858729_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          The organization must identify authorized software programs and permit execution of authorized
          software. The process used to identify software programs that are authorized to execute on
          organizational information systems is commonly referred to as whitelisting.

          Utilizing a whitelist provides a configuration management method for allowing the execution of only
          authorized software. Using only authorized software decreases risk by limiting the number of
          potential vulnerabilities. Verification of whitelisted software occurs prior to execution or at
          system startup.

          User home directories/folders may contain information of a sensitive nature. Non-privileged users
          should coordinate any sharing of information with an SA through shared resources.

          RHEL 8 ships with many optional packages. One such package is a file access policy daemon called
          "fapolicyd". "fapolicyd" is a userspace daemon that determines access rights to files based on
          attributes of the process and file. It can be used to either blacklist or whitelist processes or
          file access.

          Proceed with caution with enforcing the use of this daemon. Improper configuration may render the
          system non-functional. The "fapolicyd" API is not namespace aware and can cause issues when
          launching or running containers.

          Satisfies: SRG-OS-000368-GPOS-00154, SRG-OS-000370-GPOS-00155, SRG-OS-000480-GPOS-00232
        Check:
          Verify the RHEL 8 "fapolicyd" employs a deny-all, permit-by-exception policy.

          Check that "fapolicyd" is in enforcement mode with the following command:

          $ sudo grep permissive /etc/fapolicyd/fapolicyd.conf

          permissive = 0

          Check that fapolicyd employs a deny-all policy on system mounts with the following commands:

          For RHEL 8.4 systems and older:
          $ sudo tail /etc/fapolicyd/fapolicyd.rules

          For RHEL 8.5 systems and newer:
          $ sudo tail /etc/fapolicyd/compiled.rules

          allow exe=/usr/bin/python3.7 : ftype=text/x-python
          deny_audit perm=any pattern=ld_so : all
          deny perm=any all : all

          If fapolicyd is not running in enforcement mode with a deny-all, permit-by-exception policy, this is
          a finding.
        Fix:
          Configure RHEL 8 to employ a deny-all, permit-by-exception application whitelisting policy with
          "fapolicyd".

          With the "fapolicyd" installed and enabled, configure the daemon to function in permissive mode
          until the whitelist is built correctly to avoid system lockout. Do this by editing the
          "/etc/fapolicyd/fapolicyd.conf" file with the following line:

          permissive = 1

          For RHEL 8.4 systems and older:
          Build the whitelist in the "/etc/fapolicyd/fapolicyd.rules" file ensuring the last rule is "deny
          perm=any all : all".

          For RHEL 8.5 systems and newer:
          Build the whitelist in a file within the "/etc/fapolicyd/rules.d" directory ensuring the last rule
          is "deny perm=any all : all".

          Once it is determined the whitelist is built correctly, set the fapolicyd to enforcing mode by
          editing the "permissive" line in the /etc/fapolicyd/fapolicyd.conf file.

          permissive = 0

- name: "RHEL 8 must have the USBGuard installed."
  tags:
      - V244547
      - medium
      - RHEL-08-040139
      - SV-244547r854076_rule
      - C-47822r743888_chk
      - F-47779r743889_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without authenticating devices, unidentified or unknown devices may be introduced, thereby
          facilitating malicious activity.
          Peripherals include, but are not limited to, such devices as flash drives, external storage, and
          printers.
          A new feature that RHEL 8 provides is the USBGuard software framework. The USBguard-daemon is the
          main component of the USBGuard software framework. It runs as a service in the background and
          enforces the USB device authorization policy for all USB devices. The policy is defined by a set of
          rules using a rule language described in the usbguard-rules.conf file. The policy and the
          authorization state of USB devices can be modified during runtime using the usbguard tool.

          The System Administrator (SA) must work with the site Information System Security Officer (ISSO) to
          determine a list of authorized peripherals and establish rules within the USBGuard software
          framework to allow only authorized devices.
        Check:
          Verify USBGuard is installed on the operating system with the following command:

          $ sudo yum list installed usbguard

          Installed Packages
          usbguard.x86_64                   0.7.8-7.el8             @ol8_appstream

          If the USBGuard package is not installed, ask the SA to indicate how unauthorized peripherals are
          being blocked.
          If there is no evidence that unauthorized peripherals are being blocked before establishing a
          connection, this is a finding.
        Fix:
          Install the USBGuard package with the following command:

          $ sudo yum install usbguard.x86_64

- name: "RHEL 8 must enable the USBGuard."
  tags:
      - V244548
      - medium
      - RHEL-08-040141
      - SV-244548r854077_rule
      - C-47823r743891_chk
      - F-47780r743892_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Without authenticating devices, unidentified or unknown devices may be introduced, thereby
          facilitating malicious activity.

          Peripherals include, but are not limited to, such devices as flash drives, external storage, and
          printers.

          A new feature that RHEL 8 provides is the USBGuard software framework. The USBguard-daemon is the
          main component of the USBGuard software framework. It runs as a service in the background and
          enforces the USB device authorization policy for all USB devices. The policy is defined by a set of
          rules using a rule language described in the usbguard-rules.conf file. The policy and the
          authorization state of USB devices can be modified during runtime using the usbguard tool.

          The System Administrator (SA) must work with the site Information System Security Officer (ISSO) to
          determine a list of authorized peripherals and establish rules within the USBGuard software
          framework to allow only authorized devices.
        Check:
          Verify the operating system has enabled the use of the USBGuard with the following command:

          $ sudo systemctl status usbguard.service

          usbguard.service - USBGuard daemon
          Loaded: loaded (/usr/lib/systemd/system/usbguard.service; enabled; vendor preset: disabled)
          Active: active (running)

          If the usbguard.service is not enabled and active, ask the SA to indicate how unauthorized
          peripherals are being blocked.
          If there is no evidence that unauthorized peripherals are being blocked before establishing a
          connection, this is a finding.
        Fix:
          Configure the operating system to enable the blocking of unauthorized peripherals with the following
          commands:

          $ sudo systemctl enable usbguard.service

          $ sudo systemctl start usbguard.service

          Note: Enabling and starting usbguard without properly configuring it for an individual system will
          immediately prevent any access over a usb device such as a keyboard or mouse

- name: "The RHEL 8 operating system must implement the Endpoint Security for Linux Threat Prevention tool."
  tags:
      - V245540
      - medium
      - RHEL-08-010001
      - SV-245540r754730_rule
      - C-48814r754728_chk
      - F-48770r754729_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Adding endpoint security tools can provide the capability to automatically take actions in response
          to malicious behavior, which can provide additional agility in reacting to network threats. These
          tools also often include a reporting capability to provide network awareness of the system, which
          may not otherwise exist in an organization's systems management regime.
        Check:
          Per OPORD 16-0080, the preferred endpoint security tool is McAfee Endpoint Security for Linux (ENSL)
          in conjunction with SELinux.

          Procedure:
          Check that the following package has been installed:

          $ sudo rpm -qa | grep -i mcafeetp

          If the "mcafeetp" package is not installed, this is a finding.

          Verify that the daemon is running:

          $ sudo ps -ef | grep -i mfetpd

          If the daemon is not running, this is a finding.
        Fix:
          Install and enable the latest McAfee ENSLTP package.

- name: "The RHEL 8 operating system must not have accounts configured with blank or null passwords."
  tags:
      - V251706
      - high
      - RHEL-08-010121
      - SV-251706r809342_rule
      - C-55143r809340_chk
      - F-55097r809341_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If an account has an empty password, anyone could log on and run commands with the privileges of
          that account. Accounts with empty passwords should never be used in operational environments.
        Check:
          Check the "/etc/shadow" file for blank passwords with the following command:

          $ sudo awk -F: '!$2 {print $1}' /etc/shadow

          If the command returns any results, this is a finding.
        Fix:
          Configure all accounts on the system to have a password or lock the account with the following
          commands:

          Perform a password reset:
          $ sudo passwd [username]
          Lock an account:
          $ sudo passwd -l [username]

- name: "RHEL 8 library directories must have mode 755 or less permissive."
  tags:
      - V251707
      - medium
      - RHEL-08-010331
      - SV-251707r809345_rule
      - C-55144r809343_chk
      - F-55098r809344_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 were to allow any user to make changes to software libraries, then those changes might be
          implemented without undergoing the appropriate testing and approvals that are part of a robust
          change management process.

          This requirement applies to RHEL 8 with software libraries that are accessible and configurable, as
          in the case of interpreted languages. Software libraries also include privileged programs that
          execute with escalated privileges. Only qualified and authorized individuals will be allowed to
          obtain access to information system components for purposes of initiating changes, including
          upgrades and modifications.
        Check:
          Verify the system-wide shared library directories within "/lib", "/lib64", "/usr/lib" and
          "/usr/lib64" have mode "755" or less permissive with the following command:

          $ sudo find /lib /lib64 /usr/lib /usr/lib64 -perm /022 -type d -exec stat -c "%n %a" '{}' \;

          If any system-wide shared library directories are found to be group-writable or world-writable, this
          is a finding.
        Fix:
          Configure the library directories to be protected from unauthorized access. Run the following
          command, replacing "[DIRECTORY]" with any library directory with a mode more permissive than 755.

          $ sudo chmod 755 [DIRECTORY]

- name: "RHEL 8 library directories must be owned by root."
  tags:
      - V251708
      - medium
      - RHEL-08-010341
      - SV-251708r810012_rule
      - C-55145r810011_chk
      - F-55099r809347_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 were to allow any user to make changes to software libraries, then those changes might be
          implemented without undergoing the appropriate testing and approvals that are part of a robust
          change management process.

          This requirement applies to RHEL 8 with software libraries that are accessible and configurable, as
          in the case of interpreted languages. Software libraries also include privileged programs that
          execute with escalated privileges. Only qualified and authorized individuals will be allowed to
          obtain access to information system components for purposes of initiating changes, including
          upgrades and modifications.
        Check:
          Verify the system-wide shared library directories are owned by "root" with the following command:

          $ sudo find /lib /lib64 /usr/lib /usr/lib64 ! -user root -type d -exec stat -c "%n %U" '{}' \;

          If any system-wide shared library directory is returned, this is a finding.
        Fix:
          Configure the system-wide shared library directories within (/lib, /lib64, /usr/lib and /usr/lib64)
          to be protected from unauthorized access.

          Run the following command, replacing "[DIRECTORY]" with any library directory not owned by "root".

          $ sudo chown root [DIRECTORY]

- name: "RHEL 8 library directories must be group-owned by root or a system account."
  tags:
      - V251709
      - medium
      - RHEL-08-010351
      - SV-251709r810014_rule
      - C-55146r810013_chk
      - F-55100r809350_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          If RHEL 8 were to allow any user to make changes to software libraries, then those changes might be
          implemented without undergoing the appropriate testing and approvals that are part of a robust
          change management process.

          This requirement applies to RHEL 8 with software libraries that are accessible and configurable, as
          in the case of interpreted languages. Software libraries also include privileged programs that
          execute with escalated privileges. Only qualified and authorized individuals will be allowed to
          obtain access to information system components for purposes of initiating changes, including
          upgrades and modifications.
        Check:
          Verify the system-wide shared library directories are group-owned by "root" with the following
          command:

          $ sudo find /lib /lib64 /usr/lib /usr/lib64 ! -group root -type d -exec stat -c "%n %G" '{}' \;

          If any system-wide shared library directory is returned and is not group-owned by a required system
          account, this is a finding.
        Fix:
          Configure the system-wide shared library directories (/lib, /lib64, /usr/lib and /usr/lib64) to be
          protected from unauthorized access.

          Run the following command, replacing "[DIRECTORY]" with any library directory not group-owned by
          "root".

          $ sudo chgrp root [DIRECTORY]

- name: "The graphical display manager must not be the default target on RHEL 8 unless approved."
  tags:
      - V251718
      - medium
      - RHEL-08-040321
      - SV-251718r809378_rule
      - C-55155r809376_chk
      - F-55109r809377_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          Internet services that are not required for system or application processes must not be active to
          decrease the attack surface of the system. Graphical display managers have a long history of
          security vulnerabilities and must not be used, unless approved and documented.
        Check:
          Verify that the system is configured to boot to the command line:

          $ systemctl get-default
          multi-user.target

          If the system default target is not set to "multi-user.target" and the Information System Security
          Officer (ISSO) lacks a documented requirement for a graphical user interface, this is a finding.
        Fix:
          Document the requirement for a graphical user interface with the ISSO or reinstall the operating
          system without the graphical user interface. If reinstallation is not feasible, then continue with
          the following procedure:

          Open an SSH session and enter the following commands:

          $ sudo systemctl set-default multi-user.target

          A reboot is required for the changes to take effect.

- name: "RHEL 8 must allocate audit record storage capacity to store at least one week of audit records, when audit records are not immediately sent to a central audit record storage facility."
  tags:
      - V230476
      - medium
      - RHEL-08-030660
      - SV-230476r854040_rule
      - C-33145r809312_chk
      - F-33120r568175_fix
  block:
    ansible.builtin.debug:
      msg: > 
       Description:
          To ensure RHEL 8 systems have a sufficient storage capacity in which to write the audit logs, RHEL 8
          needs to be able to allocate audit record storage capacity.

          The task of allocating audit record storage capacity is usually performed during initial
          installation of RHEL 8.
        Check:
          Verify RHEL 8 allocates audit record storage capacity to store at least one week of audit records
          when audit records are not immediately sent to a central audit record storage facility.

          Determine to which partition the audit records are being written with the following command:

          $ sudo grep -iw log_file /etc/audit/auditd.conf
          log_file = /var/log/audit/audit.log

          Check the size of the partition to which audit records are written (with the example being
          /var/log/audit/) with the following command:

          $ sudo df -h /var/log/audit/
          /dev/sda2 24G 10.4G 13.6G 43% /var/log/audit

          If the audit records are not written to a partition made specifically for audit records
          (/var/log/audit is a separate partition), determine the amount of space being used by other files in
          the partition with the following command:

          $ sudo du -sh [audit_partition]
          1.8G /var/log/audit

          If the audit record partition is not allocated for sufficient storage capacity, this is a finding.

          Note: The partition size needed to capture a week of audit records is based on the activity level of
          the system and the total storage capacity available. Typically 10.0 GB of storage space for audit
          records should be sufficient.
        Fix:
          Allocate enough storage capacity for at least one week of audit records when audit records are not
          immediately sent to a central audit record storage facility.

          If audit records are stored on a partition made specifically for audit records, resize the partition
          with sufficient space to contain one week of audit records.

          If audit records are not stored on a partition made specifically for audit records, a new partition
          with sufficient space will need be to be created.